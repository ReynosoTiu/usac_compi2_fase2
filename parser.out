Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CARACTER
    Rcase
    Rdefault
    Rmain
    Rnew
    Rread
    Rswitch

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> imprimir_instr
Rule 5     instruccion -> declaracion
Rule 6     instruccion -> declaracion_sinAsig
Rule 7     instruccion -> asignacion
Rule 8     instruccion -> if
Rule 9     instruccion -> break
Rule 10    instruccion -> while
Rule 11    instruccion -> tipo_incremento
Rule 12    instruccion -> for
Rule 13    instruccion -> continue
Rule 14    instruccion -> funcion
Rule 15    instruccion -> retorno
Rule 16    instruccion -> llamada
Rule 17    instruccion -> declaracion_arreglo
Rule 18    instruccion -> declaracion_arreglo2
Rule 19    instruccion -> modificar_arreglo
Rule 20    instruccion -> error errores
Rule 21    errores -> PUNTOCOMA
Rule 22    errores -> LLAVEC
Rule 23    imprimir_instr -> Rconsole PUNTO Rlog PARA imprimir_listas PARC fin_instr
Rule 24    imprimir_listas -> imprimir_listas COMA expresion
Rule 25    imprimir_listas -> expresion
Rule 26    declaracion -> Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr
Rule 27    declaracion -> Rlet ID IGUAL expresion fin_instr
Rule 28    tipo -> Rnumber
Rule 29    tipo -> Rboolean
Rule 30    tipo -> Rstring
Rule 31    tipo -> Rany
Rule 32    tipo -> Rvoid
Rule 33    declaracion_sinAsig -> Rlet ID DOSPUNTO tipo fin_instr
Rule 34    declaracion_sinAsig -> Rlet ID fin_instr
Rule 35    asignacion -> ID IGUAL expresion fin_instr
Rule 36    if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC
Rule 37    if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC
Rule 38    if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse if
Rule 39    break -> Rbreak fin_instr
Rule 40    while -> Rwhile PARA expresion PARC LLAVEA instrucciones LLAVEC
Rule 41    tipo_incremento -> ID MASMAS fin_instr
Rule 42    tipo_incremento -> ID MENOSMENOS fin_instr
Rule 43    for -> Rfor PARA declar_asig expresion fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC
Rule 44    declar_asig -> declaracion
Rule 45    declar_asig -> asignacion
Rule 46    actualizacion -> asignacion
Rule 47    actualizacion -> tipo_incremento
Rule 48    continue -> Rcontinue fin_instr
Rule 49    fin_instr -> PUNTOCOMA
Rule 50    fin_instr -> <empty>
Rule 51    funcion -> Rfunc ID PARA parametros PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
Rule 52    funcion -> Rfunc ID PARA PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
Rule 53    funcion -> Rfunc ID PARA parametros PARC LLAVEA instrucciones LLAVEC
Rule 54    funcion -> Rfunc ID PARA PARC LLAVEA instrucciones LLAVEC
Rule 55    parametros -> parametros COMA parametro
Rule 56    parametros -> parametro
Rule 57    parametro -> ID DOSPUNTO tipo
Rule 58    parametro -> ID DOSPUNTO tipo lista_Dim
Rule 59    retorno -> Rreturn expresion fin_instr
Rule 60    llamada -> ID PARA parametros_llamada PARC fin_instr
Rule 61    llamada -> ID PARA PARC fin_instr
Rule 62    parametros_llamada -> parametros_llamada COMA parametro_llam
Rule 63    parametros_llamada -> parametro_llam
Rule 64    parametro_llam -> expresion
Rule 65    declaracion_arreglo -> Rlet ID DOSPUNTO tipo lista_expresiones fin_instr
Rule 66    lista_Dim -> lista_Dim CORA CORC
Rule 67    lista_Dim -> CORA CORC
Rule 68    lista_expresiones -> lista_expresiones CORA expresion CORC
Rule 69    lista_expresiones -> CORA expresion CORC
Rule 70    declaracion_arreglo2 -> Rlet ID IGUAL CORA tipo_lista CORC fin_instr
Rule 71    declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista CORC fin_instr
Rule 72    declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista CORC fin_instr
Rule 73    declaracion_arreglo2 -> tipo lista_Dim ID IGUAL ID
Rule 74    tipo_lista -> d1
Rule 75    tipo_lista -> d2
Rule 76    tipo_lista -> d3
Rule 77    d1 -> d1 COMA expresion
Rule 78    d1 -> expresion
Rule 79    d2 -> d2 COMA LLAVEA d1 LLAVEC
Rule 80    d2 -> LLAVEA d1 LLAVEC
Rule 81    d3 -> d3 COMA LLAVEA d2 LLAVEC
Rule 82    d3 -> LLAVEA d2 LLAVEC
Rule 83    modificar_arreglo -> ID lista_expresiones IGUAL expresion fin_instr
Rule 84    expresion -> expresion MAS expresion
Rule 85    expresion -> expresion MENOS expresion
Rule 86    expresion -> expresion POR expresion
Rule 87    expresion -> expresion DIV expresion
Rule 88    expresion -> expresion POT expresion
Rule 89    expresion -> expresion MOD expresion
Rule 90    expresion -> expresion MENORIGUAL expresion
Rule 91    expresion -> expresion MENOR expresion
Rule 92    expresion -> expresion MAYORIGUAL expresion
Rule 93    expresion -> expresion MAYOR expresion
Rule 94    expresion -> expresion IGUALIGUAL expresion
Rule 95    expresion -> expresion DISTINTO expresion
Rule 96    expresion -> expresion AND expresion
Rule 97    expresion -> expresion OR expresion
Rule 98    expresion -> MENOS expresion
Rule 99    expresion -> NOT expresion
Rule 100   expresion -> PARA expresion PARC
Rule 101   expresion -> ENTERO
Rule 102   expresion -> DECIMAL
Rule 103   expresion -> CADENA
Rule 104   expresion -> Rtrue
Rule 105   expresion -> Rfalse
Rule 106   expresion -> ID
Rule 107   expresion -> Rnull
Rule 108   expresion -> llamada
Rule 109   expresion -> PARA tipo PARC expresion
Rule 110   expresion -> ID lista_expresiones
Rule 111   expresion -> ID PUNTO RtoFixed PARA expresion PARC
Rule 112   expresion -> ID PUNTO RtoExponential PARA expresion PARC
Rule 113   expresion -> ID PUNTO RtoString PARA PARC
Rule 114   expresion -> ID PUNTO RtoLowerCase PARA PARC
Rule 115   expresion -> ID PUNTO RtoUpperCase PARA PARC
Rule 116   expresion -> ID PUNTO Rlength PARA PARC
Rule 117   expresion -> ID PUNTO Rsplit PARA expresion PARC

Terminals, with rules where they appear

AND                  : 96
CADENA               : 103
CARACTER             : 
COMA                 : 24 55 62 77 79 81
CORA                 : 66 67 68 69 70 71 72
CORC                 : 66 67 68 69 70 71 72
DECIMAL              : 102
DISTINTO             : 95
DIV                  : 87
DOSPUNTO             : 26 33 51 52 57 58 65 71 72
ENTERO               : 101
ID                   : 26 27 33 34 35 41 42 51 52 53 54 57 58 60 61 65 70 71 72 73 73 83 106 110 111 112 113 114 115 116 117
IGUAL                : 26 27 35 70 71 72 73 83
IGUALIGUAL           : 94
LLAVEA               : 36 37 37 38 40 43 51 52 53 54 79 80 81 82
LLAVEC               : 22 36 37 37 38 40 43 51 52 53 54 79 80 81 82
MAS                  : 84
MASMAS               : 41
MAYOR                : 93
MAYORIGUAL           : 92
MENOR                : 91
MENORIGUAL           : 90
MENOS                : 85 98
MENOSMENOS           : 42
MOD                  : 89
NOT                  : 99
OR                   : 97
PARA                 : 23 36 37 38 40 43 51 52 53 54 60 61 100 109 111 112 113 114 115 116 117
PARC                 : 23 36 37 38 40 43 51 52 53 54 60 61 100 109 111 112 113 114 115 116 117
POR                  : 86
POT                  : 88
PUNTO                : 23 111 112 113 114 115 116 117
PUNTOCOMA            : 21 49
Rany                 : 31
Rboolean             : 29
Rbreak               : 39
Rcase                : 
Rconsole             : 23
Rcontinue            : 48
Rdefault             : 
Relse                : 37 38
Rfalse               : 105
Rfor                 : 43
Rfunc                : 51 52 53 54
Rif                  : 36 37 38
Rlength              : 116
Rlet                 : 26 27 33 34 65 70 71 72
Rlog                 : 23
Rmain                : 
Rnew                 : 
Rnull                : 107
Rnumber              : 28
Rread                : 
Rreturn              : 59
Rsplit               : 117
Rstring              : 30
Rswitch              : 
RtoExponential       : 112
RtoFixed             : 111
RtoLowerCase         : 114
RtoString            : 113
RtoUpperCase         : 115
Rtrue                : 104
Rvoid                : 32
Rwhile               : 40
error                : 20

Nonterminals, with rules where they appear

actualizacion        : 43
asignacion           : 7 45 46
break                : 9
continue             : 13
d1                   : 74 77 79 80
d2                   : 75 79 81 82
d3                   : 76 81
declar_asig          : 43
declaracion          : 5 44
declaracion_arreglo  : 17
declaracion_arreglo2 : 18
declaracion_sinAsig  : 6
errores              : 20
expresion            : 24 25 26 27 35 36 37 38 40 43 59 64 68 69 77 78 83 84 84 85 85 86 86 87 87 88 88 89 89 90 90 91 91 92 92 93 93 94 94 95 95 96 96 97 97 98 99 100 109 111 112 117
fin_instr            : 23 26 27 33 34 35 39 41 42 43 48 59 60 61 65 70 71 72 83
for                  : 12
funcion              : 14
if                   : 8 38
imprimir_instr       : 4
imprimir_listas      : 23 24
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2 36 37 37 38 40 43 51 52 53 54
lista_Dim            : 58 66 71 73
lista_expresiones    : 65 68 72 83 110
llamada              : 16 108
modificar_arreglo    : 19
parametro            : 55 56
parametro_llam       : 62 63
parametros           : 51 53 55
parametros_llamada   : 60 62
retorno              : 15
tipo                 : 26 33 51 52 57 58 65 71 72 73 109
tipo_incremento      : 11 47
tipo_lista           : 70 71 72
while                : 10

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion
    (6) instruccion -> . declaracion_sinAsig
    (7) instruccion -> . asignacion
    (8) instruccion -> . if
    (9) instruccion -> . break
    (10) instruccion -> . while
    (11) instruccion -> . tipo_incremento
    (12) instruccion -> . for
    (13) instruccion -> . continue
    (14) instruccion -> . funcion
    (15) instruccion -> . retorno
    (16) instruccion -> . llamada
    (17) instruccion -> . declaracion_arreglo
    (18) instruccion -> . declaracion_arreglo2
    (19) instruccion -> . modificar_arreglo
    (20) instruccion -> . error errores
    (23) imprimir_instr -> . Rconsole PUNTO Rlog PARA imprimir_listas PARC fin_instr
    (26) declaracion -> . Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr
    (27) declaracion -> . Rlet ID IGUAL expresion fin_instr
    (33) declaracion_sinAsig -> . Rlet ID DOSPUNTO tipo fin_instr
    (34) declaracion_sinAsig -> . Rlet ID fin_instr
    (35) asignacion -> . ID IGUAL expresion fin_instr
    (36) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC
    (37) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC
    (38) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse if
    (39) break -> . Rbreak fin_instr
    (40) while -> . Rwhile PARA expresion PARC LLAVEA instrucciones LLAVEC
    (41) tipo_incremento -> . ID MASMAS fin_instr
    (42) tipo_incremento -> . ID MENOSMENOS fin_instr
    (43) for -> . Rfor PARA declar_asig expresion fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC
    (48) continue -> . Rcontinue fin_instr
    (51) funcion -> . Rfunc ID PARA parametros PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (52) funcion -> . Rfunc ID PARA PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (53) funcion -> . Rfunc ID PARA parametros PARC LLAVEA instrucciones LLAVEC
    (54) funcion -> . Rfunc ID PARA PARC LLAVEA instrucciones LLAVEC
    (59) retorno -> . Rreturn expresion fin_instr
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr
    (65) declaracion_arreglo -> . Rlet ID DOSPUNTO tipo lista_expresiones fin_instr
    (70) declaracion_arreglo2 -> . Rlet ID IGUAL CORA tipo_lista CORC fin_instr
    (71) declaracion_arreglo2 -> . Rlet ID DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista CORC fin_instr
    (72) declaracion_arreglo2 -> . Rlet ID DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista CORC fin_instr
    (73) declaracion_arreglo2 -> . tipo lista_Dim ID IGUAL ID
    (83) modificar_arreglo -> . ID lista_expresiones IGUAL expresion fin_instr
    (28) tipo -> . Rnumber
    (29) tipo -> . Rboolean
    (30) tipo -> . Rstring
    (31) tipo -> . Rany
    (32) tipo -> . Rvoid

    error           shift and go to state 20
    Rconsole        shift and go to state 21
    Rlet            shift and go to state 22
    ID              shift and go to state 23
    Rif             shift and go to state 25
    Rbreak          shift and go to state 26
    Rwhile          shift and go to state 27
    Rfor            shift and go to state 28
    Rcontinue       shift and go to state 29
    Rfunc           shift and go to state 30
    Rreturn         shift and go to state 31
    Rnumber         shift and go to state 32
    Rboolean        shift and go to state 33
    Rstring         shift and go to state 34
    Rany            shift and go to state 35
    Rvoid           shift and go to state 36

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    declaracion                    shift and go to state 5
    declaracion_sinAsig            shift and go to state 6
    asignacion                     shift and go to state 7
    if                             shift and go to state 8
    break                          shift and go to state 9
    while                          shift and go to state 10
    tipo_incremento                shift and go to state 11
    for                            shift and go to state 12
    continue                       shift and go to state 13
    funcion                        shift and go to state 14
    retorno                        shift and go to state 15
    llamada                        shift and go to state 16
    declaracion_arreglo            shift and go to state 17
    declaracion_arreglo2           shift and go to state 18
    modificar_arreglo              shift and go to state 19
    tipo                           shift and go to state 24

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion
    (6) instruccion -> . declaracion_sinAsig
    (7) instruccion -> . asignacion
    (8) instruccion -> . if
    (9) instruccion -> . break
    (10) instruccion -> . while
    (11) instruccion -> . tipo_incremento
    (12) instruccion -> . for
    (13) instruccion -> . continue
    (14) instruccion -> . funcion
    (15) instruccion -> . retorno
    (16) instruccion -> . llamada
    (17) instruccion -> . declaracion_arreglo
    (18) instruccion -> . declaracion_arreglo2
    (19) instruccion -> . modificar_arreglo
    (20) instruccion -> . error errores
    (23) imprimir_instr -> . Rconsole PUNTO Rlog PARA imprimir_listas PARC fin_instr
    (26) declaracion -> . Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr
    (27) declaracion -> . Rlet ID IGUAL expresion fin_instr
    (33) declaracion_sinAsig -> . Rlet ID DOSPUNTO tipo fin_instr
    (34) declaracion_sinAsig -> . Rlet ID fin_instr
    (35) asignacion -> . ID IGUAL expresion fin_instr
    (36) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC
    (37) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC
    (38) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse if
    (39) break -> . Rbreak fin_instr
    (40) while -> . Rwhile PARA expresion PARC LLAVEA instrucciones LLAVEC
    (41) tipo_incremento -> . ID MASMAS fin_instr
    (42) tipo_incremento -> . ID MENOSMENOS fin_instr
    (43) for -> . Rfor PARA declar_asig expresion fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC
    (48) continue -> . Rcontinue fin_instr
    (51) funcion -> . Rfunc ID PARA parametros PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (52) funcion -> . Rfunc ID PARA PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (53) funcion -> . Rfunc ID PARA parametros PARC LLAVEA instrucciones LLAVEC
    (54) funcion -> . Rfunc ID PARA PARC LLAVEA instrucciones LLAVEC
    (59) retorno -> . Rreturn expresion fin_instr
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr
    (65) declaracion_arreglo -> . Rlet ID DOSPUNTO tipo lista_expresiones fin_instr
    (70) declaracion_arreglo2 -> . Rlet ID IGUAL CORA tipo_lista CORC fin_instr
    (71) declaracion_arreglo2 -> . Rlet ID DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista CORC fin_instr
    (72) declaracion_arreglo2 -> . Rlet ID DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista CORC fin_instr
    (73) declaracion_arreglo2 -> . tipo lista_Dim ID IGUAL ID
    (83) modificar_arreglo -> . ID lista_expresiones IGUAL expresion fin_instr
    (28) tipo -> . Rnumber
    (29) tipo -> . Rboolean
    (30) tipo -> . Rstring
    (31) tipo -> . Rany
    (32) tipo -> . Rvoid

    $end            reduce using rule 1 (init -> instrucciones .)
    error           shift and go to state 20
    Rconsole        shift and go to state 21
    Rlet            shift and go to state 22
    ID              shift and go to state 23
    Rif             shift and go to state 25
    Rbreak          shift and go to state 26
    Rwhile          shift and go to state 27
    Rfor            shift and go to state 28
    Rcontinue       shift and go to state 29
    Rfunc           shift and go to state 30
    Rreturn         shift and go to state 31
    Rnumber         shift and go to state 32
    Rboolean        shift and go to state 33
    Rstring         shift and go to state 34
    Rany            shift and go to state 35
    Rvoid           shift and go to state 36

    instruccion                    shift and go to state 37
    imprimir_instr                 shift and go to state 4
    declaracion                    shift and go to state 5
    declaracion_sinAsig            shift and go to state 6
    asignacion                     shift and go to state 7
    if                             shift and go to state 8
    break                          shift and go to state 9
    while                          shift and go to state 10
    tipo_incremento                shift and go to state 11
    for                            shift and go to state 12
    continue                       shift and go to state 13
    funcion                        shift and go to state 14
    retorno                        shift and go to state 15
    llamada                        shift and go to state 16
    declaracion_arreglo            shift and go to state 17
    declaracion_arreglo2           shift and go to state 18
    modificar_arreglo              shift and go to state 19
    tipo                           shift and go to state 24

state 3

    (3) instrucciones -> instruccion .

    error           reduce using rule 3 (instrucciones -> instruccion .)
    Rconsole        reduce using rule 3 (instrucciones -> instruccion .)
    Rlet            reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    Rif             reduce using rule 3 (instrucciones -> instruccion .)
    Rbreak          reduce using rule 3 (instrucciones -> instruccion .)
    Rwhile          reduce using rule 3 (instrucciones -> instruccion .)
    Rfor            reduce using rule 3 (instrucciones -> instruccion .)
    Rcontinue       reduce using rule 3 (instrucciones -> instruccion .)
    Rfunc           reduce using rule 3 (instrucciones -> instruccion .)
    Rreturn         reduce using rule 3 (instrucciones -> instruccion .)
    Rnumber         reduce using rule 3 (instrucciones -> instruccion .)
    Rboolean        reduce using rule 3 (instrucciones -> instruccion .)
    Rstring         reduce using rule 3 (instrucciones -> instruccion .)
    Rany            reduce using rule 3 (instrucciones -> instruccion .)
    Rvoid           reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    LLAVEC          reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> imprimir_instr .

    error           reduce using rule 4 (instruccion -> imprimir_instr .)
    Rconsole        reduce using rule 4 (instruccion -> imprimir_instr .)
    Rlet            reduce using rule 4 (instruccion -> imprimir_instr .)
    ID              reduce using rule 4 (instruccion -> imprimir_instr .)
    Rif             reduce using rule 4 (instruccion -> imprimir_instr .)
    Rbreak          reduce using rule 4 (instruccion -> imprimir_instr .)
    Rwhile          reduce using rule 4 (instruccion -> imprimir_instr .)
    Rfor            reduce using rule 4 (instruccion -> imprimir_instr .)
    Rcontinue       reduce using rule 4 (instruccion -> imprimir_instr .)
    Rfunc           reduce using rule 4 (instruccion -> imprimir_instr .)
    Rreturn         reduce using rule 4 (instruccion -> imprimir_instr .)
    Rnumber         reduce using rule 4 (instruccion -> imprimir_instr .)
    Rboolean        reduce using rule 4 (instruccion -> imprimir_instr .)
    Rstring         reduce using rule 4 (instruccion -> imprimir_instr .)
    Rany            reduce using rule 4 (instruccion -> imprimir_instr .)
    Rvoid           reduce using rule 4 (instruccion -> imprimir_instr .)
    $end            reduce using rule 4 (instruccion -> imprimir_instr .)
    LLAVEC          reduce using rule 4 (instruccion -> imprimir_instr .)


state 5

    (5) instruccion -> declaracion .

    error           reduce using rule 5 (instruccion -> declaracion .)
    Rconsole        reduce using rule 5 (instruccion -> declaracion .)
    Rlet            reduce using rule 5 (instruccion -> declaracion .)
    ID              reduce using rule 5 (instruccion -> declaracion .)
    Rif             reduce using rule 5 (instruccion -> declaracion .)
    Rbreak          reduce using rule 5 (instruccion -> declaracion .)
    Rwhile          reduce using rule 5 (instruccion -> declaracion .)
    Rfor            reduce using rule 5 (instruccion -> declaracion .)
    Rcontinue       reduce using rule 5 (instruccion -> declaracion .)
    Rfunc           reduce using rule 5 (instruccion -> declaracion .)
    Rreturn         reduce using rule 5 (instruccion -> declaracion .)
    Rnumber         reduce using rule 5 (instruccion -> declaracion .)
    Rboolean        reduce using rule 5 (instruccion -> declaracion .)
    Rstring         reduce using rule 5 (instruccion -> declaracion .)
    Rany            reduce using rule 5 (instruccion -> declaracion .)
    Rvoid           reduce using rule 5 (instruccion -> declaracion .)
    $end            reduce using rule 5 (instruccion -> declaracion .)
    LLAVEC          reduce using rule 5 (instruccion -> declaracion .)


state 6

    (6) instruccion -> declaracion_sinAsig .

    error           reduce using rule 6 (instruccion -> declaracion_sinAsig .)
    Rconsole        reduce using rule 6 (instruccion -> declaracion_sinAsig .)
    Rlet            reduce using rule 6 (instruccion -> declaracion_sinAsig .)
    ID              reduce using rule 6 (instruccion -> declaracion_sinAsig .)
    Rif             reduce using rule 6 (instruccion -> declaracion_sinAsig .)
    Rbreak          reduce using rule 6 (instruccion -> declaracion_sinAsig .)
    Rwhile          reduce using rule 6 (instruccion -> declaracion_sinAsig .)
    Rfor            reduce using rule 6 (instruccion -> declaracion_sinAsig .)
    Rcontinue       reduce using rule 6 (instruccion -> declaracion_sinAsig .)
    Rfunc           reduce using rule 6 (instruccion -> declaracion_sinAsig .)
    Rreturn         reduce using rule 6 (instruccion -> declaracion_sinAsig .)
    Rnumber         reduce using rule 6 (instruccion -> declaracion_sinAsig .)
    Rboolean        reduce using rule 6 (instruccion -> declaracion_sinAsig .)
    Rstring         reduce using rule 6 (instruccion -> declaracion_sinAsig .)
    Rany            reduce using rule 6 (instruccion -> declaracion_sinAsig .)
    Rvoid           reduce using rule 6 (instruccion -> declaracion_sinAsig .)
    $end            reduce using rule 6 (instruccion -> declaracion_sinAsig .)
    LLAVEC          reduce using rule 6 (instruccion -> declaracion_sinAsig .)


state 7

    (7) instruccion -> asignacion .

    error           reduce using rule 7 (instruccion -> asignacion .)
    Rconsole        reduce using rule 7 (instruccion -> asignacion .)
    Rlet            reduce using rule 7 (instruccion -> asignacion .)
    ID              reduce using rule 7 (instruccion -> asignacion .)
    Rif             reduce using rule 7 (instruccion -> asignacion .)
    Rbreak          reduce using rule 7 (instruccion -> asignacion .)
    Rwhile          reduce using rule 7 (instruccion -> asignacion .)
    Rfor            reduce using rule 7 (instruccion -> asignacion .)
    Rcontinue       reduce using rule 7 (instruccion -> asignacion .)
    Rfunc           reduce using rule 7 (instruccion -> asignacion .)
    Rreturn         reduce using rule 7 (instruccion -> asignacion .)
    Rnumber         reduce using rule 7 (instruccion -> asignacion .)
    Rboolean        reduce using rule 7 (instruccion -> asignacion .)
    Rstring         reduce using rule 7 (instruccion -> asignacion .)
    Rany            reduce using rule 7 (instruccion -> asignacion .)
    Rvoid           reduce using rule 7 (instruccion -> asignacion .)
    $end            reduce using rule 7 (instruccion -> asignacion .)
    LLAVEC          reduce using rule 7 (instruccion -> asignacion .)


state 8

    (8) instruccion -> if .

    error           reduce using rule 8 (instruccion -> if .)
    Rconsole        reduce using rule 8 (instruccion -> if .)
    Rlet            reduce using rule 8 (instruccion -> if .)
    ID              reduce using rule 8 (instruccion -> if .)
    Rif             reduce using rule 8 (instruccion -> if .)
    Rbreak          reduce using rule 8 (instruccion -> if .)
    Rwhile          reduce using rule 8 (instruccion -> if .)
    Rfor            reduce using rule 8 (instruccion -> if .)
    Rcontinue       reduce using rule 8 (instruccion -> if .)
    Rfunc           reduce using rule 8 (instruccion -> if .)
    Rreturn         reduce using rule 8 (instruccion -> if .)
    Rnumber         reduce using rule 8 (instruccion -> if .)
    Rboolean        reduce using rule 8 (instruccion -> if .)
    Rstring         reduce using rule 8 (instruccion -> if .)
    Rany            reduce using rule 8 (instruccion -> if .)
    Rvoid           reduce using rule 8 (instruccion -> if .)
    $end            reduce using rule 8 (instruccion -> if .)
    LLAVEC          reduce using rule 8 (instruccion -> if .)


state 9

    (9) instruccion -> break .

    error           reduce using rule 9 (instruccion -> break .)
    Rconsole        reduce using rule 9 (instruccion -> break .)
    Rlet            reduce using rule 9 (instruccion -> break .)
    ID              reduce using rule 9 (instruccion -> break .)
    Rif             reduce using rule 9 (instruccion -> break .)
    Rbreak          reduce using rule 9 (instruccion -> break .)
    Rwhile          reduce using rule 9 (instruccion -> break .)
    Rfor            reduce using rule 9 (instruccion -> break .)
    Rcontinue       reduce using rule 9 (instruccion -> break .)
    Rfunc           reduce using rule 9 (instruccion -> break .)
    Rreturn         reduce using rule 9 (instruccion -> break .)
    Rnumber         reduce using rule 9 (instruccion -> break .)
    Rboolean        reduce using rule 9 (instruccion -> break .)
    Rstring         reduce using rule 9 (instruccion -> break .)
    Rany            reduce using rule 9 (instruccion -> break .)
    Rvoid           reduce using rule 9 (instruccion -> break .)
    $end            reduce using rule 9 (instruccion -> break .)
    LLAVEC          reduce using rule 9 (instruccion -> break .)


state 10

    (10) instruccion -> while .

    error           reduce using rule 10 (instruccion -> while .)
    Rconsole        reduce using rule 10 (instruccion -> while .)
    Rlet            reduce using rule 10 (instruccion -> while .)
    ID              reduce using rule 10 (instruccion -> while .)
    Rif             reduce using rule 10 (instruccion -> while .)
    Rbreak          reduce using rule 10 (instruccion -> while .)
    Rwhile          reduce using rule 10 (instruccion -> while .)
    Rfor            reduce using rule 10 (instruccion -> while .)
    Rcontinue       reduce using rule 10 (instruccion -> while .)
    Rfunc           reduce using rule 10 (instruccion -> while .)
    Rreturn         reduce using rule 10 (instruccion -> while .)
    Rnumber         reduce using rule 10 (instruccion -> while .)
    Rboolean        reduce using rule 10 (instruccion -> while .)
    Rstring         reduce using rule 10 (instruccion -> while .)
    Rany            reduce using rule 10 (instruccion -> while .)
    Rvoid           reduce using rule 10 (instruccion -> while .)
    $end            reduce using rule 10 (instruccion -> while .)
    LLAVEC          reduce using rule 10 (instruccion -> while .)


state 11

    (11) instruccion -> tipo_incremento .

    error           reduce using rule 11 (instruccion -> tipo_incremento .)
    Rconsole        reduce using rule 11 (instruccion -> tipo_incremento .)
    Rlet            reduce using rule 11 (instruccion -> tipo_incremento .)
    ID              reduce using rule 11 (instruccion -> tipo_incremento .)
    Rif             reduce using rule 11 (instruccion -> tipo_incremento .)
    Rbreak          reduce using rule 11 (instruccion -> tipo_incremento .)
    Rwhile          reduce using rule 11 (instruccion -> tipo_incremento .)
    Rfor            reduce using rule 11 (instruccion -> tipo_incremento .)
    Rcontinue       reduce using rule 11 (instruccion -> tipo_incremento .)
    Rfunc           reduce using rule 11 (instruccion -> tipo_incremento .)
    Rreturn         reduce using rule 11 (instruccion -> tipo_incremento .)
    Rnumber         reduce using rule 11 (instruccion -> tipo_incremento .)
    Rboolean        reduce using rule 11 (instruccion -> tipo_incremento .)
    Rstring         reduce using rule 11 (instruccion -> tipo_incremento .)
    Rany            reduce using rule 11 (instruccion -> tipo_incremento .)
    Rvoid           reduce using rule 11 (instruccion -> tipo_incremento .)
    $end            reduce using rule 11 (instruccion -> tipo_incremento .)
    LLAVEC          reduce using rule 11 (instruccion -> tipo_incremento .)


state 12

    (12) instruccion -> for .

    error           reduce using rule 12 (instruccion -> for .)
    Rconsole        reduce using rule 12 (instruccion -> for .)
    Rlet            reduce using rule 12 (instruccion -> for .)
    ID              reduce using rule 12 (instruccion -> for .)
    Rif             reduce using rule 12 (instruccion -> for .)
    Rbreak          reduce using rule 12 (instruccion -> for .)
    Rwhile          reduce using rule 12 (instruccion -> for .)
    Rfor            reduce using rule 12 (instruccion -> for .)
    Rcontinue       reduce using rule 12 (instruccion -> for .)
    Rfunc           reduce using rule 12 (instruccion -> for .)
    Rreturn         reduce using rule 12 (instruccion -> for .)
    Rnumber         reduce using rule 12 (instruccion -> for .)
    Rboolean        reduce using rule 12 (instruccion -> for .)
    Rstring         reduce using rule 12 (instruccion -> for .)
    Rany            reduce using rule 12 (instruccion -> for .)
    Rvoid           reduce using rule 12 (instruccion -> for .)
    $end            reduce using rule 12 (instruccion -> for .)
    LLAVEC          reduce using rule 12 (instruccion -> for .)


state 13

    (13) instruccion -> continue .

    error           reduce using rule 13 (instruccion -> continue .)
    Rconsole        reduce using rule 13 (instruccion -> continue .)
    Rlet            reduce using rule 13 (instruccion -> continue .)
    ID              reduce using rule 13 (instruccion -> continue .)
    Rif             reduce using rule 13 (instruccion -> continue .)
    Rbreak          reduce using rule 13 (instruccion -> continue .)
    Rwhile          reduce using rule 13 (instruccion -> continue .)
    Rfor            reduce using rule 13 (instruccion -> continue .)
    Rcontinue       reduce using rule 13 (instruccion -> continue .)
    Rfunc           reduce using rule 13 (instruccion -> continue .)
    Rreturn         reduce using rule 13 (instruccion -> continue .)
    Rnumber         reduce using rule 13 (instruccion -> continue .)
    Rboolean        reduce using rule 13 (instruccion -> continue .)
    Rstring         reduce using rule 13 (instruccion -> continue .)
    Rany            reduce using rule 13 (instruccion -> continue .)
    Rvoid           reduce using rule 13 (instruccion -> continue .)
    $end            reduce using rule 13 (instruccion -> continue .)
    LLAVEC          reduce using rule 13 (instruccion -> continue .)


state 14

    (14) instruccion -> funcion .

    error           reduce using rule 14 (instruccion -> funcion .)
    Rconsole        reduce using rule 14 (instruccion -> funcion .)
    Rlet            reduce using rule 14 (instruccion -> funcion .)
    ID              reduce using rule 14 (instruccion -> funcion .)
    Rif             reduce using rule 14 (instruccion -> funcion .)
    Rbreak          reduce using rule 14 (instruccion -> funcion .)
    Rwhile          reduce using rule 14 (instruccion -> funcion .)
    Rfor            reduce using rule 14 (instruccion -> funcion .)
    Rcontinue       reduce using rule 14 (instruccion -> funcion .)
    Rfunc           reduce using rule 14 (instruccion -> funcion .)
    Rreturn         reduce using rule 14 (instruccion -> funcion .)
    Rnumber         reduce using rule 14 (instruccion -> funcion .)
    Rboolean        reduce using rule 14 (instruccion -> funcion .)
    Rstring         reduce using rule 14 (instruccion -> funcion .)
    Rany            reduce using rule 14 (instruccion -> funcion .)
    Rvoid           reduce using rule 14 (instruccion -> funcion .)
    $end            reduce using rule 14 (instruccion -> funcion .)
    LLAVEC          reduce using rule 14 (instruccion -> funcion .)


state 15

    (15) instruccion -> retorno .

    error           reduce using rule 15 (instruccion -> retorno .)
    Rconsole        reduce using rule 15 (instruccion -> retorno .)
    Rlet            reduce using rule 15 (instruccion -> retorno .)
    ID              reduce using rule 15 (instruccion -> retorno .)
    Rif             reduce using rule 15 (instruccion -> retorno .)
    Rbreak          reduce using rule 15 (instruccion -> retorno .)
    Rwhile          reduce using rule 15 (instruccion -> retorno .)
    Rfor            reduce using rule 15 (instruccion -> retorno .)
    Rcontinue       reduce using rule 15 (instruccion -> retorno .)
    Rfunc           reduce using rule 15 (instruccion -> retorno .)
    Rreturn         reduce using rule 15 (instruccion -> retorno .)
    Rnumber         reduce using rule 15 (instruccion -> retorno .)
    Rboolean        reduce using rule 15 (instruccion -> retorno .)
    Rstring         reduce using rule 15 (instruccion -> retorno .)
    Rany            reduce using rule 15 (instruccion -> retorno .)
    Rvoid           reduce using rule 15 (instruccion -> retorno .)
    $end            reduce using rule 15 (instruccion -> retorno .)
    LLAVEC          reduce using rule 15 (instruccion -> retorno .)


state 16

    (16) instruccion -> llamada .

    error           reduce using rule 16 (instruccion -> llamada .)
    Rconsole        reduce using rule 16 (instruccion -> llamada .)
    Rlet            reduce using rule 16 (instruccion -> llamada .)
    ID              reduce using rule 16 (instruccion -> llamada .)
    Rif             reduce using rule 16 (instruccion -> llamada .)
    Rbreak          reduce using rule 16 (instruccion -> llamada .)
    Rwhile          reduce using rule 16 (instruccion -> llamada .)
    Rfor            reduce using rule 16 (instruccion -> llamada .)
    Rcontinue       reduce using rule 16 (instruccion -> llamada .)
    Rfunc           reduce using rule 16 (instruccion -> llamada .)
    Rreturn         reduce using rule 16 (instruccion -> llamada .)
    Rnumber         reduce using rule 16 (instruccion -> llamada .)
    Rboolean        reduce using rule 16 (instruccion -> llamada .)
    Rstring         reduce using rule 16 (instruccion -> llamada .)
    Rany            reduce using rule 16 (instruccion -> llamada .)
    Rvoid           reduce using rule 16 (instruccion -> llamada .)
    $end            reduce using rule 16 (instruccion -> llamada .)
    LLAVEC          reduce using rule 16 (instruccion -> llamada .)


state 17

    (17) instruccion -> declaracion_arreglo .

    error           reduce using rule 17 (instruccion -> declaracion_arreglo .)
    Rconsole        reduce using rule 17 (instruccion -> declaracion_arreglo .)
    Rlet            reduce using rule 17 (instruccion -> declaracion_arreglo .)
    ID              reduce using rule 17 (instruccion -> declaracion_arreglo .)
    Rif             reduce using rule 17 (instruccion -> declaracion_arreglo .)
    Rbreak          reduce using rule 17 (instruccion -> declaracion_arreglo .)
    Rwhile          reduce using rule 17 (instruccion -> declaracion_arreglo .)
    Rfor            reduce using rule 17 (instruccion -> declaracion_arreglo .)
    Rcontinue       reduce using rule 17 (instruccion -> declaracion_arreglo .)
    Rfunc           reduce using rule 17 (instruccion -> declaracion_arreglo .)
    Rreturn         reduce using rule 17 (instruccion -> declaracion_arreglo .)
    Rnumber         reduce using rule 17 (instruccion -> declaracion_arreglo .)
    Rboolean        reduce using rule 17 (instruccion -> declaracion_arreglo .)
    Rstring         reduce using rule 17 (instruccion -> declaracion_arreglo .)
    Rany            reduce using rule 17 (instruccion -> declaracion_arreglo .)
    Rvoid           reduce using rule 17 (instruccion -> declaracion_arreglo .)
    $end            reduce using rule 17 (instruccion -> declaracion_arreglo .)
    LLAVEC          reduce using rule 17 (instruccion -> declaracion_arreglo .)


state 18

    (18) instruccion -> declaracion_arreglo2 .

    error           reduce using rule 18 (instruccion -> declaracion_arreglo2 .)
    Rconsole        reduce using rule 18 (instruccion -> declaracion_arreglo2 .)
    Rlet            reduce using rule 18 (instruccion -> declaracion_arreglo2 .)
    ID              reduce using rule 18 (instruccion -> declaracion_arreglo2 .)
    Rif             reduce using rule 18 (instruccion -> declaracion_arreglo2 .)
    Rbreak          reduce using rule 18 (instruccion -> declaracion_arreglo2 .)
    Rwhile          reduce using rule 18 (instruccion -> declaracion_arreglo2 .)
    Rfor            reduce using rule 18 (instruccion -> declaracion_arreglo2 .)
    Rcontinue       reduce using rule 18 (instruccion -> declaracion_arreglo2 .)
    Rfunc           reduce using rule 18 (instruccion -> declaracion_arreglo2 .)
    Rreturn         reduce using rule 18 (instruccion -> declaracion_arreglo2 .)
    Rnumber         reduce using rule 18 (instruccion -> declaracion_arreglo2 .)
    Rboolean        reduce using rule 18 (instruccion -> declaracion_arreglo2 .)
    Rstring         reduce using rule 18 (instruccion -> declaracion_arreglo2 .)
    Rany            reduce using rule 18 (instruccion -> declaracion_arreglo2 .)
    Rvoid           reduce using rule 18 (instruccion -> declaracion_arreglo2 .)
    $end            reduce using rule 18 (instruccion -> declaracion_arreglo2 .)
    LLAVEC          reduce using rule 18 (instruccion -> declaracion_arreglo2 .)


state 19

    (19) instruccion -> modificar_arreglo .

    error           reduce using rule 19 (instruccion -> modificar_arreglo .)
    Rconsole        reduce using rule 19 (instruccion -> modificar_arreglo .)
    Rlet            reduce using rule 19 (instruccion -> modificar_arreglo .)
    ID              reduce using rule 19 (instruccion -> modificar_arreglo .)
    Rif             reduce using rule 19 (instruccion -> modificar_arreglo .)
    Rbreak          reduce using rule 19 (instruccion -> modificar_arreglo .)
    Rwhile          reduce using rule 19 (instruccion -> modificar_arreglo .)
    Rfor            reduce using rule 19 (instruccion -> modificar_arreglo .)
    Rcontinue       reduce using rule 19 (instruccion -> modificar_arreglo .)
    Rfunc           reduce using rule 19 (instruccion -> modificar_arreglo .)
    Rreturn         reduce using rule 19 (instruccion -> modificar_arreglo .)
    Rnumber         reduce using rule 19 (instruccion -> modificar_arreglo .)
    Rboolean        reduce using rule 19 (instruccion -> modificar_arreglo .)
    Rstring         reduce using rule 19 (instruccion -> modificar_arreglo .)
    Rany            reduce using rule 19 (instruccion -> modificar_arreglo .)
    Rvoid           reduce using rule 19 (instruccion -> modificar_arreglo .)
    $end            reduce using rule 19 (instruccion -> modificar_arreglo .)
    LLAVEC          reduce using rule 19 (instruccion -> modificar_arreglo .)


state 20

    (20) instruccion -> error . errores
    (21) errores -> . PUNTOCOMA
    (22) errores -> . LLAVEC

    PUNTOCOMA       shift and go to state 39
    LLAVEC          shift and go to state 40

    errores                        shift and go to state 38

state 21

    (23) imprimir_instr -> Rconsole . PUNTO Rlog PARA imprimir_listas PARC fin_instr

    PUNTO           shift and go to state 41


state 22

    (26) declaracion -> Rlet . ID DOSPUNTO tipo IGUAL expresion fin_instr
    (27) declaracion -> Rlet . ID IGUAL expresion fin_instr
    (33) declaracion_sinAsig -> Rlet . ID DOSPUNTO tipo fin_instr
    (34) declaracion_sinAsig -> Rlet . ID fin_instr
    (65) declaracion_arreglo -> Rlet . ID DOSPUNTO tipo lista_expresiones fin_instr
    (70) declaracion_arreglo2 -> Rlet . ID IGUAL CORA tipo_lista CORC fin_instr
    (71) declaracion_arreglo2 -> Rlet . ID DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista CORC fin_instr
    (72) declaracion_arreglo2 -> Rlet . ID DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista CORC fin_instr

    ID              shift and go to state 42


state 23

    (35) asignacion -> ID . IGUAL expresion fin_instr
    (41) tipo_incremento -> ID . MASMAS fin_instr
    (42) tipo_incremento -> ID . MENOSMENOS fin_instr
    (60) llamada -> ID . PARA parametros_llamada PARC fin_instr
    (61) llamada -> ID . PARA PARC fin_instr
    (83) modificar_arreglo -> ID . lista_expresiones IGUAL expresion fin_instr
    (68) lista_expresiones -> . lista_expresiones CORA expresion CORC
    (69) lista_expresiones -> . CORA expresion CORC

    IGUAL           shift and go to state 43
    MASMAS          shift and go to state 44
    MENOSMENOS      shift and go to state 45
    PARA            shift and go to state 46
    CORA            shift and go to state 48

    lista_expresiones              shift and go to state 47

state 24

    (73) declaracion_arreglo2 -> tipo . lista_Dim ID IGUAL ID
    (66) lista_Dim -> . lista_Dim CORA CORC
    (67) lista_Dim -> . CORA CORC

    CORA            shift and go to state 50

    lista_Dim                      shift and go to state 49

state 25

    (36) if -> Rif . PARA expresion PARC LLAVEA instrucciones LLAVEC
    (37) if -> Rif . PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC
    (38) if -> Rif . PARA expresion PARC LLAVEA instrucciones LLAVEC Relse if

    PARA            shift and go to state 51


state 26

    (39) break -> Rbreak . fin_instr
    (49) fin_instr -> . PUNTOCOMA
    (50) fin_instr -> .

    PUNTOCOMA       shift and go to state 53
    error           reduce using rule 50 (fin_instr -> .)
    Rconsole        reduce using rule 50 (fin_instr -> .)
    Rlet            reduce using rule 50 (fin_instr -> .)
    ID              reduce using rule 50 (fin_instr -> .)
    Rif             reduce using rule 50 (fin_instr -> .)
    Rbreak          reduce using rule 50 (fin_instr -> .)
    Rwhile          reduce using rule 50 (fin_instr -> .)
    Rfor            reduce using rule 50 (fin_instr -> .)
    Rcontinue       reduce using rule 50 (fin_instr -> .)
    Rfunc           reduce using rule 50 (fin_instr -> .)
    Rreturn         reduce using rule 50 (fin_instr -> .)
    Rnumber         reduce using rule 50 (fin_instr -> .)
    Rboolean        reduce using rule 50 (fin_instr -> .)
    Rstring         reduce using rule 50 (fin_instr -> .)
    Rany            reduce using rule 50 (fin_instr -> .)
    Rvoid           reduce using rule 50 (fin_instr -> .)
    $end            reduce using rule 50 (fin_instr -> .)
    LLAVEC          reduce using rule 50 (fin_instr -> .)

    fin_instr                      shift and go to state 52

state 27

    (40) while -> Rwhile . PARA expresion PARC LLAVEA instrucciones LLAVEC

    PARA            shift and go to state 54


state 28

    (43) for -> Rfor . PARA declar_asig expresion fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC

    PARA            shift and go to state 55


state 29

    (48) continue -> Rcontinue . fin_instr
    (49) fin_instr -> . PUNTOCOMA
    (50) fin_instr -> .

    PUNTOCOMA       shift and go to state 53
    error           reduce using rule 50 (fin_instr -> .)
    Rconsole        reduce using rule 50 (fin_instr -> .)
    Rlet            reduce using rule 50 (fin_instr -> .)
    ID              reduce using rule 50 (fin_instr -> .)
    Rif             reduce using rule 50 (fin_instr -> .)
    Rbreak          reduce using rule 50 (fin_instr -> .)
    Rwhile          reduce using rule 50 (fin_instr -> .)
    Rfor            reduce using rule 50 (fin_instr -> .)
    Rcontinue       reduce using rule 50 (fin_instr -> .)
    Rfunc           reduce using rule 50 (fin_instr -> .)
    Rreturn         reduce using rule 50 (fin_instr -> .)
    Rnumber         reduce using rule 50 (fin_instr -> .)
    Rboolean        reduce using rule 50 (fin_instr -> .)
    Rstring         reduce using rule 50 (fin_instr -> .)
    Rany            reduce using rule 50 (fin_instr -> .)
    Rvoid           reduce using rule 50 (fin_instr -> .)
    $end            reduce using rule 50 (fin_instr -> .)
    LLAVEC          reduce using rule 50 (fin_instr -> .)

    fin_instr                      shift and go to state 56

state 30

    (51) funcion -> Rfunc . ID PARA parametros PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (52) funcion -> Rfunc . ID PARA PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (53) funcion -> Rfunc . ID PARA parametros PARC LLAVEA instrucciones LLAVEC
    (54) funcion -> Rfunc . ID PARA PARC LLAVEA instrucciones LLAVEC

    ID              shift and go to state 57


state 31

    (59) retorno -> Rreturn . expresion fin_instr
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    expresion                      shift and go to state 58
    llamada                        shift and go to state 69

state 32

    (28) tipo -> Rnumber .

    CORA            reduce using rule 28 (tipo -> Rnumber .)
    PARC            reduce using rule 28 (tipo -> Rnumber .)
    IGUAL           reduce using rule 28 (tipo -> Rnumber .)
    PUNTOCOMA       reduce using rule 28 (tipo -> Rnumber .)
    error           reduce using rule 28 (tipo -> Rnumber .)
    Rconsole        reduce using rule 28 (tipo -> Rnumber .)
    Rlet            reduce using rule 28 (tipo -> Rnumber .)
    ID              reduce using rule 28 (tipo -> Rnumber .)
    Rif             reduce using rule 28 (tipo -> Rnumber .)
    Rbreak          reduce using rule 28 (tipo -> Rnumber .)
    Rwhile          reduce using rule 28 (tipo -> Rnumber .)
    Rfor            reduce using rule 28 (tipo -> Rnumber .)
    Rcontinue       reduce using rule 28 (tipo -> Rnumber .)
    Rfunc           reduce using rule 28 (tipo -> Rnumber .)
    Rreturn         reduce using rule 28 (tipo -> Rnumber .)
    Rnumber         reduce using rule 28 (tipo -> Rnumber .)
    Rboolean        reduce using rule 28 (tipo -> Rnumber .)
    Rstring         reduce using rule 28 (tipo -> Rnumber .)
    Rany            reduce using rule 28 (tipo -> Rnumber .)
    Rvoid           reduce using rule 28 (tipo -> Rnumber .)
    $end            reduce using rule 28 (tipo -> Rnumber .)
    LLAVEC          reduce using rule 28 (tipo -> Rnumber .)
    COMA            reduce using rule 28 (tipo -> Rnumber .)
    LLAVEA          reduce using rule 28 (tipo -> Rnumber .)


state 33

    (29) tipo -> Rboolean .

    CORA            reduce using rule 29 (tipo -> Rboolean .)
    PARC            reduce using rule 29 (tipo -> Rboolean .)
    IGUAL           reduce using rule 29 (tipo -> Rboolean .)
    PUNTOCOMA       reduce using rule 29 (tipo -> Rboolean .)
    error           reduce using rule 29 (tipo -> Rboolean .)
    Rconsole        reduce using rule 29 (tipo -> Rboolean .)
    Rlet            reduce using rule 29 (tipo -> Rboolean .)
    ID              reduce using rule 29 (tipo -> Rboolean .)
    Rif             reduce using rule 29 (tipo -> Rboolean .)
    Rbreak          reduce using rule 29 (tipo -> Rboolean .)
    Rwhile          reduce using rule 29 (tipo -> Rboolean .)
    Rfor            reduce using rule 29 (tipo -> Rboolean .)
    Rcontinue       reduce using rule 29 (tipo -> Rboolean .)
    Rfunc           reduce using rule 29 (tipo -> Rboolean .)
    Rreturn         reduce using rule 29 (tipo -> Rboolean .)
    Rnumber         reduce using rule 29 (tipo -> Rboolean .)
    Rboolean        reduce using rule 29 (tipo -> Rboolean .)
    Rstring         reduce using rule 29 (tipo -> Rboolean .)
    Rany            reduce using rule 29 (tipo -> Rboolean .)
    Rvoid           reduce using rule 29 (tipo -> Rboolean .)
    $end            reduce using rule 29 (tipo -> Rboolean .)
    LLAVEC          reduce using rule 29 (tipo -> Rboolean .)
    COMA            reduce using rule 29 (tipo -> Rboolean .)
    LLAVEA          reduce using rule 29 (tipo -> Rboolean .)


state 34

    (30) tipo -> Rstring .

    CORA            reduce using rule 30 (tipo -> Rstring .)
    PARC            reduce using rule 30 (tipo -> Rstring .)
    IGUAL           reduce using rule 30 (tipo -> Rstring .)
    PUNTOCOMA       reduce using rule 30 (tipo -> Rstring .)
    error           reduce using rule 30 (tipo -> Rstring .)
    Rconsole        reduce using rule 30 (tipo -> Rstring .)
    Rlet            reduce using rule 30 (tipo -> Rstring .)
    ID              reduce using rule 30 (tipo -> Rstring .)
    Rif             reduce using rule 30 (tipo -> Rstring .)
    Rbreak          reduce using rule 30 (tipo -> Rstring .)
    Rwhile          reduce using rule 30 (tipo -> Rstring .)
    Rfor            reduce using rule 30 (tipo -> Rstring .)
    Rcontinue       reduce using rule 30 (tipo -> Rstring .)
    Rfunc           reduce using rule 30 (tipo -> Rstring .)
    Rreturn         reduce using rule 30 (tipo -> Rstring .)
    Rnumber         reduce using rule 30 (tipo -> Rstring .)
    Rboolean        reduce using rule 30 (tipo -> Rstring .)
    Rstring         reduce using rule 30 (tipo -> Rstring .)
    Rany            reduce using rule 30 (tipo -> Rstring .)
    Rvoid           reduce using rule 30 (tipo -> Rstring .)
    $end            reduce using rule 30 (tipo -> Rstring .)
    LLAVEC          reduce using rule 30 (tipo -> Rstring .)
    COMA            reduce using rule 30 (tipo -> Rstring .)
    LLAVEA          reduce using rule 30 (tipo -> Rstring .)


state 35

    (31) tipo -> Rany .

    CORA            reduce using rule 31 (tipo -> Rany .)
    PARC            reduce using rule 31 (tipo -> Rany .)
    IGUAL           reduce using rule 31 (tipo -> Rany .)
    PUNTOCOMA       reduce using rule 31 (tipo -> Rany .)
    error           reduce using rule 31 (tipo -> Rany .)
    Rconsole        reduce using rule 31 (tipo -> Rany .)
    Rlet            reduce using rule 31 (tipo -> Rany .)
    ID              reduce using rule 31 (tipo -> Rany .)
    Rif             reduce using rule 31 (tipo -> Rany .)
    Rbreak          reduce using rule 31 (tipo -> Rany .)
    Rwhile          reduce using rule 31 (tipo -> Rany .)
    Rfor            reduce using rule 31 (tipo -> Rany .)
    Rcontinue       reduce using rule 31 (tipo -> Rany .)
    Rfunc           reduce using rule 31 (tipo -> Rany .)
    Rreturn         reduce using rule 31 (tipo -> Rany .)
    Rnumber         reduce using rule 31 (tipo -> Rany .)
    Rboolean        reduce using rule 31 (tipo -> Rany .)
    Rstring         reduce using rule 31 (tipo -> Rany .)
    Rany            reduce using rule 31 (tipo -> Rany .)
    Rvoid           reduce using rule 31 (tipo -> Rany .)
    $end            reduce using rule 31 (tipo -> Rany .)
    LLAVEC          reduce using rule 31 (tipo -> Rany .)
    COMA            reduce using rule 31 (tipo -> Rany .)
    LLAVEA          reduce using rule 31 (tipo -> Rany .)


state 36

    (32) tipo -> Rvoid .

    CORA            reduce using rule 32 (tipo -> Rvoid .)
    PARC            reduce using rule 32 (tipo -> Rvoid .)
    IGUAL           reduce using rule 32 (tipo -> Rvoid .)
    PUNTOCOMA       reduce using rule 32 (tipo -> Rvoid .)
    error           reduce using rule 32 (tipo -> Rvoid .)
    Rconsole        reduce using rule 32 (tipo -> Rvoid .)
    Rlet            reduce using rule 32 (tipo -> Rvoid .)
    ID              reduce using rule 32 (tipo -> Rvoid .)
    Rif             reduce using rule 32 (tipo -> Rvoid .)
    Rbreak          reduce using rule 32 (tipo -> Rvoid .)
    Rwhile          reduce using rule 32 (tipo -> Rvoid .)
    Rfor            reduce using rule 32 (tipo -> Rvoid .)
    Rcontinue       reduce using rule 32 (tipo -> Rvoid .)
    Rfunc           reduce using rule 32 (tipo -> Rvoid .)
    Rreturn         reduce using rule 32 (tipo -> Rvoid .)
    Rnumber         reduce using rule 32 (tipo -> Rvoid .)
    Rboolean        reduce using rule 32 (tipo -> Rvoid .)
    Rstring         reduce using rule 32 (tipo -> Rvoid .)
    Rany            reduce using rule 32 (tipo -> Rvoid .)
    Rvoid           reduce using rule 32 (tipo -> Rvoid .)
    $end            reduce using rule 32 (tipo -> Rvoid .)
    LLAVEC          reduce using rule 32 (tipo -> Rvoid .)
    COMA            reduce using rule 32 (tipo -> Rvoid .)
    LLAVEA          reduce using rule 32 (tipo -> Rvoid .)


state 37

    (2) instrucciones -> instrucciones instruccion .

    error           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    Rconsole        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    Rlet            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    Rif             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    Rbreak          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    Rwhile          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    Rfor            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    Rcontinue       reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    Rfunc           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    Rreturn         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    Rnumber         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    Rboolean        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    Rstring         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    Rany            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    Rvoid           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LLAVEC          reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 38

    (20) instruccion -> error errores .

    error           reduce using rule 20 (instruccion -> error errores .)
    Rconsole        reduce using rule 20 (instruccion -> error errores .)
    Rlet            reduce using rule 20 (instruccion -> error errores .)
    ID              reduce using rule 20 (instruccion -> error errores .)
    Rif             reduce using rule 20 (instruccion -> error errores .)
    Rbreak          reduce using rule 20 (instruccion -> error errores .)
    Rwhile          reduce using rule 20 (instruccion -> error errores .)
    Rfor            reduce using rule 20 (instruccion -> error errores .)
    Rcontinue       reduce using rule 20 (instruccion -> error errores .)
    Rfunc           reduce using rule 20 (instruccion -> error errores .)
    Rreturn         reduce using rule 20 (instruccion -> error errores .)
    Rnumber         reduce using rule 20 (instruccion -> error errores .)
    Rboolean        reduce using rule 20 (instruccion -> error errores .)
    Rstring         reduce using rule 20 (instruccion -> error errores .)
    Rany            reduce using rule 20 (instruccion -> error errores .)
    Rvoid           reduce using rule 20 (instruccion -> error errores .)
    $end            reduce using rule 20 (instruccion -> error errores .)
    LLAVEC          reduce using rule 20 (instruccion -> error errores .)


state 39

    (21) errores -> PUNTOCOMA .

    error           reduce using rule 21 (errores -> PUNTOCOMA .)
    Rconsole        reduce using rule 21 (errores -> PUNTOCOMA .)
    Rlet            reduce using rule 21 (errores -> PUNTOCOMA .)
    ID              reduce using rule 21 (errores -> PUNTOCOMA .)
    Rif             reduce using rule 21 (errores -> PUNTOCOMA .)
    Rbreak          reduce using rule 21 (errores -> PUNTOCOMA .)
    Rwhile          reduce using rule 21 (errores -> PUNTOCOMA .)
    Rfor            reduce using rule 21 (errores -> PUNTOCOMA .)
    Rcontinue       reduce using rule 21 (errores -> PUNTOCOMA .)
    Rfunc           reduce using rule 21 (errores -> PUNTOCOMA .)
    Rreturn         reduce using rule 21 (errores -> PUNTOCOMA .)
    Rnumber         reduce using rule 21 (errores -> PUNTOCOMA .)
    Rboolean        reduce using rule 21 (errores -> PUNTOCOMA .)
    Rstring         reduce using rule 21 (errores -> PUNTOCOMA .)
    Rany            reduce using rule 21 (errores -> PUNTOCOMA .)
    Rvoid           reduce using rule 21 (errores -> PUNTOCOMA .)
    $end            reduce using rule 21 (errores -> PUNTOCOMA .)
    LLAVEC          reduce using rule 21 (errores -> PUNTOCOMA .)


state 40

    (22) errores -> LLAVEC .

    error           reduce using rule 22 (errores -> LLAVEC .)
    Rconsole        reduce using rule 22 (errores -> LLAVEC .)
    Rlet            reduce using rule 22 (errores -> LLAVEC .)
    ID              reduce using rule 22 (errores -> LLAVEC .)
    Rif             reduce using rule 22 (errores -> LLAVEC .)
    Rbreak          reduce using rule 22 (errores -> LLAVEC .)
    Rwhile          reduce using rule 22 (errores -> LLAVEC .)
    Rfor            reduce using rule 22 (errores -> LLAVEC .)
    Rcontinue       reduce using rule 22 (errores -> LLAVEC .)
    Rfunc           reduce using rule 22 (errores -> LLAVEC .)
    Rreturn         reduce using rule 22 (errores -> LLAVEC .)
    Rnumber         reduce using rule 22 (errores -> LLAVEC .)
    Rboolean        reduce using rule 22 (errores -> LLAVEC .)
    Rstring         reduce using rule 22 (errores -> LLAVEC .)
    Rany            reduce using rule 22 (errores -> LLAVEC .)
    Rvoid           reduce using rule 22 (errores -> LLAVEC .)
    $end            reduce using rule 22 (errores -> LLAVEC .)
    LLAVEC          reduce using rule 22 (errores -> LLAVEC .)


state 41

    (23) imprimir_instr -> Rconsole PUNTO . Rlog PARA imprimir_listas PARC fin_instr

    Rlog            shift and go to state 70


state 42

    (26) declaracion -> Rlet ID . DOSPUNTO tipo IGUAL expresion fin_instr
    (27) declaracion -> Rlet ID . IGUAL expresion fin_instr
    (33) declaracion_sinAsig -> Rlet ID . DOSPUNTO tipo fin_instr
    (34) declaracion_sinAsig -> Rlet ID . fin_instr
    (65) declaracion_arreglo -> Rlet ID . DOSPUNTO tipo lista_expresiones fin_instr
    (70) declaracion_arreglo2 -> Rlet ID . IGUAL CORA tipo_lista CORC fin_instr
    (71) declaracion_arreglo2 -> Rlet ID . DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista CORC fin_instr
    (72) declaracion_arreglo2 -> Rlet ID . DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista CORC fin_instr
    (49) fin_instr -> . PUNTOCOMA
    (50) fin_instr -> .

    DOSPUNTO        shift and go to state 71
    IGUAL           shift and go to state 72
    PUNTOCOMA       shift and go to state 53
    error           reduce using rule 50 (fin_instr -> .)
    Rconsole        reduce using rule 50 (fin_instr -> .)
    Rlet            reduce using rule 50 (fin_instr -> .)
    ID              reduce using rule 50 (fin_instr -> .)
    Rif             reduce using rule 50 (fin_instr -> .)
    Rbreak          reduce using rule 50 (fin_instr -> .)
    Rwhile          reduce using rule 50 (fin_instr -> .)
    Rfor            reduce using rule 50 (fin_instr -> .)
    Rcontinue       reduce using rule 50 (fin_instr -> .)
    Rfunc           reduce using rule 50 (fin_instr -> .)
    Rreturn         reduce using rule 50 (fin_instr -> .)
    Rnumber         reduce using rule 50 (fin_instr -> .)
    Rboolean        reduce using rule 50 (fin_instr -> .)
    Rstring         reduce using rule 50 (fin_instr -> .)
    Rany            reduce using rule 50 (fin_instr -> .)
    Rvoid           reduce using rule 50 (fin_instr -> .)
    $end            reduce using rule 50 (fin_instr -> .)
    LLAVEC          reduce using rule 50 (fin_instr -> .)

    fin_instr                      shift and go to state 73

state 43

    (35) asignacion -> ID IGUAL . expresion fin_instr
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    expresion                      shift and go to state 74
    llamada                        shift and go to state 69

state 44

    (41) tipo_incremento -> ID MASMAS . fin_instr
    (49) fin_instr -> . PUNTOCOMA
    (50) fin_instr -> .

    PUNTOCOMA       shift and go to state 53
    error           reduce using rule 50 (fin_instr -> .)
    Rconsole        reduce using rule 50 (fin_instr -> .)
    Rlet            reduce using rule 50 (fin_instr -> .)
    ID              reduce using rule 50 (fin_instr -> .)
    Rif             reduce using rule 50 (fin_instr -> .)
    Rbreak          reduce using rule 50 (fin_instr -> .)
    Rwhile          reduce using rule 50 (fin_instr -> .)
    Rfor            reduce using rule 50 (fin_instr -> .)
    Rcontinue       reduce using rule 50 (fin_instr -> .)
    Rfunc           reduce using rule 50 (fin_instr -> .)
    Rreturn         reduce using rule 50 (fin_instr -> .)
    Rnumber         reduce using rule 50 (fin_instr -> .)
    Rboolean        reduce using rule 50 (fin_instr -> .)
    Rstring         reduce using rule 50 (fin_instr -> .)
    Rany            reduce using rule 50 (fin_instr -> .)
    Rvoid           reduce using rule 50 (fin_instr -> .)
    $end            reduce using rule 50 (fin_instr -> .)
    LLAVEC          reduce using rule 50 (fin_instr -> .)
    PARC            reduce using rule 50 (fin_instr -> .)

    fin_instr                      shift and go to state 75

state 45

    (42) tipo_incremento -> ID MENOSMENOS . fin_instr
    (49) fin_instr -> . PUNTOCOMA
    (50) fin_instr -> .

    PUNTOCOMA       shift and go to state 53
    error           reduce using rule 50 (fin_instr -> .)
    Rconsole        reduce using rule 50 (fin_instr -> .)
    Rlet            reduce using rule 50 (fin_instr -> .)
    ID              reduce using rule 50 (fin_instr -> .)
    Rif             reduce using rule 50 (fin_instr -> .)
    Rbreak          reduce using rule 50 (fin_instr -> .)
    Rwhile          reduce using rule 50 (fin_instr -> .)
    Rfor            reduce using rule 50 (fin_instr -> .)
    Rcontinue       reduce using rule 50 (fin_instr -> .)
    Rfunc           reduce using rule 50 (fin_instr -> .)
    Rreturn         reduce using rule 50 (fin_instr -> .)
    Rnumber         reduce using rule 50 (fin_instr -> .)
    Rboolean        reduce using rule 50 (fin_instr -> .)
    Rstring         reduce using rule 50 (fin_instr -> .)
    Rany            reduce using rule 50 (fin_instr -> .)
    Rvoid           reduce using rule 50 (fin_instr -> .)
    $end            reduce using rule 50 (fin_instr -> .)
    LLAVEC          reduce using rule 50 (fin_instr -> .)
    PARC            reduce using rule 50 (fin_instr -> .)

    fin_instr                      shift and go to state 76

state 46

    (60) llamada -> ID PARA . parametros_llamada PARC fin_instr
    (61) llamada -> ID PARA . PARC fin_instr
    (62) parametros_llamada -> . parametros_llamada COMA parametro_llam
    (63) parametros_llamada -> . parametro_llam
    (64) parametro_llam -> . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    PARC            shift and go to state 78
    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    parametros_llamada             shift and go to state 77
    parametro_llam                 shift and go to state 79
    expresion                      shift and go to state 80
    llamada                        shift and go to state 69

state 47

    (83) modificar_arreglo -> ID lista_expresiones . IGUAL expresion fin_instr
    (68) lista_expresiones -> lista_expresiones . CORA expresion CORC

    IGUAL           shift and go to state 81
    CORA            shift and go to state 82


state 48

    (69) lista_expresiones -> CORA . expresion CORC
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    expresion                      shift and go to state 83
    llamada                        shift and go to state 69

state 49

    (73) declaracion_arreglo2 -> tipo lista_Dim . ID IGUAL ID
    (66) lista_Dim -> lista_Dim . CORA CORC

    ID              shift and go to state 84
    CORA            shift and go to state 85


state 50

    (67) lista_Dim -> CORA . CORC

    CORC            shift and go to state 86


state 51

    (36) if -> Rif PARA . expresion PARC LLAVEA instrucciones LLAVEC
    (37) if -> Rif PARA . expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC
    (38) if -> Rif PARA . expresion PARC LLAVEA instrucciones LLAVEC Relse if
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    expresion                      shift and go to state 87
    llamada                        shift and go to state 69

state 52

    (39) break -> Rbreak fin_instr .

    error           reduce using rule 39 (break -> Rbreak fin_instr .)
    Rconsole        reduce using rule 39 (break -> Rbreak fin_instr .)
    Rlet            reduce using rule 39 (break -> Rbreak fin_instr .)
    ID              reduce using rule 39 (break -> Rbreak fin_instr .)
    Rif             reduce using rule 39 (break -> Rbreak fin_instr .)
    Rbreak          reduce using rule 39 (break -> Rbreak fin_instr .)
    Rwhile          reduce using rule 39 (break -> Rbreak fin_instr .)
    Rfor            reduce using rule 39 (break -> Rbreak fin_instr .)
    Rcontinue       reduce using rule 39 (break -> Rbreak fin_instr .)
    Rfunc           reduce using rule 39 (break -> Rbreak fin_instr .)
    Rreturn         reduce using rule 39 (break -> Rbreak fin_instr .)
    Rnumber         reduce using rule 39 (break -> Rbreak fin_instr .)
    Rboolean        reduce using rule 39 (break -> Rbreak fin_instr .)
    Rstring         reduce using rule 39 (break -> Rbreak fin_instr .)
    Rany            reduce using rule 39 (break -> Rbreak fin_instr .)
    Rvoid           reduce using rule 39 (break -> Rbreak fin_instr .)
    $end            reduce using rule 39 (break -> Rbreak fin_instr .)
    LLAVEC          reduce using rule 39 (break -> Rbreak fin_instr .)


state 53

    (49) fin_instr -> PUNTOCOMA .

    error           reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    Rconsole        reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    Rlet            reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    ID              reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    Rif             reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    Rbreak          reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    Rwhile          reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    Rfor            reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    Rcontinue       reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    Rfunc           reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    Rreturn         reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    Rnumber         reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    Rboolean        reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    Rstring         reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    Rany            reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    Rvoid           reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    $end            reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    LLAVEC          reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    PARC            reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    MENOS           reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    NOT             reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    PARA            reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    ENTERO          reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    DECIMAL         reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    CADENA          reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    Rtrue           reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    Rfalse          reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    Rnull           reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    MAS             reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    POR             reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    DIV             reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    POT             reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    MOD             reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    MENORIGUAL      reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    MENOR           reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    MAYORIGUAL      reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    MAYOR           reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    IGUALIGUAL      reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    DISTINTO        reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    AND             reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    OR              reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    COMA            reduce using rule 49 (fin_instr -> PUNTOCOMA .)
    CORC            reduce using rule 49 (fin_instr -> PUNTOCOMA .)


state 54

    (40) while -> Rwhile PARA . expresion PARC LLAVEA instrucciones LLAVEC
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    expresion                      shift and go to state 88
    llamada                        shift and go to state 69

state 55

    (43) for -> Rfor PARA . declar_asig expresion fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC
    (44) declar_asig -> . declaracion
    (45) declar_asig -> . asignacion
    (26) declaracion -> . Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr
    (27) declaracion -> . Rlet ID IGUAL expresion fin_instr
    (35) asignacion -> . ID IGUAL expresion fin_instr

    Rlet            shift and go to state 92
    ID              shift and go to state 93

    declar_asig                    shift and go to state 89
    declaracion                    shift and go to state 90
    asignacion                     shift and go to state 91

state 56

    (48) continue -> Rcontinue fin_instr .

    error           reduce using rule 48 (continue -> Rcontinue fin_instr .)
    Rconsole        reduce using rule 48 (continue -> Rcontinue fin_instr .)
    Rlet            reduce using rule 48 (continue -> Rcontinue fin_instr .)
    ID              reduce using rule 48 (continue -> Rcontinue fin_instr .)
    Rif             reduce using rule 48 (continue -> Rcontinue fin_instr .)
    Rbreak          reduce using rule 48 (continue -> Rcontinue fin_instr .)
    Rwhile          reduce using rule 48 (continue -> Rcontinue fin_instr .)
    Rfor            reduce using rule 48 (continue -> Rcontinue fin_instr .)
    Rcontinue       reduce using rule 48 (continue -> Rcontinue fin_instr .)
    Rfunc           reduce using rule 48 (continue -> Rcontinue fin_instr .)
    Rreturn         reduce using rule 48 (continue -> Rcontinue fin_instr .)
    Rnumber         reduce using rule 48 (continue -> Rcontinue fin_instr .)
    Rboolean        reduce using rule 48 (continue -> Rcontinue fin_instr .)
    Rstring         reduce using rule 48 (continue -> Rcontinue fin_instr .)
    Rany            reduce using rule 48 (continue -> Rcontinue fin_instr .)
    Rvoid           reduce using rule 48 (continue -> Rcontinue fin_instr .)
    $end            reduce using rule 48 (continue -> Rcontinue fin_instr .)
    LLAVEC          reduce using rule 48 (continue -> Rcontinue fin_instr .)


state 57

    (51) funcion -> Rfunc ID . PARA parametros PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (52) funcion -> Rfunc ID . PARA PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (53) funcion -> Rfunc ID . PARA parametros PARC LLAVEA instrucciones LLAVEC
    (54) funcion -> Rfunc ID . PARA PARC LLAVEA instrucciones LLAVEC

    PARA            shift and go to state 94


state 58

    (59) retorno -> Rreturn expresion . fin_instr
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MOD expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . MENOR expresion
    (92) expresion -> expresion . MAYORIGUAL expresion
    (93) expresion -> expresion . MAYOR expresion
    (94) expresion -> expresion . IGUALIGUAL expresion
    (95) expresion -> expresion . DISTINTO expresion
    (96) expresion -> expresion . AND expresion
    (97) expresion -> expresion . OR expresion
    (49) fin_instr -> . PUNTOCOMA
    (50) fin_instr -> .

    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIV             shift and go to state 99
    POT             shift and go to state 100
    MOD             shift and go to state 101
    MENORIGUAL      shift and go to state 102
    MENOR           shift and go to state 103
    MAYORIGUAL      shift and go to state 104
    MAYOR           shift and go to state 105
    IGUALIGUAL      shift and go to state 106
    DISTINTO        shift and go to state 107
    AND             shift and go to state 108
    OR              shift and go to state 109
    PUNTOCOMA       shift and go to state 53
    error           reduce using rule 50 (fin_instr -> .)
    Rconsole        reduce using rule 50 (fin_instr -> .)
    Rlet            reduce using rule 50 (fin_instr -> .)
    ID              reduce using rule 50 (fin_instr -> .)
    Rif             reduce using rule 50 (fin_instr -> .)
    Rbreak          reduce using rule 50 (fin_instr -> .)
    Rwhile          reduce using rule 50 (fin_instr -> .)
    Rfor            reduce using rule 50 (fin_instr -> .)
    Rcontinue       reduce using rule 50 (fin_instr -> .)
    Rfunc           reduce using rule 50 (fin_instr -> .)
    Rreturn         reduce using rule 50 (fin_instr -> .)
    Rnumber         reduce using rule 50 (fin_instr -> .)
    Rboolean        reduce using rule 50 (fin_instr -> .)
    Rstring         reduce using rule 50 (fin_instr -> .)
    Rany            reduce using rule 50 (fin_instr -> .)
    Rvoid           reduce using rule 50 (fin_instr -> .)
    $end            reduce using rule 50 (fin_instr -> .)
    LLAVEC          reduce using rule 50 (fin_instr -> .)

    fin_instr                      shift and go to state 95

state 59

    (98) expresion -> MENOS . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    expresion                      shift and go to state 110
    llamada                        shift and go to state 69

state 60

    (99) expresion -> NOT . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    expresion                      shift and go to state 111
    llamada                        shift and go to state 69

state 61

    (100) expresion -> PARA . expresion PARC
    (109) expresion -> PARA . tipo PARC expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (28) tipo -> . Rnumber
    (29) tipo -> . Rboolean
    (30) tipo -> . Rstring
    (31) tipo -> . Rany
    (32) tipo -> . Rvoid
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68
    Rnumber         shift and go to state 32
    Rboolean        shift and go to state 33
    Rstring         shift and go to state 34
    Rany            shift and go to state 35
    Rvoid           shift and go to state 36

    expresion                      shift and go to state 112
    tipo                           shift and go to state 113
    llamada                        shift and go to state 69

state 62

    (101) expresion -> ENTERO .

    MAS             reduce using rule 101 (expresion -> ENTERO .)
    MENOS           reduce using rule 101 (expresion -> ENTERO .)
    POR             reduce using rule 101 (expresion -> ENTERO .)
    DIV             reduce using rule 101 (expresion -> ENTERO .)
    POT             reduce using rule 101 (expresion -> ENTERO .)
    MOD             reduce using rule 101 (expresion -> ENTERO .)
    MENORIGUAL      reduce using rule 101 (expresion -> ENTERO .)
    MENOR           reduce using rule 101 (expresion -> ENTERO .)
    MAYORIGUAL      reduce using rule 101 (expresion -> ENTERO .)
    MAYOR           reduce using rule 101 (expresion -> ENTERO .)
    IGUALIGUAL      reduce using rule 101 (expresion -> ENTERO .)
    DISTINTO        reduce using rule 101 (expresion -> ENTERO .)
    AND             reduce using rule 101 (expresion -> ENTERO .)
    OR              reduce using rule 101 (expresion -> ENTERO .)
    PUNTOCOMA       reduce using rule 101 (expresion -> ENTERO .)
    error           reduce using rule 101 (expresion -> ENTERO .)
    Rconsole        reduce using rule 101 (expresion -> ENTERO .)
    Rlet            reduce using rule 101 (expresion -> ENTERO .)
    ID              reduce using rule 101 (expresion -> ENTERO .)
    Rif             reduce using rule 101 (expresion -> ENTERO .)
    Rbreak          reduce using rule 101 (expresion -> ENTERO .)
    Rwhile          reduce using rule 101 (expresion -> ENTERO .)
    Rfor            reduce using rule 101 (expresion -> ENTERO .)
    Rcontinue       reduce using rule 101 (expresion -> ENTERO .)
    Rfunc           reduce using rule 101 (expresion -> ENTERO .)
    Rreturn         reduce using rule 101 (expresion -> ENTERO .)
    Rnumber         reduce using rule 101 (expresion -> ENTERO .)
    Rboolean        reduce using rule 101 (expresion -> ENTERO .)
    Rstring         reduce using rule 101 (expresion -> ENTERO .)
    Rany            reduce using rule 101 (expresion -> ENTERO .)
    Rvoid           reduce using rule 101 (expresion -> ENTERO .)
    $end            reduce using rule 101 (expresion -> ENTERO .)
    LLAVEC          reduce using rule 101 (expresion -> ENTERO .)
    NOT             reduce using rule 101 (expresion -> ENTERO .)
    PARA            reduce using rule 101 (expresion -> ENTERO .)
    ENTERO          reduce using rule 101 (expresion -> ENTERO .)
    DECIMAL         reduce using rule 101 (expresion -> ENTERO .)
    CADENA          reduce using rule 101 (expresion -> ENTERO .)
    Rtrue           reduce using rule 101 (expresion -> ENTERO .)
    Rfalse          reduce using rule 101 (expresion -> ENTERO .)
    Rnull           reduce using rule 101 (expresion -> ENTERO .)
    PARC            reduce using rule 101 (expresion -> ENTERO .)
    COMA            reduce using rule 101 (expresion -> ENTERO .)
    CORC            reduce using rule 101 (expresion -> ENTERO .)


state 63

    (102) expresion -> DECIMAL .

    MAS             reduce using rule 102 (expresion -> DECIMAL .)
    MENOS           reduce using rule 102 (expresion -> DECIMAL .)
    POR             reduce using rule 102 (expresion -> DECIMAL .)
    DIV             reduce using rule 102 (expresion -> DECIMAL .)
    POT             reduce using rule 102 (expresion -> DECIMAL .)
    MOD             reduce using rule 102 (expresion -> DECIMAL .)
    MENORIGUAL      reduce using rule 102 (expresion -> DECIMAL .)
    MENOR           reduce using rule 102 (expresion -> DECIMAL .)
    MAYORIGUAL      reduce using rule 102 (expresion -> DECIMAL .)
    MAYOR           reduce using rule 102 (expresion -> DECIMAL .)
    IGUALIGUAL      reduce using rule 102 (expresion -> DECIMAL .)
    DISTINTO        reduce using rule 102 (expresion -> DECIMAL .)
    AND             reduce using rule 102 (expresion -> DECIMAL .)
    OR              reduce using rule 102 (expresion -> DECIMAL .)
    PUNTOCOMA       reduce using rule 102 (expresion -> DECIMAL .)
    error           reduce using rule 102 (expresion -> DECIMAL .)
    Rconsole        reduce using rule 102 (expresion -> DECIMAL .)
    Rlet            reduce using rule 102 (expresion -> DECIMAL .)
    ID              reduce using rule 102 (expresion -> DECIMAL .)
    Rif             reduce using rule 102 (expresion -> DECIMAL .)
    Rbreak          reduce using rule 102 (expresion -> DECIMAL .)
    Rwhile          reduce using rule 102 (expresion -> DECIMAL .)
    Rfor            reduce using rule 102 (expresion -> DECIMAL .)
    Rcontinue       reduce using rule 102 (expresion -> DECIMAL .)
    Rfunc           reduce using rule 102 (expresion -> DECIMAL .)
    Rreturn         reduce using rule 102 (expresion -> DECIMAL .)
    Rnumber         reduce using rule 102 (expresion -> DECIMAL .)
    Rboolean        reduce using rule 102 (expresion -> DECIMAL .)
    Rstring         reduce using rule 102 (expresion -> DECIMAL .)
    Rany            reduce using rule 102 (expresion -> DECIMAL .)
    Rvoid           reduce using rule 102 (expresion -> DECIMAL .)
    $end            reduce using rule 102 (expresion -> DECIMAL .)
    LLAVEC          reduce using rule 102 (expresion -> DECIMAL .)
    NOT             reduce using rule 102 (expresion -> DECIMAL .)
    PARA            reduce using rule 102 (expresion -> DECIMAL .)
    ENTERO          reduce using rule 102 (expresion -> DECIMAL .)
    DECIMAL         reduce using rule 102 (expresion -> DECIMAL .)
    CADENA          reduce using rule 102 (expresion -> DECIMAL .)
    Rtrue           reduce using rule 102 (expresion -> DECIMAL .)
    Rfalse          reduce using rule 102 (expresion -> DECIMAL .)
    Rnull           reduce using rule 102 (expresion -> DECIMAL .)
    PARC            reduce using rule 102 (expresion -> DECIMAL .)
    COMA            reduce using rule 102 (expresion -> DECIMAL .)
    CORC            reduce using rule 102 (expresion -> DECIMAL .)


state 64

    (103) expresion -> CADENA .

    MAS             reduce using rule 103 (expresion -> CADENA .)
    MENOS           reduce using rule 103 (expresion -> CADENA .)
    POR             reduce using rule 103 (expresion -> CADENA .)
    DIV             reduce using rule 103 (expresion -> CADENA .)
    POT             reduce using rule 103 (expresion -> CADENA .)
    MOD             reduce using rule 103 (expresion -> CADENA .)
    MENORIGUAL      reduce using rule 103 (expresion -> CADENA .)
    MENOR           reduce using rule 103 (expresion -> CADENA .)
    MAYORIGUAL      reduce using rule 103 (expresion -> CADENA .)
    MAYOR           reduce using rule 103 (expresion -> CADENA .)
    IGUALIGUAL      reduce using rule 103 (expresion -> CADENA .)
    DISTINTO        reduce using rule 103 (expresion -> CADENA .)
    AND             reduce using rule 103 (expresion -> CADENA .)
    OR              reduce using rule 103 (expresion -> CADENA .)
    PUNTOCOMA       reduce using rule 103 (expresion -> CADENA .)
    error           reduce using rule 103 (expresion -> CADENA .)
    Rconsole        reduce using rule 103 (expresion -> CADENA .)
    Rlet            reduce using rule 103 (expresion -> CADENA .)
    ID              reduce using rule 103 (expresion -> CADENA .)
    Rif             reduce using rule 103 (expresion -> CADENA .)
    Rbreak          reduce using rule 103 (expresion -> CADENA .)
    Rwhile          reduce using rule 103 (expresion -> CADENA .)
    Rfor            reduce using rule 103 (expresion -> CADENA .)
    Rcontinue       reduce using rule 103 (expresion -> CADENA .)
    Rfunc           reduce using rule 103 (expresion -> CADENA .)
    Rreturn         reduce using rule 103 (expresion -> CADENA .)
    Rnumber         reduce using rule 103 (expresion -> CADENA .)
    Rboolean        reduce using rule 103 (expresion -> CADENA .)
    Rstring         reduce using rule 103 (expresion -> CADENA .)
    Rany            reduce using rule 103 (expresion -> CADENA .)
    Rvoid           reduce using rule 103 (expresion -> CADENA .)
    $end            reduce using rule 103 (expresion -> CADENA .)
    LLAVEC          reduce using rule 103 (expresion -> CADENA .)
    NOT             reduce using rule 103 (expresion -> CADENA .)
    PARA            reduce using rule 103 (expresion -> CADENA .)
    ENTERO          reduce using rule 103 (expresion -> CADENA .)
    DECIMAL         reduce using rule 103 (expresion -> CADENA .)
    CADENA          reduce using rule 103 (expresion -> CADENA .)
    Rtrue           reduce using rule 103 (expresion -> CADENA .)
    Rfalse          reduce using rule 103 (expresion -> CADENA .)
    Rnull           reduce using rule 103 (expresion -> CADENA .)
    PARC            reduce using rule 103 (expresion -> CADENA .)
    COMA            reduce using rule 103 (expresion -> CADENA .)
    CORC            reduce using rule 103 (expresion -> CADENA .)


state 65

    (104) expresion -> Rtrue .

    MAS             reduce using rule 104 (expresion -> Rtrue .)
    MENOS           reduce using rule 104 (expresion -> Rtrue .)
    POR             reduce using rule 104 (expresion -> Rtrue .)
    DIV             reduce using rule 104 (expresion -> Rtrue .)
    POT             reduce using rule 104 (expresion -> Rtrue .)
    MOD             reduce using rule 104 (expresion -> Rtrue .)
    MENORIGUAL      reduce using rule 104 (expresion -> Rtrue .)
    MENOR           reduce using rule 104 (expresion -> Rtrue .)
    MAYORIGUAL      reduce using rule 104 (expresion -> Rtrue .)
    MAYOR           reduce using rule 104 (expresion -> Rtrue .)
    IGUALIGUAL      reduce using rule 104 (expresion -> Rtrue .)
    DISTINTO        reduce using rule 104 (expresion -> Rtrue .)
    AND             reduce using rule 104 (expresion -> Rtrue .)
    OR              reduce using rule 104 (expresion -> Rtrue .)
    PUNTOCOMA       reduce using rule 104 (expresion -> Rtrue .)
    error           reduce using rule 104 (expresion -> Rtrue .)
    Rconsole        reduce using rule 104 (expresion -> Rtrue .)
    Rlet            reduce using rule 104 (expresion -> Rtrue .)
    ID              reduce using rule 104 (expresion -> Rtrue .)
    Rif             reduce using rule 104 (expresion -> Rtrue .)
    Rbreak          reduce using rule 104 (expresion -> Rtrue .)
    Rwhile          reduce using rule 104 (expresion -> Rtrue .)
    Rfor            reduce using rule 104 (expresion -> Rtrue .)
    Rcontinue       reduce using rule 104 (expresion -> Rtrue .)
    Rfunc           reduce using rule 104 (expresion -> Rtrue .)
    Rreturn         reduce using rule 104 (expresion -> Rtrue .)
    Rnumber         reduce using rule 104 (expresion -> Rtrue .)
    Rboolean        reduce using rule 104 (expresion -> Rtrue .)
    Rstring         reduce using rule 104 (expresion -> Rtrue .)
    Rany            reduce using rule 104 (expresion -> Rtrue .)
    Rvoid           reduce using rule 104 (expresion -> Rtrue .)
    $end            reduce using rule 104 (expresion -> Rtrue .)
    LLAVEC          reduce using rule 104 (expresion -> Rtrue .)
    NOT             reduce using rule 104 (expresion -> Rtrue .)
    PARA            reduce using rule 104 (expresion -> Rtrue .)
    ENTERO          reduce using rule 104 (expresion -> Rtrue .)
    DECIMAL         reduce using rule 104 (expresion -> Rtrue .)
    CADENA          reduce using rule 104 (expresion -> Rtrue .)
    Rtrue           reduce using rule 104 (expresion -> Rtrue .)
    Rfalse          reduce using rule 104 (expresion -> Rtrue .)
    Rnull           reduce using rule 104 (expresion -> Rtrue .)
    PARC            reduce using rule 104 (expresion -> Rtrue .)
    COMA            reduce using rule 104 (expresion -> Rtrue .)
    CORC            reduce using rule 104 (expresion -> Rtrue .)


state 66

    (105) expresion -> Rfalse .

    MAS             reduce using rule 105 (expresion -> Rfalse .)
    MENOS           reduce using rule 105 (expresion -> Rfalse .)
    POR             reduce using rule 105 (expresion -> Rfalse .)
    DIV             reduce using rule 105 (expresion -> Rfalse .)
    POT             reduce using rule 105 (expresion -> Rfalse .)
    MOD             reduce using rule 105 (expresion -> Rfalse .)
    MENORIGUAL      reduce using rule 105 (expresion -> Rfalse .)
    MENOR           reduce using rule 105 (expresion -> Rfalse .)
    MAYORIGUAL      reduce using rule 105 (expresion -> Rfalse .)
    MAYOR           reduce using rule 105 (expresion -> Rfalse .)
    IGUALIGUAL      reduce using rule 105 (expresion -> Rfalse .)
    DISTINTO        reduce using rule 105 (expresion -> Rfalse .)
    AND             reduce using rule 105 (expresion -> Rfalse .)
    OR              reduce using rule 105 (expresion -> Rfalse .)
    PUNTOCOMA       reduce using rule 105 (expresion -> Rfalse .)
    error           reduce using rule 105 (expresion -> Rfalse .)
    Rconsole        reduce using rule 105 (expresion -> Rfalse .)
    Rlet            reduce using rule 105 (expresion -> Rfalse .)
    ID              reduce using rule 105 (expresion -> Rfalse .)
    Rif             reduce using rule 105 (expresion -> Rfalse .)
    Rbreak          reduce using rule 105 (expresion -> Rfalse .)
    Rwhile          reduce using rule 105 (expresion -> Rfalse .)
    Rfor            reduce using rule 105 (expresion -> Rfalse .)
    Rcontinue       reduce using rule 105 (expresion -> Rfalse .)
    Rfunc           reduce using rule 105 (expresion -> Rfalse .)
    Rreturn         reduce using rule 105 (expresion -> Rfalse .)
    Rnumber         reduce using rule 105 (expresion -> Rfalse .)
    Rboolean        reduce using rule 105 (expresion -> Rfalse .)
    Rstring         reduce using rule 105 (expresion -> Rfalse .)
    Rany            reduce using rule 105 (expresion -> Rfalse .)
    Rvoid           reduce using rule 105 (expresion -> Rfalse .)
    $end            reduce using rule 105 (expresion -> Rfalse .)
    LLAVEC          reduce using rule 105 (expresion -> Rfalse .)
    NOT             reduce using rule 105 (expresion -> Rfalse .)
    PARA            reduce using rule 105 (expresion -> Rfalse .)
    ENTERO          reduce using rule 105 (expresion -> Rfalse .)
    DECIMAL         reduce using rule 105 (expresion -> Rfalse .)
    CADENA          reduce using rule 105 (expresion -> Rfalse .)
    Rtrue           reduce using rule 105 (expresion -> Rfalse .)
    Rfalse          reduce using rule 105 (expresion -> Rfalse .)
    Rnull           reduce using rule 105 (expresion -> Rfalse .)
    PARC            reduce using rule 105 (expresion -> Rfalse .)
    COMA            reduce using rule 105 (expresion -> Rfalse .)
    CORC            reduce using rule 105 (expresion -> Rfalse .)


state 67

    (106) expresion -> ID .
    (110) expresion -> ID . lista_expresiones
    (111) expresion -> ID . PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> ID . PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> ID . PUNTO RtoString PARA PARC
    (114) expresion -> ID . PUNTO RtoLowerCase PARA PARC
    (115) expresion -> ID . PUNTO RtoUpperCase PARA PARC
    (116) expresion -> ID . PUNTO Rlength PARA PARC
    (117) expresion -> ID . PUNTO Rsplit PARA expresion PARC
    (60) llamada -> ID . PARA parametros_llamada PARC fin_instr
    (61) llamada -> ID . PARA PARC fin_instr
    (68) lista_expresiones -> . lista_expresiones CORA expresion CORC
    (69) lista_expresiones -> . CORA expresion CORC

  ! shift/reduce conflict for PARA resolved as shift
    MAS             reduce using rule 106 (expresion -> ID .)
    MENOS           reduce using rule 106 (expresion -> ID .)
    POR             reduce using rule 106 (expresion -> ID .)
    DIV             reduce using rule 106 (expresion -> ID .)
    POT             reduce using rule 106 (expresion -> ID .)
    MOD             reduce using rule 106 (expresion -> ID .)
    MENORIGUAL      reduce using rule 106 (expresion -> ID .)
    MENOR           reduce using rule 106 (expresion -> ID .)
    MAYORIGUAL      reduce using rule 106 (expresion -> ID .)
    MAYOR           reduce using rule 106 (expresion -> ID .)
    IGUALIGUAL      reduce using rule 106 (expresion -> ID .)
    DISTINTO        reduce using rule 106 (expresion -> ID .)
    AND             reduce using rule 106 (expresion -> ID .)
    OR              reduce using rule 106 (expresion -> ID .)
    PUNTOCOMA       reduce using rule 106 (expresion -> ID .)
    error           reduce using rule 106 (expresion -> ID .)
    Rconsole        reduce using rule 106 (expresion -> ID .)
    Rlet            reduce using rule 106 (expresion -> ID .)
    ID              reduce using rule 106 (expresion -> ID .)
    Rif             reduce using rule 106 (expresion -> ID .)
    Rbreak          reduce using rule 106 (expresion -> ID .)
    Rwhile          reduce using rule 106 (expresion -> ID .)
    Rfor            reduce using rule 106 (expresion -> ID .)
    Rcontinue       reduce using rule 106 (expresion -> ID .)
    Rfunc           reduce using rule 106 (expresion -> ID .)
    Rreturn         reduce using rule 106 (expresion -> ID .)
    Rnumber         reduce using rule 106 (expresion -> ID .)
    Rboolean        reduce using rule 106 (expresion -> ID .)
    Rstring         reduce using rule 106 (expresion -> ID .)
    Rany            reduce using rule 106 (expresion -> ID .)
    Rvoid           reduce using rule 106 (expresion -> ID .)
    $end            reduce using rule 106 (expresion -> ID .)
    LLAVEC          reduce using rule 106 (expresion -> ID .)
    NOT             reduce using rule 106 (expresion -> ID .)
    ENTERO          reduce using rule 106 (expresion -> ID .)
    DECIMAL         reduce using rule 106 (expresion -> ID .)
    CADENA          reduce using rule 106 (expresion -> ID .)
    Rtrue           reduce using rule 106 (expresion -> ID .)
    Rfalse          reduce using rule 106 (expresion -> ID .)
    Rnull           reduce using rule 106 (expresion -> ID .)
    PARC            reduce using rule 106 (expresion -> ID .)
    COMA            reduce using rule 106 (expresion -> ID .)
    CORC            reduce using rule 106 (expresion -> ID .)
    PUNTO           shift and go to state 115
    PARA            shift and go to state 46
    CORA            shift and go to state 48

  ! PARA            [ reduce using rule 106 (expresion -> ID .) ]

    lista_expresiones              shift and go to state 114

state 68

    (107) expresion -> Rnull .

    MAS             reduce using rule 107 (expresion -> Rnull .)
    MENOS           reduce using rule 107 (expresion -> Rnull .)
    POR             reduce using rule 107 (expresion -> Rnull .)
    DIV             reduce using rule 107 (expresion -> Rnull .)
    POT             reduce using rule 107 (expresion -> Rnull .)
    MOD             reduce using rule 107 (expresion -> Rnull .)
    MENORIGUAL      reduce using rule 107 (expresion -> Rnull .)
    MENOR           reduce using rule 107 (expresion -> Rnull .)
    MAYORIGUAL      reduce using rule 107 (expresion -> Rnull .)
    MAYOR           reduce using rule 107 (expresion -> Rnull .)
    IGUALIGUAL      reduce using rule 107 (expresion -> Rnull .)
    DISTINTO        reduce using rule 107 (expresion -> Rnull .)
    AND             reduce using rule 107 (expresion -> Rnull .)
    OR              reduce using rule 107 (expresion -> Rnull .)
    PUNTOCOMA       reduce using rule 107 (expresion -> Rnull .)
    error           reduce using rule 107 (expresion -> Rnull .)
    Rconsole        reduce using rule 107 (expresion -> Rnull .)
    Rlet            reduce using rule 107 (expresion -> Rnull .)
    ID              reduce using rule 107 (expresion -> Rnull .)
    Rif             reduce using rule 107 (expresion -> Rnull .)
    Rbreak          reduce using rule 107 (expresion -> Rnull .)
    Rwhile          reduce using rule 107 (expresion -> Rnull .)
    Rfor            reduce using rule 107 (expresion -> Rnull .)
    Rcontinue       reduce using rule 107 (expresion -> Rnull .)
    Rfunc           reduce using rule 107 (expresion -> Rnull .)
    Rreturn         reduce using rule 107 (expresion -> Rnull .)
    Rnumber         reduce using rule 107 (expresion -> Rnull .)
    Rboolean        reduce using rule 107 (expresion -> Rnull .)
    Rstring         reduce using rule 107 (expresion -> Rnull .)
    Rany            reduce using rule 107 (expresion -> Rnull .)
    Rvoid           reduce using rule 107 (expresion -> Rnull .)
    $end            reduce using rule 107 (expresion -> Rnull .)
    LLAVEC          reduce using rule 107 (expresion -> Rnull .)
    NOT             reduce using rule 107 (expresion -> Rnull .)
    PARA            reduce using rule 107 (expresion -> Rnull .)
    ENTERO          reduce using rule 107 (expresion -> Rnull .)
    DECIMAL         reduce using rule 107 (expresion -> Rnull .)
    CADENA          reduce using rule 107 (expresion -> Rnull .)
    Rtrue           reduce using rule 107 (expresion -> Rnull .)
    Rfalse          reduce using rule 107 (expresion -> Rnull .)
    Rnull           reduce using rule 107 (expresion -> Rnull .)
    PARC            reduce using rule 107 (expresion -> Rnull .)
    COMA            reduce using rule 107 (expresion -> Rnull .)
    CORC            reduce using rule 107 (expresion -> Rnull .)


state 69

    (108) expresion -> llamada .

    MAS             reduce using rule 108 (expresion -> llamada .)
    MENOS           reduce using rule 108 (expresion -> llamada .)
    POR             reduce using rule 108 (expresion -> llamada .)
    DIV             reduce using rule 108 (expresion -> llamada .)
    POT             reduce using rule 108 (expresion -> llamada .)
    MOD             reduce using rule 108 (expresion -> llamada .)
    MENORIGUAL      reduce using rule 108 (expresion -> llamada .)
    MENOR           reduce using rule 108 (expresion -> llamada .)
    MAYORIGUAL      reduce using rule 108 (expresion -> llamada .)
    MAYOR           reduce using rule 108 (expresion -> llamada .)
    IGUALIGUAL      reduce using rule 108 (expresion -> llamada .)
    DISTINTO        reduce using rule 108 (expresion -> llamada .)
    AND             reduce using rule 108 (expresion -> llamada .)
    OR              reduce using rule 108 (expresion -> llamada .)
    PUNTOCOMA       reduce using rule 108 (expresion -> llamada .)
    error           reduce using rule 108 (expresion -> llamada .)
    Rconsole        reduce using rule 108 (expresion -> llamada .)
    Rlet            reduce using rule 108 (expresion -> llamada .)
    ID              reduce using rule 108 (expresion -> llamada .)
    Rif             reduce using rule 108 (expresion -> llamada .)
    Rbreak          reduce using rule 108 (expresion -> llamada .)
    Rwhile          reduce using rule 108 (expresion -> llamada .)
    Rfor            reduce using rule 108 (expresion -> llamada .)
    Rcontinue       reduce using rule 108 (expresion -> llamada .)
    Rfunc           reduce using rule 108 (expresion -> llamada .)
    Rreturn         reduce using rule 108 (expresion -> llamada .)
    Rnumber         reduce using rule 108 (expresion -> llamada .)
    Rboolean        reduce using rule 108 (expresion -> llamada .)
    Rstring         reduce using rule 108 (expresion -> llamada .)
    Rany            reduce using rule 108 (expresion -> llamada .)
    Rvoid           reduce using rule 108 (expresion -> llamada .)
    $end            reduce using rule 108 (expresion -> llamada .)
    LLAVEC          reduce using rule 108 (expresion -> llamada .)
    NOT             reduce using rule 108 (expresion -> llamada .)
    PARA            reduce using rule 108 (expresion -> llamada .)
    ENTERO          reduce using rule 108 (expresion -> llamada .)
    DECIMAL         reduce using rule 108 (expresion -> llamada .)
    CADENA          reduce using rule 108 (expresion -> llamada .)
    Rtrue           reduce using rule 108 (expresion -> llamada .)
    Rfalse          reduce using rule 108 (expresion -> llamada .)
    Rnull           reduce using rule 108 (expresion -> llamada .)
    PARC            reduce using rule 108 (expresion -> llamada .)
    COMA            reduce using rule 108 (expresion -> llamada .)
    CORC            reduce using rule 108 (expresion -> llamada .)


state 70

    (23) imprimir_instr -> Rconsole PUNTO Rlog . PARA imprimir_listas PARC fin_instr

    PARA            shift and go to state 116


state 71

    (26) declaracion -> Rlet ID DOSPUNTO . tipo IGUAL expresion fin_instr
    (33) declaracion_sinAsig -> Rlet ID DOSPUNTO . tipo fin_instr
    (65) declaracion_arreglo -> Rlet ID DOSPUNTO . tipo lista_expresiones fin_instr
    (71) declaracion_arreglo2 -> Rlet ID DOSPUNTO . tipo lista_Dim IGUAL CORA tipo_lista CORC fin_instr
    (72) declaracion_arreglo2 -> Rlet ID DOSPUNTO . tipo lista_expresiones IGUAL CORA tipo_lista CORC fin_instr
    (28) tipo -> . Rnumber
    (29) tipo -> . Rboolean
    (30) tipo -> . Rstring
    (31) tipo -> . Rany
    (32) tipo -> . Rvoid

    Rnumber         shift and go to state 32
    Rboolean        shift and go to state 33
    Rstring         shift and go to state 34
    Rany            shift and go to state 35
    Rvoid           shift and go to state 36

    tipo                           shift and go to state 117

state 72

    (27) declaracion -> Rlet ID IGUAL . expresion fin_instr
    (70) declaracion_arreglo2 -> Rlet ID IGUAL . CORA tipo_lista CORC fin_instr
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    CORA            shift and go to state 119
    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    expresion                      shift and go to state 118
    llamada                        shift and go to state 69

state 73

    (34) declaracion_sinAsig -> Rlet ID fin_instr .

    error           reduce using rule 34 (declaracion_sinAsig -> Rlet ID fin_instr .)
    Rconsole        reduce using rule 34 (declaracion_sinAsig -> Rlet ID fin_instr .)
    Rlet            reduce using rule 34 (declaracion_sinAsig -> Rlet ID fin_instr .)
    ID              reduce using rule 34 (declaracion_sinAsig -> Rlet ID fin_instr .)
    Rif             reduce using rule 34 (declaracion_sinAsig -> Rlet ID fin_instr .)
    Rbreak          reduce using rule 34 (declaracion_sinAsig -> Rlet ID fin_instr .)
    Rwhile          reduce using rule 34 (declaracion_sinAsig -> Rlet ID fin_instr .)
    Rfor            reduce using rule 34 (declaracion_sinAsig -> Rlet ID fin_instr .)
    Rcontinue       reduce using rule 34 (declaracion_sinAsig -> Rlet ID fin_instr .)
    Rfunc           reduce using rule 34 (declaracion_sinAsig -> Rlet ID fin_instr .)
    Rreturn         reduce using rule 34 (declaracion_sinAsig -> Rlet ID fin_instr .)
    Rnumber         reduce using rule 34 (declaracion_sinAsig -> Rlet ID fin_instr .)
    Rboolean        reduce using rule 34 (declaracion_sinAsig -> Rlet ID fin_instr .)
    Rstring         reduce using rule 34 (declaracion_sinAsig -> Rlet ID fin_instr .)
    Rany            reduce using rule 34 (declaracion_sinAsig -> Rlet ID fin_instr .)
    Rvoid           reduce using rule 34 (declaracion_sinAsig -> Rlet ID fin_instr .)
    $end            reduce using rule 34 (declaracion_sinAsig -> Rlet ID fin_instr .)
    LLAVEC          reduce using rule 34 (declaracion_sinAsig -> Rlet ID fin_instr .)


state 74

    (35) asignacion -> ID IGUAL expresion . fin_instr
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MOD expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . MENOR expresion
    (92) expresion -> expresion . MAYORIGUAL expresion
    (93) expresion -> expresion . MAYOR expresion
    (94) expresion -> expresion . IGUALIGUAL expresion
    (95) expresion -> expresion . DISTINTO expresion
    (96) expresion -> expresion . AND expresion
    (97) expresion -> expresion . OR expresion
    (49) fin_instr -> . PUNTOCOMA
    (50) fin_instr -> .

  ! shift/reduce conflict for MENOS resolved as shift
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIV             shift and go to state 99
    POT             shift and go to state 100
    MOD             shift and go to state 101
    MENORIGUAL      shift and go to state 102
    MENOR           shift and go to state 103
    MAYORIGUAL      shift and go to state 104
    MAYOR           shift and go to state 105
    IGUALIGUAL      shift and go to state 106
    DISTINTO        shift and go to state 107
    AND             shift and go to state 108
    OR              shift and go to state 109
    PUNTOCOMA       shift and go to state 53
    error           reduce using rule 50 (fin_instr -> .)
    Rconsole        reduce using rule 50 (fin_instr -> .)
    Rlet            reduce using rule 50 (fin_instr -> .)
    ID              reduce using rule 50 (fin_instr -> .)
    Rif             reduce using rule 50 (fin_instr -> .)
    Rbreak          reduce using rule 50 (fin_instr -> .)
    Rwhile          reduce using rule 50 (fin_instr -> .)
    Rfor            reduce using rule 50 (fin_instr -> .)
    Rcontinue       reduce using rule 50 (fin_instr -> .)
    Rfunc           reduce using rule 50 (fin_instr -> .)
    Rreturn         reduce using rule 50 (fin_instr -> .)
    Rnumber         reduce using rule 50 (fin_instr -> .)
    Rboolean        reduce using rule 50 (fin_instr -> .)
    Rstring         reduce using rule 50 (fin_instr -> .)
    Rany            reduce using rule 50 (fin_instr -> .)
    Rvoid           reduce using rule 50 (fin_instr -> .)
    $end            reduce using rule 50 (fin_instr -> .)
    NOT             reduce using rule 50 (fin_instr -> .)
    PARA            reduce using rule 50 (fin_instr -> .)
    ENTERO          reduce using rule 50 (fin_instr -> .)
    DECIMAL         reduce using rule 50 (fin_instr -> .)
    CADENA          reduce using rule 50 (fin_instr -> .)
    Rtrue           reduce using rule 50 (fin_instr -> .)
    Rfalse          reduce using rule 50 (fin_instr -> .)
    Rnull           reduce using rule 50 (fin_instr -> .)
    LLAVEC          reduce using rule 50 (fin_instr -> .)
    PARC            reduce using rule 50 (fin_instr -> .)

  ! MENOS           [ reduce using rule 50 (fin_instr -> .) ]

    fin_instr                      shift and go to state 120

state 75

    (41) tipo_incremento -> ID MASMAS fin_instr .

    error           reduce using rule 41 (tipo_incremento -> ID MASMAS fin_instr .)
    Rconsole        reduce using rule 41 (tipo_incremento -> ID MASMAS fin_instr .)
    Rlet            reduce using rule 41 (tipo_incremento -> ID MASMAS fin_instr .)
    ID              reduce using rule 41 (tipo_incremento -> ID MASMAS fin_instr .)
    Rif             reduce using rule 41 (tipo_incremento -> ID MASMAS fin_instr .)
    Rbreak          reduce using rule 41 (tipo_incremento -> ID MASMAS fin_instr .)
    Rwhile          reduce using rule 41 (tipo_incremento -> ID MASMAS fin_instr .)
    Rfor            reduce using rule 41 (tipo_incremento -> ID MASMAS fin_instr .)
    Rcontinue       reduce using rule 41 (tipo_incremento -> ID MASMAS fin_instr .)
    Rfunc           reduce using rule 41 (tipo_incremento -> ID MASMAS fin_instr .)
    Rreturn         reduce using rule 41 (tipo_incremento -> ID MASMAS fin_instr .)
    Rnumber         reduce using rule 41 (tipo_incremento -> ID MASMAS fin_instr .)
    Rboolean        reduce using rule 41 (tipo_incremento -> ID MASMAS fin_instr .)
    Rstring         reduce using rule 41 (tipo_incremento -> ID MASMAS fin_instr .)
    Rany            reduce using rule 41 (tipo_incremento -> ID MASMAS fin_instr .)
    Rvoid           reduce using rule 41 (tipo_incremento -> ID MASMAS fin_instr .)
    $end            reduce using rule 41 (tipo_incremento -> ID MASMAS fin_instr .)
    LLAVEC          reduce using rule 41 (tipo_incremento -> ID MASMAS fin_instr .)
    PARC            reduce using rule 41 (tipo_incremento -> ID MASMAS fin_instr .)


state 76

    (42) tipo_incremento -> ID MENOSMENOS fin_instr .

    error           reduce using rule 42 (tipo_incremento -> ID MENOSMENOS fin_instr .)
    Rconsole        reduce using rule 42 (tipo_incremento -> ID MENOSMENOS fin_instr .)
    Rlet            reduce using rule 42 (tipo_incremento -> ID MENOSMENOS fin_instr .)
    ID              reduce using rule 42 (tipo_incremento -> ID MENOSMENOS fin_instr .)
    Rif             reduce using rule 42 (tipo_incremento -> ID MENOSMENOS fin_instr .)
    Rbreak          reduce using rule 42 (tipo_incremento -> ID MENOSMENOS fin_instr .)
    Rwhile          reduce using rule 42 (tipo_incremento -> ID MENOSMENOS fin_instr .)
    Rfor            reduce using rule 42 (tipo_incremento -> ID MENOSMENOS fin_instr .)
    Rcontinue       reduce using rule 42 (tipo_incremento -> ID MENOSMENOS fin_instr .)
    Rfunc           reduce using rule 42 (tipo_incremento -> ID MENOSMENOS fin_instr .)
    Rreturn         reduce using rule 42 (tipo_incremento -> ID MENOSMENOS fin_instr .)
    Rnumber         reduce using rule 42 (tipo_incremento -> ID MENOSMENOS fin_instr .)
    Rboolean        reduce using rule 42 (tipo_incremento -> ID MENOSMENOS fin_instr .)
    Rstring         reduce using rule 42 (tipo_incremento -> ID MENOSMENOS fin_instr .)
    Rany            reduce using rule 42 (tipo_incremento -> ID MENOSMENOS fin_instr .)
    Rvoid           reduce using rule 42 (tipo_incremento -> ID MENOSMENOS fin_instr .)
    $end            reduce using rule 42 (tipo_incremento -> ID MENOSMENOS fin_instr .)
    LLAVEC          reduce using rule 42 (tipo_incremento -> ID MENOSMENOS fin_instr .)
    PARC            reduce using rule 42 (tipo_incremento -> ID MENOSMENOS fin_instr .)


state 77

    (60) llamada -> ID PARA parametros_llamada . PARC fin_instr
    (62) parametros_llamada -> parametros_llamada . COMA parametro_llam

    PARC            shift and go to state 121
    COMA            shift and go to state 122


state 78

    (61) llamada -> ID PARA PARC . fin_instr
    (49) fin_instr -> . PUNTOCOMA
    (50) fin_instr -> .

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
    PUNTOCOMA       shift and go to state 53
    error           reduce using rule 50 (fin_instr -> .)
    Rconsole        reduce using rule 50 (fin_instr -> .)
    Rlet            reduce using rule 50 (fin_instr -> .)
    ID              reduce using rule 50 (fin_instr -> .)
    Rif             reduce using rule 50 (fin_instr -> .)
    Rbreak          reduce using rule 50 (fin_instr -> .)
    Rwhile          reduce using rule 50 (fin_instr -> .)
    Rfor            reduce using rule 50 (fin_instr -> .)
    Rcontinue       reduce using rule 50 (fin_instr -> .)
    Rfunc           reduce using rule 50 (fin_instr -> .)
    Rreturn         reduce using rule 50 (fin_instr -> .)
    Rnumber         reduce using rule 50 (fin_instr -> .)
    Rboolean        reduce using rule 50 (fin_instr -> .)
    Rstring         reduce using rule 50 (fin_instr -> .)
    Rany            reduce using rule 50 (fin_instr -> .)
    Rvoid           reduce using rule 50 (fin_instr -> .)
    $end            reduce using rule 50 (fin_instr -> .)
    MAS             reduce using rule 50 (fin_instr -> .)
    MENOS           reduce using rule 50 (fin_instr -> .)
    POR             reduce using rule 50 (fin_instr -> .)
    DIV             reduce using rule 50 (fin_instr -> .)
    POT             reduce using rule 50 (fin_instr -> .)
    MOD             reduce using rule 50 (fin_instr -> .)
    MENORIGUAL      reduce using rule 50 (fin_instr -> .)
    MENOR           reduce using rule 50 (fin_instr -> .)
    MAYORIGUAL      reduce using rule 50 (fin_instr -> .)
    MAYOR           reduce using rule 50 (fin_instr -> .)
    IGUALIGUAL      reduce using rule 50 (fin_instr -> .)
    DISTINTO        reduce using rule 50 (fin_instr -> .)
    AND             reduce using rule 50 (fin_instr -> .)
    OR              reduce using rule 50 (fin_instr -> .)
    LLAVEC          reduce using rule 50 (fin_instr -> .)
    NOT             reduce using rule 50 (fin_instr -> .)
    PARA            reduce using rule 50 (fin_instr -> .)
    ENTERO          reduce using rule 50 (fin_instr -> .)
    DECIMAL         reduce using rule 50 (fin_instr -> .)
    CADENA          reduce using rule 50 (fin_instr -> .)
    Rtrue           reduce using rule 50 (fin_instr -> .)
    Rfalse          reduce using rule 50 (fin_instr -> .)
    Rnull           reduce using rule 50 (fin_instr -> .)
    PARC            reduce using rule 50 (fin_instr -> .)
    COMA            reduce using rule 50 (fin_instr -> .)
    CORC            reduce using rule 50 (fin_instr -> .)

  ! PUNTOCOMA       [ reduce using rule 50 (fin_instr -> .) ]

    fin_instr                      shift and go to state 123

state 79

    (63) parametros_llamada -> parametro_llam .

    PARC            reduce using rule 63 (parametros_llamada -> parametro_llam .)
    COMA            reduce using rule 63 (parametros_llamada -> parametro_llam .)


state 80

    (64) parametro_llam -> expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MOD expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . MENOR expresion
    (92) expresion -> expresion . MAYORIGUAL expresion
    (93) expresion -> expresion . MAYOR expresion
    (94) expresion -> expresion . IGUALIGUAL expresion
    (95) expresion -> expresion . DISTINTO expresion
    (96) expresion -> expresion . AND expresion
    (97) expresion -> expresion . OR expresion

    PARC            reduce using rule 64 (parametro_llam -> expresion .)
    COMA            reduce using rule 64 (parametro_llam -> expresion .)
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIV             shift and go to state 99
    POT             shift and go to state 100
    MOD             shift and go to state 101
    MENORIGUAL      shift and go to state 102
    MENOR           shift and go to state 103
    MAYORIGUAL      shift and go to state 104
    MAYOR           shift and go to state 105
    IGUALIGUAL      shift and go to state 106
    DISTINTO        shift and go to state 107
    AND             shift and go to state 108
    OR              shift and go to state 109


state 81

    (83) modificar_arreglo -> ID lista_expresiones IGUAL . expresion fin_instr
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    expresion                      shift and go to state 124
    llamada                        shift and go to state 69

state 82

    (68) lista_expresiones -> lista_expresiones CORA . expresion CORC
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    expresion                      shift and go to state 125
    llamada                        shift and go to state 69

state 83

    (69) lista_expresiones -> CORA expresion . CORC
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MOD expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . MENOR expresion
    (92) expresion -> expresion . MAYORIGUAL expresion
    (93) expresion -> expresion . MAYOR expresion
    (94) expresion -> expresion . IGUALIGUAL expresion
    (95) expresion -> expresion . DISTINTO expresion
    (96) expresion -> expresion . AND expresion
    (97) expresion -> expresion . OR expresion

    CORC            shift and go to state 126
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIV             shift and go to state 99
    POT             shift and go to state 100
    MOD             shift and go to state 101
    MENORIGUAL      shift and go to state 102
    MENOR           shift and go to state 103
    MAYORIGUAL      shift and go to state 104
    MAYOR           shift and go to state 105
    IGUALIGUAL      shift and go to state 106
    DISTINTO        shift and go to state 107
    AND             shift and go to state 108
    OR              shift and go to state 109


state 84

    (73) declaracion_arreglo2 -> tipo lista_Dim ID . IGUAL ID

    IGUAL           shift and go to state 127


state 85

    (66) lista_Dim -> lista_Dim CORA . CORC

    CORC            shift and go to state 128


state 86

    (67) lista_Dim -> CORA CORC .

    ID              reduce using rule 67 (lista_Dim -> CORA CORC .)
    CORA            reduce using rule 67 (lista_Dim -> CORA CORC .)
    IGUAL           reduce using rule 67 (lista_Dim -> CORA CORC .)
    PARC            reduce using rule 67 (lista_Dim -> CORA CORC .)
    COMA            reduce using rule 67 (lista_Dim -> CORA CORC .)


state 87

    (36) if -> Rif PARA expresion . PARC LLAVEA instrucciones LLAVEC
    (37) if -> Rif PARA expresion . PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC
    (38) if -> Rif PARA expresion . PARC LLAVEA instrucciones LLAVEC Relse if
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MOD expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . MENOR expresion
    (92) expresion -> expresion . MAYORIGUAL expresion
    (93) expresion -> expresion . MAYOR expresion
    (94) expresion -> expresion . IGUALIGUAL expresion
    (95) expresion -> expresion . DISTINTO expresion
    (96) expresion -> expresion . AND expresion
    (97) expresion -> expresion . OR expresion

    PARC            shift and go to state 129
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIV             shift and go to state 99
    POT             shift and go to state 100
    MOD             shift and go to state 101
    MENORIGUAL      shift and go to state 102
    MENOR           shift and go to state 103
    MAYORIGUAL      shift and go to state 104
    MAYOR           shift and go to state 105
    IGUALIGUAL      shift and go to state 106
    DISTINTO        shift and go to state 107
    AND             shift and go to state 108
    OR              shift and go to state 109


state 88

    (40) while -> Rwhile PARA expresion . PARC LLAVEA instrucciones LLAVEC
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MOD expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . MENOR expresion
    (92) expresion -> expresion . MAYORIGUAL expresion
    (93) expresion -> expresion . MAYOR expresion
    (94) expresion -> expresion . IGUALIGUAL expresion
    (95) expresion -> expresion . DISTINTO expresion
    (96) expresion -> expresion . AND expresion
    (97) expresion -> expresion . OR expresion

    PARC            shift and go to state 130
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIV             shift and go to state 99
    POT             shift and go to state 100
    MOD             shift and go to state 101
    MENORIGUAL      shift and go to state 102
    MENOR           shift and go to state 103
    MAYORIGUAL      shift and go to state 104
    MAYOR           shift and go to state 105
    IGUALIGUAL      shift and go to state 106
    DISTINTO        shift and go to state 107
    AND             shift and go to state 108
    OR              shift and go to state 109


state 89

    (43) for -> Rfor PARA declar_asig . expresion fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    expresion                      shift and go to state 131
    llamada                        shift and go to state 69

state 90

    (44) declar_asig -> declaracion .

    MENOS           reduce using rule 44 (declar_asig -> declaracion .)
    NOT             reduce using rule 44 (declar_asig -> declaracion .)
    PARA            reduce using rule 44 (declar_asig -> declaracion .)
    ENTERO          reduce using rule 44 (declar_asig -> declaracion .)
    DECIMAL         reduce using rule 44 (declar_asig -> declaracion .)
    CADENA          reduce using rule 44 (declar_asig -> declaracion .)
    Rtrue           reduce using rule 44 (declar_asig -> declaracion .)
    Rfalse          reduce using rule 44 (declar_asig -> declaracion .)
    ID              reduce using rule 44 (declar_asig -> declaracion .)
    Rnull           reduce using rule 44 (declar_asig -> declaracion .)


state 91

    (45) declar_asig -> asignacion .

    MENOS           reduce using rule 45 (declar_asig -> asignacion .)
    NOT             reduce using rule 45 (declar_asig -> asignacion .)
    PARA            reduce using rule 45 (declar_asig -> asignacion .)
    ENTERO          reduce using rule 45 (declar_asig -> asignacion .)
    DECIMAL         reduce using rule 45 (declar_asig -> asignacion .)
    CADENA          reduce using rule 45 (declar_asig -> asignacion .)
    Rtrue           reduce using rule 45 (declar_asig -> asignacion .)
    Rfalse          reduce using rule 45 (declar_asig -> asignacion .)
    ID              reduce using rule 45 (declar_asig -> asignacion .)
    Rnull           reduce using rule 45 (declar_asig -> asignacion .)


state 92

    (26) declaracion -> Rlet . ID DOSPUNTO tipo IGUAL expresion fin_instr
    (27) declaracion -> Rlet . ID IGUAL expresion fin_instr

    ID              shift and go to state 132


state 93

    (35) asignacion -> ID . IGUAL expresion fin_instr

    IGUAL           shift and go to state 43


state 94

    (51) funcion -> Rfunc ID PARA . parametros PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (52) funcion -> Rfunc ID PARA . PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (53) funcion -> Rfunc ID PARA . parametros PARC LLAVEA instrucciones LLAVEC
    (54) funcion -> Rfunc ID PARA . PARC LLAVEA instrucciones LLAVEC
    (55) parametros -> . parametros COMA parametro
    (56) parametros -> . parametro
    (57) parametro -> . ID DOSPUNTO tipo
    (58) parametro -> . ID DOSPUNTO tipo lista_Dim

    PARC            shift and go to state 135
    ID              shift and go to state 133

    parametros                     shift and go to state 134
    parametro                      shift and go to state 136

state 95

    (59) retorno -> Rreturn expresion fin_instr .

    error           reduce using rule 59 (retorno -> Rreturn expresion fin_instr .)
    Rconsole        reduce using rule 59 (retorno -> Rreturn expresion fin_instr .)
    Rlet            reduce using rule 59 (retorno -> Rreturn expresion fin_instr .)
    ID              reduce using rule 59 (retorno -> Rreturn expresion fin_instr .)
    Rif             reduce using rule 59 (retorno -> Rreturn expresion fin_instr .)
    Rbreak          reduce using rule 59 (retorno -> Rreturn expresion fin_instr .)
    Rwhile          reduce using rule 59 (retorno -> Rreturn expresion fin_instr .)
    Rfor            reduce using rule 59 (retorno -> Rreturn expresion fin_instr .)
    Rcontinue       reduce using rule 59 (retorno -> Rreturn expresion fin_instr .)
    Rfunc           reduce using rule 59 (retorno -> Rreturn expresion fin_instr .)
    Rreturn         reduce using rule 59 (retorno -> Rreturn expresion fin_instr .)
    Rnumber         reduce using rule 59 (retorno -> Rreturn expresion fin_instr .)
    Rboolean        reduce using rule 59 (retorno -> Rreturn expresion fin_instr .)
    Rstring         reduce using rule 59 (retorno -> Rreturn expresion fin_instr .)
    Rany            reduce using rule 59 (retorno -> Rreturn expresion fin_instr .)
    Rvoid           reduce using rule 59 (retorno -> Rreturn expresion fin_instr .)
    $end            reduce using rule 59 (retorno -> Rreturn expresion fin_instr .)
    LLAVEC          reduce using rule 59 (retorno -> Rreturn expresion fin_instr .)


state 96

    (84) expresion -> expresion MAS . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    expresion                      shift and go to state 137
    llamada                        shift and go to state 69

state 97

    (85) expresion -> expresion MENOS . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    expresion                      shift and go to state 138
    llamada                        shift and go to state 69

state 98

    (86) expresion -> expresion POR . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    expresion                      shift and go to state 139
    llamada                        shift and go to state 69

state 99

    (87) expresion -> expresion DIV . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    expresion                      shift and go to state 140
    llamada                        shift and go to state 69

state 100

    (88) expresion -> expresion POT . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    expresion                      shift and go to state 141
    llamada                        shift and go to state 69

state 101

    (89) expresion -> expresion MOD . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    expresion                      shift and go to state 142
    llamada                        shift and go to state 69

state 102

    (90) expresion -> expresion MENORIGUAL . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    expresion                      shift and go to state 143
    llamada                        shift and go to state 69

state 103

    (91) expresion -> expresion MENOR . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    expresion                      shift and go to state 144
    llamada                        shift and go to state 69

state 104

    (92) expresion -> expresion MAYORIGUAL . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    expresion                      shift and go to state 145
    llamada                        shift and go to state 69

state 105

    (93) expresion -> expresion MAYOR . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    expresion                      shift and go to state 146
    llamada                        shift and go to state 69

state 106

    (94) expresion -> expresion IGUALIGUAL . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    expresion                      shift and go to state 147
    llamada                        shift and go to state 69

state 107

    (95) expresion -> expresion DISTINTO . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    expresion                      shift and go to state 148
    llamada                        shift and go to state 69

state 108

    (96) expresion -> expresion AND . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    expresion                      shift and go to state 149
    llamada                        shift and go to state 69

state 109

    (97) expresion -> expresion OR . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    expresion                      shift and go to state 150
    llamada                        shift and go to state 69

state 110

    (98) expresion -> MENOS expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MOD expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . MENOR expresion
    (92) expresion -> expresion . MAYORIGUAL expresion
    (93) expresion -> expresion . MAYOR expresion
    (94) expresion -> expresion . IGUALIGUAL expresion
    (95) expresion -> expresion . DISTINTO expresion
    (96) expresion -> expresion . AND expresion
    (97) expresion -> expresion . OR expresion

    MAS             reduce using rule 98 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 98 (expresion -> MENOS expresion .)
    POR             reduce using rule 98 (expresion -> MENOS expresion .)
    DIV             reduce using rule 98 (expresion -> MENOS expresion .)
    POT             reduce using rule 98 (expresion -> MENOS expresion .)
    MOD             reduce using rule 98 (expresion -> MENOS expresion .)
    MENORIGUAL      reduce using rule 98 (expresion -> MENOS expresion .)
    MENOR           reduce using rule 98 (expresion -> MENOS expresion .)
    MAYORIGUAL      reduce using rule 98 (expresion -> MENOS expresion .)
    MAYOR           reduce using rule 98 (expresion -> MENOS expresion .)
    IGUALIGUAL      reduce using rule 98 (expresion -> MENOS expresion .)
    DISTINTO        reduce using rule 98 (expresion -> MENOS expresion .)
    AND             reduce using rule 98 (expresion -> MENOS expresion .)
    OR              reduce using rule 98 (expresion -> MENOS expresion .)
    PUNTOCOMA       reduce using rule 98 (expresion -> MENOS expresion .)
    error           reduce using rule 98 (expresion -> MENOS expresion .)
    Rconsole        reduce using rule 98 (expresion -> MENOS expresion .)
    Rlet            reduce using rule 98 (expresion -> MENOS expresion .)
    ID              reduce using rule 98 (expresion -> MENOS expresion .)
    Rif             reduce using rule 98 (expresion -> MENOS expresion .)
    Rbreak          reduce using rule 98 (expresion -> MENOS expresion .)
    Rwhile          reduce using rule 98 (expresion -> MENOS expresion .)
    Rfor            reduce using rule 98 (expresion -> MENOS expresion .)
    Rcontinue       reduce using rule 98 (expresion -> MENOS expresion .)
    Rfunc           reduce using rule 98 (expresion -> MENOS expresion .)
    Rreturn         reduce using rule 98 (expresion -> MENOS expresion .)
    Rnumber         reduce using rule 98 (expresion -> MENOS expresion .)
    Rboolean        reduce using rule 98 (expresion -> MENOS expresion .)
    Rstring         reduce using rule 98 (expresion -> MENOS expresion .)
    Rany            reduce using rule 98 (expresion -> MENOS expresion .)
    Rvoid           reduce using rule 98 (expresion -> MENOS expresion .)
    $end            reduce using rule 98 (expresion -> MENOS expresion .)
    LLAVEC          reduce using rule 98 (expresion -> MENOS expresion .)
    NOT             reduce using rule 98 (expresion -> MENOS expresion .)
    PARA            reduce using rule 98 (expresion -> MENOS expresion .)
    ENTERO          reduce using rule 98 (expresion -> MENOS expresion .)
    DECIMAL         reduce using rule 98 (expresion -> MENOS expresion .)
    CADENA          reduce using rule 98 (expresion -> MENOS expresion .)
    Rtrue           reduce using rule 98 (expresion -> MENOS expresion .)
    Rfalse          reduce using rule 98 (expresion -> MENOS expresion .)
    Rnull           reduce using rule 98 (expresion -> MENOS expresion .)
    PARC            reduce using rule 98 (expresion -> MENOS expresion .)
    COMA            reduce using rule 98 (expresion -> MENOS expresion .)
    CORC            reduce using rule 98 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 96 ]
  ! MENOS           [ shift and go to state 97 ]
  ! POR             [ shift and go to state 98 ]
  ! DIV             [ shift and go to state 99 ]
  ! POT             [ shift and go to state 100 ]
  ! MOD             [ shift and go to state 101 ]
  ! MENORIGUAL      [ shift and go to state 102 ]
  ! MENOR           [ shift and go to state 103 ]
  ! MAYORIGUAL      [ shift and go to state 104 ]
  ! MAYOR           [ shift and go to state 105 ]
  ! IGUALIGUAL      [ shift and go to state 106 ]
  ! DISTINTO        [ shift and go to state 107 ]
  ! AND             [ shift and go to state 108 ]
  ! OR              [ shift and go to state 109 ]


state 111

    (99) expresion -> NOT expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MOD expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . MENOR expresion
    (92) expresion -> expresion . MAYORIGUAL expresion
    (93) expresion -> expresion . MAYOR expresion
    (94) expresion -> expresion . IGUALIGUAL expresion
    (95) expresion -> expresion . DISTINTO expresion
    (96) expresion -> expresion . AND expresion
    (97) expresion -> expresion . OR expresion

    MAS             reduce using rule 99 (expresion -> NOT expresion .)
    MENOS           reduce using rule 99 (expresion -> NOT expresion .)
    POR             reduce using rule 99 (expresion -> NOT expresion .)
    DIV             reduce using rule 99 (expresion -> NOT expresion .)
    POT             reduce using rule 99 (expresion -> NOT expresion .)
    MOD             reduce using rule 99 (expresion -> NOT expresion .)
    MENORIGUAL      reduce using rule 99 (expresion -> NOT expresion .)
    MENOR           reduce using rule 99 (expresion -> NOT expresion .)
    MAYORIGUAL      reduce using rule 99 (expresion -> NOT expresion .)
    MAYOR           reduce using rule 99 (expresion -> NOT expresion .)
    IGUALIGUAL      reduce using rule 99 (expresion -> NOT expresion .)
    DISTINTO        reduce using rule 99 (expresion -> NOT expresion .)
    AND             reduce using rule 99 (expresion -> NOT expresion .)
    OR              reduce using rule 99 (expresion -> NOT expresion .)
    PUNTOCOMA       reduce using rule 99 (expresion -> NOT expresion .)
    error           reduce using rule 99 (expresion -> NOT expresion .)
    Rconsole        reduce using rule 99 (expresion -> NOT expresion .)
    Rlet            reduce using rule 99 (expresion -> NOT expresion .)
    ID              reduce using rule 99 (expresion -> NOT expresion .)
    Rif             reduce using rule 99 (expresion -> NOT expresion .)
    Rbreak          reduce using rule 99 (expresion -> NOT expresion .)
    Rwhile          reduce using rule 99 (expresion -> NOT expresion .)
    Rfor            reduce using rule 99 (expresion -> NOT expresion .)
    Rcontinue       reduce using rule 99 (expresion -> NOT expresion .)
    Rfunc           reduce using rule 99 (expresion -> NOT expresion .)
    Rreturn         reduce using rule 99 (expresion -> NOT expresion .)
    Rnumber         reduce using rule 99 (expresion -> NOT expresion .)
    Rboolean        reduce using rule 99 (expresion -> NOT expresion .)
    Rstring         reduce using rule 99 (expresion -> NOT expresion .)
    Rany            reduce using rule 99 (expresion -> NOT expresion .)
    Rvoid           reduce using rule 99 (expresion -> NOT expresion .)
    $end            reduce using rule 99 (expresion -> NOT expresion .)
    LLAVEC          reduce using rule 99 (expresion -> NOT expresion .)
    NOT             reduce using rule 99 (expresion -> NOT expresion .)
    PARA            reduce using rule 99 (expresion -> NOT expresion .)
    ENTERO          reduce using rule 99 (expresion -> NOT expresion .)
    DECIMAL         reduce using rule 99 (expresion -> NOT expresion .)
    CADENA          reduce using rule 99 (expresion -> NOT expresion .)
    Rtrue           reduce using rule 99 (expresion -> NOT expresion .)
    Rfalse          reduce using rule 99 (expresion -> NOT expresion .)
    Rnull           reduce using rule 99 (expresion -> NOT expresion .)
    PARC            reduce using rule 99 (expresion -> NOT expresion .)
    COMA            reduce using rule 99 (expresion -> NOT expresion .)
    CORC            reduce using rule 99 (expresion -> NOT expresion .)

  ! MAS             [ shift and go to state 96 ]
  ! MENOS           [ shift and go to state 97 ]
  ! POR             [ shift and go to state 98 ]
  ! DIV             [ shift and go to state 99 ]
  ! POT             [ shift and go to state 100 ]
  ! MOD             [ shift and go to state 101 ]
  ! MENORIGUAL      [ shift and go to state 102 ]
  ! MENOR           [ shift and go to state 103 ]
  ! MAYORIGUAL      [ shift and go to state 104 ]
  ! MAYOR           [ shift and go to state 105 ]
  ! IGUALIGUAL      [ shift and go to state 106 ]
  ! DISTINTO        [ shift and go to state 107 ]
  ! AND             [ shift and go to state 108 ]
  ! OR              [ shift and go to state 109 ]


state 112

    (100) expresion -> PARA expresion . PARC
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MOD expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . MENOR expresion
    (92) expresion -> expresion . MAYORIGUAL expresion
    (93) expresion -> expresion . MAYOR expresion
    (94) expresion -> expresion . IGUALIGUAL expresion
    (95) expresion -> expresion . DISTINTO expresion
    (96) expresion -> expresion . AND expresion
    (97) expresion -> expresion . OR expresion

    PARC            shift and go to state 151
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIV             shift and go to state 99
    POT             shift and go to state 100
    MOD             shift and go to state 101
    MENORIGUAL      shift and go to state 102
    MENOR           shift and go to state 103
    MAYORIGUAL      shift and go to state 104
    MAYOR           shift and go to state 105
    IGUALIGUAL      shift and go to state 106
    DISTINTO        shift and go to state 107
    AND             shift and go to state 108
    OR              shift and go to state 109


state 113

    (109) expresion -> PARA tipo . PARC expresion

    PARC            shift and go to state 152


state 114

    (110) expresion -> ID lista_expresiones .
    (68) lista_expresiones -> lista_expresiones . CORA expresion CORC

    MAS             reduce using rule 110 (expresion -> ID lista_expresiones .)
    MENOS           reduce using rule 110 (expresion -> ID lista_expresiones .)
    POR             reduce using rule 110 (expresion -> ID lista_expresiones .)
    DIV             reduce using rule 110 (expresion -> ID lista_expresiones .)
    POT             reduce using rule 110 (expresion -> ID lista_expresiones .)
    MOD             reduce using rule 110 (expresion -> ID lista_expresiones .)
    MENORIGUAL      reduce using rule 110 (expresion -> ID lista_expresiones .)
    MENOR           reduce using rule 110 (expresion -> ID lista_expresiones .)
    MAYORIGUAL      reduce using rule 110 (expresion -> ID lista_expresiones .)
    MAYOR           reduce using rule 110 (expresion -> ID lista_expresiones .)
    IGUALIGUAL      reduce using rule 110 (expresion -> ID lista_expresiones .)
    DISTINTO        reduce using rule 110 (expresion -> ID lista_expresiones .)
    AND             reduce using rule 110 (expresion -> ID lista_expresiones .)
    OR              reduce using rule 110 (expresion -> ID lista_expresiones .)
    PUNTOCOMA       reduce using rule 110 (expresion -> ID lista_expresiones .)
    error           reduce using rule 110 (expresion -> ID lista_expresiones .)
    Rconsole        reduce using rule 110 (expresion -> ID lista_expresiones .)
    Rlet            reduce using rule 110 (expresion -> ID lista_expresiones .)
    ID              reduce using rule 110 (expresion -> ID lista_expresiones .)
    Rif             reduce using rule 110 (expresion -> ID lista_expresiones .)
    Rbreak          reduce using rule 110 (expresion -> ID lista_expresiones .)
    Rwhile          reduce using rule 110 (expresion -> ID lista_expresiones .)
    Rfor            reduce using rule 110 (expresion -> ID lista_expresiones .)
    Rcontinue       reduce using rule 110 (expresion -> ID lista_expresiones .)
    Rfunc           reduce using rule 110 (expresion -> ID lista_expresiones .)
    Rreturn         reduce using rule 110 (expresion -> ID lista_expresiones .)
    Rnumber         reduce using rule 110 (expresion -> ID lista_expresiones .)
    Rboolean        reduce using rule 110 (expresion -> ID lista_expresiones .)
    Rstring         reduce using rule 110 (expresion -> ID lista_expresiones .)
    Rany            reduce using rule 110 (expresion -> ID lista_expresiones .)
    Rvoid           reduce using rule 110 (expresion -> ID lista_expresiones .)
    $end            reduce using rule 110 (expresion -> ID lista_expresiones .)
    LLAVEC          reduce using rule 110 (expresion -> ID lista_expresiones .)
    NOT             reduce using rule 110 (expresion -> ID lista_expresiones .)
    PARA            reduce using rule 110 (expresion -> ID lista_expresiones .)
    ENTERO          reduce using rule 110 (expresion -> ID lista_expresiones .)
    DECIMAL         reduce using rule 110 (expresion -> ID lista_expresiones .)
    CADENA          reduce using rule 110 (expresion -> ID lista_expresiones .)
    Rtrue           reduce using rule 110 (expresion -> ID lista_expresiones .)
    Rfalse          reduce using rule 110 (expresion -> ID lista_expresiones .)
    Rnull           reduce using rule 110 (expresion -> ID lista_expresiones .)
    PARC            reduce using rule 110 (expresion -> ID lista_expresiones .)
    COMA            reduce using rule 110 (expresion -> ID lista_expresiones .)
    CORC            reduce using rule 110 (expresion -> ID lista_expresiones .)
    CORA            shift and go to state 82


state 115

    (111) expresion -> ID PUNTO . RtoFixed PARA expresion PARC
    (112) expresion -> ID PUNTO . RtoExponential PARA expresion PARC
    (113) expresion -> ID PUNTO . RtoString PARA PARC
    (114) expresion -> ID PUNTO . RtoLowerCase PARA PARC
    (115) expresion -> ID PUNTO . RtoUpperCase PARA PARC
    (116) expresion -> ID PUNTO . Rlength PARA PARC
    (117) expresion -> ID PUNTO . Rsplit PARA expresion PARC

    RtoFixed        shift and go to state 153
    RtoExponential  shift and go to state 154
    RtoString       shift and go to state 155
    RtoLowerCase    shift and go to state 156
    RtoUpperCase    shift and go to state 157
    Rlength         shift and go to state 158
    Rsplit          shift and go to state 159


state 116

    (23) imprimir_instr -> Rconsole PUNTO Rlog PARA . imprimir_listas PARC fin_instr
    (24) imprimir_listas -> . imprimir_listas COMA expresion
    (25) imprimir_listas -> . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    imprimir_listas                shift and go to state 160
    expresion                      shift and go to state 161
    llamada                        shift and go to state 69

state 117

    (26) declaracion -> Rlet ID DOSPUNTO tipo . IGUAL expresion fin_instr
    (33) declaracion_sinAsig -> Rlet ID DOSPUNTO tipo . fin_instr
    (65) declaracion_arreglo -> Rlet ID DOSPUNTO tipo . lista_expresiones fin_instr
    (71) declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo . lista_Dim IGUAL CORA tipo_lista CORC fin_instr
    (72) declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo . lista_expresiones IGUAL CORA tipo_lista CORC fin_instr
    (49) fin_instr -> . PUNTOCOMA
    (50) fin_instr -> .
    (68) lista_expresiones -> . lista_expresiones CORA expresion CORC
    (69) lista_expresiones -> . CORA expresion CORC
    (66) lista_Dim -> . lista_Dim CORA CORC
    (67) lista_Dim -> . CORA CORC

    IGUAL           shift and go to state 162
    PUNTOCOMA       shift and go to state 53
    error           reduce using rule 50 (fin_instr -> .)
    Rconsole        reduce using rule 50 (fin_instr -> .)
    Rlet            reduce using rule 50 (fin_instr -> .)
    ID              reduce using rule 50 (fin_instr -> .)
    Rif             reduce using rule 50 (fin_instr -> .)
    Rbreak          reduce using rule 50 (fin_instr -> .)
    Rwhile          reduce using rule 50 (fin_instr -> .)
    Rfor            reduce using rule 50 (fin_instr -> .)
    Rcontinue       reduce using rule 50 (fin_instr -> .)
    Rfunc           reduce using rule 50 (fin_instr -> .)
    Rreturn         reduce using rule 50 (fin_instr -> .)
    Rnumber         reduce using rule 50 (fin_instr -> .)
    Rboolean        reduce using rule 50 (fin_instr -> .)
    Rstring         reduce using rule 50 (fin_instr -> .)
    Rany            reduce using rule 50 (fin_instr -> .)
    Rvoid           reduce using rule 50 (fin_instr -> .)
    $end            reduce using rule 50 (fin_instr -> .)
    LLAVEC          reduce using rule 50 (fin_instr -> .)
    CORA            shift and go to state 166

    fin_instr                      shift and go to state 163
    lista_expresiones              shift and go to state 164
    lista_Dim                      shift and go to state 165

state 118

    (27) declaracion -> Rlet ID IGUAL expresion . fin_instr
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MOD expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . MENOR expresion
    (92) expresion -> expresion . MAYORIGUAL expresion
    (93) expresion -> expresion . MAYOR expresion
    (94) expresion -> expresion . IGUALIGUAL expresion
    (95) expresion -> expresion . DISTINTO expresion
    (96) expresion -> expresion . AND expresion
    (97) expresion -> expresion . OR expresion
    (49) fin_instr -> . PUNTOCOMA
    (50) fin_instr -> .

  ! shift/reduce conflict for MENOS resolved as shift
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIV             shift and go to state 99
    POT             shift and go to state 100
    MOD             shift and go to state 101
    MENORIGUAL      shift and go to state 102
    MENOR           shift and go to state 103
    MAYORIGUAL      shift and go to state 104
    MAYOR           shift and go to state 105
    IGUALIGUAL      shift and go to state 106
    DISTINTO        shift and go to state 107
    AND             shift and go to state 108
    OR              shift and go to state 109
    PUNTOCOMA       shift and go to state 53
    error           reduce using rule 50 (fin_instr -> .)
    Rconsole        reduce using rule 50 (fin_instr -> .)
    Rlet            reduce using rule 50 (fin_instr -> .)
    ID              reduce using rule 50 (fin_instr -> .)
    Rif             reduce using rule 50 (fin_instr -> .)
    Rbreak          reduce using rule 50 (fin_instr -> .)
    Rwhile          reduce using rule 50 (fin_instr -> .)
    Rfor            reduce using rule 50 (fin_instr -> .)
    Rcontinue       reduce using rule 50 (fin_instr -> .)
    Rfunc           reduce using rule 50 (fin_instr -> .)
    Rreturn         reduce using rule 50 (fin_instr -> .)
    Rnumber         reduce using rule 50 (fin_instr -> .)
    Rboolean        reduce using rule 50 (fin_instr -> .)
    Rstring         reduce using rule 50 (fin_instr -> .)
    Rany            reduce using rule 50 (fin_instr -> .)
    Rvoid           reduce using rule 50 (fin_instr -> .)
    $end            reduce using rule 50 (fin_instr -> .)
    NOT             reduce using rule 50 (fin_instr -> .)
    PARA            reduce using rule 50 (fin_instr -> .)
    ENTERO          reduce using rule 50 (fin_instr -> .)
    DECIMAL         reduce using rule 50 (fin_instr -> .)
    CADENA          reduce using rule 50 (fin_instr -> .)
    Rtrue           reduce using rule 50 (fin_instr -> .)
    Rfalse          reduce using rule 50 (fin_instr -> .)
    Rnull           reduce using rule 50 (fin_instr -> .)
    LLAVEC          reduce using rule 50 (fin_instr -> .)

  ! MENOS           [ reduce using rule 50 (fin_instr -> .) ]

    fin_instr                      shift and go to state 167

state 119

    (70) declaracion_arreglo2 -> Rlet ID IGUAL CORA . tipo_lista CORC fin_instr
    (74) tipo_lista -> . d1
    (75) tipo_lista -> . d2
    (76) tipo_lista -> . d3
    (77) d1 -> . d1 COMA expresion
    (78) d1 -> . expresion
    (79) d2 -> . d2 COMA LLAVEA d1 LLAVEC
    (80) d2 -> . LLAVEA d1 LLAVEC
    (81) d3 -> . d3 COMA LLAVEA d2 LLAVEC
    (82) d3 -> . LLAVEA d2 LLAVEC
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    LLAVEA          shift and go to state 173
    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    tipo_lista                     shift and go to state 168
    d1                             shift and go to state 169
    d2                             shift and go to state 170
    d3                             shift and go to state 171
    expresion                      shift and go to state 172
    llamada                        shift and go to state 69

state 120

    (35) asignacion -> ID IGUAL expresion fin_instr .

    error           reduce using rule 35 (asignacion -> ID IGUAL expresion fin_instr .)
    Rconsole        reduce using rule 35 (asignacion -> ID IGUAL expresion fin_instr .)
    Rlet            reduce using rule 35 (asignacion -> ID IGUAL expresion fin_instr .)
    ID              reduce using rule 35 (asignacion -> ID IGUAL expresion fin_instr .)
    Rif             reduce using rule 35 (asignacion -> ID IGUAL expresion fin_instr .)
    Rbreak          reduce using rule 35 (asignacion -> ID IGUAL expresion fin_instr .)
    Rwhile          reduce using rule 35 (asignacion -> ID IGUAL expresion fin_instr .)
    Rfor            reduce using rule 35 (asignacion -> ID IGUAL expresion fin_instr .)
    Rcontinue       reduce using rule 35 (asignacion -> ID IGUAL expresion fin_instr .)
    Rfunc           reduce using rule 35 (asignacion -> ID IGUAL expresion fin_instr .)
    Rreturn         reduce using rule 35 (asignacion -> ID IGUAL expresion fin_instr .)
    Rnumber         reduce using rule 35 (asignacion -> ID IGUAL expresion fin_instr .)
    Rboolean        reduce using rule 35 (asignacion -> ID IGUAL expresion fin_instr .)
    Rstring         reduce using rule 35 (asignacion -> ID IGUAL expresion fin_instr .)
    Rany            reduce using rule 35 (asignacion -> ID IGUAL expresion fin_instr .)
    Rvoid           reduce using rule 35 (asignacion -> ID IGUAL expresion fin_instr .)
    $end            reduce using rule 35 (asignacion -> ID IGUAL expresion fin_instr .)
    MENOS           reduce using rule 35 (asignacion -> ID IGUAL expresion fin_instr .)
    NOT             reduce using rule 35 (asignacion -> ID IGUAL expresion fin_instr .)
    PARA            reduce using rule 35 (asignacion -> ID IGUAL expresion fin_instr .)
    ENTERO          reduce using rule 35 (asignacion -> ID IGUAL expresion fin_instr .)
    DECIMAL         reduce using rule 35 (asignacion -> ID IGUAL expresion fin_instr .)
    CADENA          reduce using rule 35 (asignacion -> ID IGUAL expresion fin_instr .)
    Rtrue           reduce using rule 35 (asignacion -> ID IGUAL expresion fin_instr .)
    Rfalse          reduce using rule 35 (asignacion -> ID IGUAL expresion fin_instr .)
    Rnull           reduce using rule 35 (asignacion -> ID IGUAL expresion fin_instr .)
    LLAVEC          reduce using rule 35 (asignacion -> ID IGUAL expresion fin_instr .)
    PARC            reduce using rule 35 (asignacion -> ID IGUAL expresion fin_instr .)


state 121

    (60) llamada -> ID PARA parametros_llamada PARC . fin_instr
    (49) fin_instr -> . PUNTOCOMA
    (50) fin_instr -> .

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
    PUNTOCOMA       shift and go to state 53
    error           reduce using rule 50 (fin_instr -> .)
    Rconsole        reduce using rule 50 (fin_instr -> .)
    Rlet            reduce using rule 50 (fin_instr -> .)
    ID              reduce using rule 50 (fin_instr -> .)
    Rif             reduce using rule 50 (fin_instr -> .)
    Rbreak          reduce using rule 50 (fin_instr -> .)
    Rwhile          reduce using rule 50 (fin_instr -> .)
    Rfor            reduce using rule 50 (fin_instr -> .)
    Rcontinue       reduce using rule 50 (fin_instr -> .)
    Rfunc           reduce using rule 50 (fin_instr -> .)
    Rreturn         reduce using rule 50 (fin_instr -> .)
    Rnumber         reduce using rule 50 (fin_instr -> .)
    Rboolean        reduce using rule 50 (fin_instr -> .)
    Rstring         reduce using rule 50 (fin_instr -> .)
    Rany            reduce using rule 50 (fin_instr -> .)
    Rvoid           reduce using rule 50 (fin_instr -> .)
    $end            reduce using rule 50 (fin_instr -> .)
    MAS             reduce using rule 50 (fin_instr -> .)
    MENOS           reduce using rule 50 (fin_instr -> .)
    POR             reduce using rule 50 (fin_instr -> .)
    DIV             reduce using rule 50 (fin_instr -> .)
    POT             reduce using rule 50 (fin_instr -> .)
    MOD             reduce using rule 50 (fin_instr -> .)
    MENORIGUAL      reduce using rule 50 (fin_instr -> .)
    MENOR           reduce using rule 50 (fin_instr -> .)
    MAYORIGUAL      reduce using rule 50 (fin_instr -> .)
    MAYOR           reduce using rule 50 (fin_instr -> .)
    IGUALIGUAL      reduce using rule 50 (fin_instr -> .)
    DISTINTO        reduce using rule 50 (fin_instr -> .)
    AND             reduce using rule 50 (fin_instr -> .)
    OR              reduce using rule 50 (fin_instr -> .)
    LLAVEC          reduce using rule 50 (fin_instr -> .)
    NOT             reduce using rule 50 (fin_instr -> .)
    PARA            reduce using rule 50 (fin_instr -> .)
    ENTERO          reduce using rule 50 (fin_instr -> .)
    DECIMAL         reduce using rule 50 (fin_instr -> .)
    CADENA          reduce using rule 50 (fin_instr -> .)
    Rtrue           reduce using rule 50 (fin_instr -> .)
    Rfalse          reduce using rule 50 (fin_instr -> .)
    Rnull           reduce using rule 50 (fin_instr -> .)
    PARC            reduce using rule 50 (fin_instr -> .)
    COMA            reduce using rule 50 (fin_instr -> .)
    CORC            reduce using rule 50 (fin_instr -> .)

  ! PUNTOCOMA       [ reduce using rule 50 (fin_instr -> .) ]

    fin_instr                      shift and go to state 174

state 122

    (62) parametros_llamada -> parametros_llamada COMA . parametro_llam
    (64) parametro_llam -> . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    parametro_llam                 shift and go to state 175
    expresion                      shift and go to state 80
    llamada                        shift and go to state 69

state 123

    (61) llamada -> ID PARA PARC fin_instr .

    error           reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    Rconsole        reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    Rlet            reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    ID              reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    Rif             reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    Rbreak          reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    Rwhile          reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    Rfor            reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    Rcontinue       reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    Rfunc           reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    Rreturn         reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    Rnumber         reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    Rboolean        reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    Rstring         reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    Rany            reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    Rvoid           reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    $end            reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    MAS             reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    MENOS           reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    POR             reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    DIV             reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    POT             reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    MOD             reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    MENORIGUAL      reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    MENOR           reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    MAYORIGUAL      reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    MAYOR           reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    IGUALIGUAL      reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    DISTINTO        reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    AND             reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    OR              reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    PUNTOCOMA       reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    LLAVEC          reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    NOT             reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    PARA            reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    ENTERO          reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    DECIMAL         reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    CADENA          reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    Rtrue           reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    Rfalse          reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    Rnull           reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    PARC            reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    COMA            reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)
    CORC            reduce using rule 61 (llamada -> ID PARA PARC fin_instr .)


state 124

    (83) modificar_arreglo -> ID lista_expresiones IGUAL expresion . fin_instr
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MOD expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . MENOR expresion
    (92) expresion -> expresion . MAYORIGUAL expresion
    (93) expresion -> expresion . MAYOR expresion
    (94) expresion -> expresion . IGUALIGUAL expresion
    (95) expresion -> expresion . DISTINTO expresion
    (96) expresion -> expresion . AND expresion
    (97) expresion -> expresion . OR expresion
    (49) fin_instr -> . PUNTOCOMA
    (50) fin_instr -> .

    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIV             shift and go to state 99
    POT             shift and go to state 100
    MOD             shift and go to state 101
    MENORIGUAL      shift and go to state 102
    MENOR           shift and go to state 103
    MAYORIGUAL      shift and go to state 104
    MAYOR           shift and go to state 105
    IGUALIGUAL      shift and go to state 106
    DISTINTO        shift and go to state 107
    AND             shift and go to state 108
    OR              shift and go to state 109
    PUNTOCOMA       shift and go to state 53
    error           reduce using rule 50 (fin_instr -> .)
    Rconsole        reduce using rule 50 (fin_instr -> .)
    Rlet            reduce using rule 50 (fin_instr -> .)
    ID              reduce using rule 50 (fin_instr -> .)
    Rif             reduce using rule 50 (fin_instr -> .)
    Rbreak          reduce using rule 50 (fin_instr -> .)
    Rwhile          reduce using rule 50 (fin_instr -> .)
    Rfor            reduce using rule 50 (fin_instr -> .)
    Rcontinue       reduce using rule 50 (fin_instr -> .)
    Rfunc           reduce using rule 50 (fin_instr -> .)
    Rreturn         reduce using rule 50 (fin_instr -> .)
    Rnumber         reduce using rule 50 (fin_instr -> .)
    Rboolean        reduce using rule 50 (fin_instr -> .)
    Rstring         reduce using rule 50 (fin_instr -> .)
    Rany            reduce using rule 50 (fin_instr -> .)
    Rvoid           reduce using rule 50 (fin_instr -> .)
    $end            reduce using rule 50 (fin_instr -> .)
    LLAVEC          reduce using rule 50 (fin_instr -> .)

    fin_instr                      shift and go to state 176

state 125

    (68) lista_expresiones -> lista_expresiones CORA expresion . CORC
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MOD expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . MENOR expresion
    (92) expresion -> expresion . MAYORIGUAL expresion
    (93) expresion -> expresion . MAYOR expresion
    (94) expresion -> expresion . IGUALIGUAL expresion
    (95) expresion -> expresion . DISTINTO expresion
    (96) expresion -> expresion . AND expresion
    (97) expresion -> expresion . OR expresion

    CORC            shift and go to state 177
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIV             shift and go to state 99
    POT             shift and go to state 100
    MOD             shift and go to state 101
    MENORIGUAL      shift and go to state 102
    MENOR           shift and go to state 103
    MAYORIGUAL      shift and go to state 104
    MAYOR           shift and go to state 105
    IGUALIGUAL      shift and go to state 106
    DISTINTO        shift and go to state 107
    AND             shift and go to state 108
    OR              shift and go to state 109


state 126

    (69) lista_expresiones -> CORA expresion CORC .

    IGUAL           reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    CORA            reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    MAS             reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    MENOS           reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    POR             reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    DIV             reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    POT             reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    MOD             reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    MENORIGUAL      reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    MENOR           reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    MAYORIGUAL      reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    MAYOR           reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    IGUALIGUAL      reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    DISTINTO        reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    AND             reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    OR              reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    PUNTOCOMA       reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    error           reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    Rconsole        reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    Rlet            reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    ID              reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    Rif             reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    Rbreak          reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    Rwhile          reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    Rfor            reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    Rcontinue       reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    Rfunc           reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    Rreturn         reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    Rnumber         reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    Rboolean        reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    Rstring         reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    Rany            reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    Rvoid           reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    $end            reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    LLAVEC          reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    NOT             reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    PARA            reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    ENTERO          reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    DECIMAL         reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    CADENA          reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    Rtrue           reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    Rfalse          reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    Rnull           reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    PARC            reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    COMA            reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)
    CORC            reduce using rule 69 (lista_expresiones -> CORA expresion CORC .)


state 127

    (73) declaracion_arreglo2 -> tipo lista_Dim ID IGUAL . ID

    ID              shift and go to state 178


state 128

    (66) lista_Dim -> lista_Dim CORA CORC .

    ID              reduce using rule 66 (lista_Dim -> lista_Dim CORA CORC .)
    CORA            reduce using rule 66 (lista_Dim -> lista_Dim CORA CORC .)
    IGUAL           reduce using rule 66 (lista_Dim -> lista_Dim CORA CORC .)
    PARC            reduce using rule 66 (lista_Dim -> lista_Dim CORA CORC .)
    COMA            reduce using rule 66 (lista_Dim -> lista_Dim CORA CORC .)


state 129

    (36) if -> Rif PARA expresion PARC . LLAVEA instrucciones LLAVEC
    (37) if -> Rif PARA expresion PARC . LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC
    (38) if -> Rif PARA expresion PARC . LLAVEA instrucciones LLAVEC Relse if

    LLAVEA          shift and go to state 179


state 130

    (40) while -> Rwhile PARA expresion PARC . LLAVEA instrucciones LLAVEC

    LLAVEA          shift and go to state 180


state 131

    (43) for -> Rfor PARA declar_asig expresion . fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MOD expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . MENOR expresion
    (92) expresion -> expresion . MAYORIGUAL expresion
    (93) expresion -> expresion . MAYOR expresion
    (94) expresion -> expresion . IGUALIGUAL expresion
    (95) expresion -> expresion . DISTINTO expresion
    (96) expresion -> expresion . AND expresion
    (97) expresion -> expresion . OR expresion
    (49) fin_instr -> . PUNTOCOMA
    (50) fin_instr -> .

    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIV             shift and go to state 99
    POT             shift and go to state 100
    MOD             shift and go to state 101
    MENORIGUAL      shift and go to state 102
    MENOR           shift and go to state 103
    MAYORIGUAL      shift and go to state 104
    MAYOR           shift and go to state 105
    IGUALIGUAL      shift and go to state 106
    DISTINTO        shift and go to state 107
    AND             shift and go to state 108
    OR              shift and go to state 109
    PUNTOCOMA       shift and go to state 53
    ID              reduce using rule 50 (fin_instr -> .)

    fin_instr                      shift and go to state 181

state 132

    (26) declaracion -> Rlet ID . DOSPUNTO tipo IGUAL expresion fin_instr
    (27) declaracion -> Rlet ID . IGUAL expresion fin_instr

    DOSPUNTO        shift and go to state 182
    IGUAL           shift and go to state 183


state 133

    (57) parametro -> ID . DOSPUNTO tipo
    (58) parametro -> ID . DOSPUNTO tipo lista_Dim

    DOSPUNTO        shift and go to state 184


state 134

    (51) funcion -> Rfunc ID PARA parametros . PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (53) funcion -> Rfunc ID PARA parametros . PARC LLAVEA instrucciones LLAVEC
    (55) parametros -> parametros . COMA parametro

    PARC            shift and go to state 185
    COMA            shift and go to state 186


state 135

    (52) funcion -> Rfunc ID PARA PARC . DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (54) funcion -> Rfunc ID PARA PARC . LLAVEA instrucciones LLAVEC

    DOSPUNTO        shift and go to state 187
    LLAVEA          shift and go to state 188


state 136

    (56) parametros -> parametro .

    PARC            reduce using rule 56 (parametros -> parametro .)
    COMA            reduce using rule 56 (parametros -> parametro .)


state 137

    (84) expresion -> expresion MAS expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MOD expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . MENOR expresion
    (92) expresion -> expresion . MAYORIGUAL expresion
    (93) expresion -> expresion . MAYOR expresion
    (94) expresion -> expresion . IGUALIGUAL expresion
    (95) expresion -> expresion . DISTINTO expresion
    (96) expresion -> expresion . AND expresion
    (97) expresion -> expresion . OR expresion

    MAS             reduce using rule 84 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 84 (expresion -> expresion MAS expresion .)
    MENORIGUAL      reduce using rule 84 (expresion -> expresion MAS expresion .)
    MENOR           reduce using rule 84 (expresion -> expresion MAS expresion .)
    MAYORIGUAL      reduce using rule 84 (expresion -> expresion MAS expresion .)
    MAYOR           reduce using rule 84 (expresion -> expresion MAS expresion .)
    IGUALIGUAL      reduce using rule 84 (expresion -> expresion MAS expresion .)
    DISTINTO        reduce using rule 84 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 84 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 84 (expresion -> expresion MAS expresion .)
    PUNTOCOMA       reduce using rule 84 (expresion -> expresion MAS expresion .)
    error           reduce using rule 84 (expresion -> expresion MAS expresion .)
    Rconsole        reduce using rule 84 (expresion -> expresion MAS expresion .)
    Rlet            reduce using rule 84 (expresion -> expresion MAS expresion .)
    ID              reduce using rule 84 (expresion -> expresion MAS expresion .)
    Rif             reduce using rule 84 (expresion -> expresion MAS expresion .)
    Rbreak          reduce using rule 84 (expresion -> expresion MAS expresion .)
    Rwhile          reduce using rule 84 (expresion -> expresion MAS expresion .)
    Rfor            reduce using rule 84 (expresion -> expresion MAS expresion .)
    Rcontinue       reduce using rule 84 (expresion -> expresion MAS expresion .)
    Rfunc           reduce using rule 84 (expresion -> expresion MAS expresion .)
    Rreturn         reduce using rule 84 (expresion -> expresion MAS expresion .)
    Rnumber         reduce using rule 84 (expresion -> expresion MAS expresion .)
    Rboolean        reduce using rule 84 (expresion -> expresion MAS expresion .)
    Rstring         reduce using rule 84 (expresion -> expresion MAS expresion .)
    Rany            reduce using rule 84 (expresion -> expresion MAS expresion .)
    Rvoid           reduce using rule 84 (expresion -> expresion MAS expresion .)
    $end            reduce using rule 84 (expresion -> expresion MAS expresion .)
    LLAVEC          reduce using rule 84 (expresion -> expresion MAS expresion .)
    NOT             reduce using rule 84 (expresion -> expresion MAS expresion .)
    PARA            reduce using rule 84 (expresion -> expresion MAS expresion .)
    ENTERO          reduce using rule 84 (expresion -> expresion MAS expresion .)
    DECIMAL         reduce using rule 84 (expresion -> expresion MAS expresion .)
    CADENA          reduce using rule 84 (expresion -> expresion MAS expresion .)
    Rtrue           reduce using rule 84 (expresion -> expresion MAS expresion .)
    Rfalse          reduce using rule 84 (expresion -> expresion MAS expresion .)
    Rnull           reduce using rule 84 (expresion -> expresion MAS expresion .)
    PARC            reduce using rule 84 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 84 (expresion -> expresion MAS expresion .)
    CORC            reduce using rule 84 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 98
    DIV             shift and go to state 99
    POT             shift and go to state 100
    MOD             shift and go to state 101

  ! POR             [ reduce using rule 84 (expresion -> expresion MAS expresion .) ]
  ! DIV             [ reduce using rule 84 (expresion -> expresion MAS expresion .) ]
  ! POT             [ reduce using rule 84 (expresion -> expresion MAS expresion .) ]
  ! MOD             [ reduce using rule 84 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 96 ]
  ! MENOS           [ shift and go to state 97 ]
  ! MENORIGUAL      [ shift and go to state 102 ]
  ! MENOR           [ shift and go to state 103 ]
  ! MAYORIGUAL      [ shift and go to state 104 ]
  ! MAYOR           [ shift and go to state 105 ]
  ! IGUALIGUAL      [ shift and go to state 106 ]
  ! DISTINTO        [ shift and go to state 107 ]
  ! AND             [ shift and go to state 108 ]
  ! OR              [ shift and go to state 109 ]


state 138

    (85) expresion -> expresion MENOS expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MOD expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . MENOR expresion
    (92) expresion -> expresion . MAYORIGUAL expresion
    (93) expresion -> expresion . MAYOR expresion
    (94) expresion -> expresion . IGUALIGUAL expresion
    (95) expresion -> expresion . DISTINTO expresion
    (96) expresion -> expresion . AND expresion
    (97) expresion -> expresion . OR expresion

    MAS             reduce using rule 85 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 85 (expresion -> expresion MENOS expresion .)
    MENORIGUAL      reduce using rule 85 (expresion -> expresion MENOS expresion .)
    MENOR           reduce using rule 85 (expresion -> expresion MENOS expresion .)
    MAYORIGUAL      reduce using rule 85 (expresion -> expresion MENOS expresion .)
    MAYOR           reduce using rule 85 (expresion -> expresion MENOS expresion .)
    IGUALIGUAL      reduce using rule 85 (expresion -> expresion MENOS expresion .)
    DISTINTO        reduce using rule 85 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 85 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 85 (expresion -> expresion MENOS expresion .)
    PUNTOCOMA       reduce using rule 85 (expresion -> expresion MENOS expresion .)
    error           reduce using rule 85 (expresion -> expresion MENOS expresion .)
    Rconsole        reduce using rule 85 (expresion -> expresion MENOS expresion .)
    Rlet            reduce using rule 85 (expresion -> expresion MENOS expresion .)
    ID              reduce using rule 85 (expresion -> expresion MENOS expresion .)
    Rif             reduce using rule 85 (expresion -> expresion MENOS expresion .)
    Rbreak          reduce using rule 85 (expresion -> expresion MENOS expresion .)
    Rwhile          reduce using rule 85 (expresion -> expresion MENOS expresion .)
    Rfor            reduce using rule 85 (expresion -> expresion MENOS expresion .)
    Rcontinue       reduce using rule 85 (expresion -> expresion MENOS expresion .)
    Rfunc           reduce using rule 85 (expresion -> expresion MENOS expresion .)
    Rreturn         reduce using rule 85 (expresion -> expresion MENOS expresion .)
    Rnumber         reduce using rule 85 (expresion -> expresion MENOS expresion .)
    Rboolean        reduce using rule 85 (expresion -> expresion MENOS expresion .)
    Rstring         reduce using rule 85 (expresion -> expresion MENOS expresion .)
    Rany            reduce using rule 85 (expresion -> expresion MENOS expresion .)
    Rvoid           reduce using rule 85 (expresion -> expresion MENOS expresion .)
    $end            reduce using rule 85 (expresion -> expresion MENOS expresion .)
    LLAVEC          reduce using rule 85 (expresion -> expresion MENOS expresion .)
    NOT             reduce using rule 85 (expresion -> expresion MENOS expresion .)
    PARA            reduce using rule 85 (expresion -> expresion MENOS expresion .)
    ENTERO          reduce using rule 85 (expresion -> expresion MENOS expresion .)
    DECIMAL         reduce using rule 85 (expresion -> expresion MENOS expresion .)
    CADENA          reduce using rule 85 (expresion -> expresion MENOS expresion .)
    Rtrue           reduce using rule 85 (expresion -> expresion MENOS expresion .)
    Rfalse          reduce using rule 85 (expresion -> expresion MENOS expresion .)
    Rnull           reduce using rule 85 (expresion -> expresion MENOS expresion .)
    PARC            reduce using rule 85 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 85 (expresion -> expresion MENOS expresion .)
    CORC            reduce using rule 85 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 98
    DIV             shift and go to state 99
    POT             shift and go to state 100
    MOD             shift and go to state 101

  ! POR             [ reduce using rule 85 (expresion -> expresion MENOS expresion .) ]
  ! DIV             [ reduce using rule 85 (expresion -> expresion MENOS expresion .) ]
  ! POT             [ reduce using rule 85 (expresion -> expresion MENOS expresion .) ]
  ! MOD             [ reduce using rule 85 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 96 ]
  ! MENOS           [ shift and go to state 97 ]
  ! MENORIGUAL      [ shift and go to state 102 ]
  ! MENOR           [ shift and go to state 103 ]
  ! MAYORIGUAL      [ shift and go to state 104 ]
  ! MAYOR           [ shift and go to state 105 ]
  ! IGUALIGUAL      [ shift and go to state 106 ]
  ! DISTINTO        [ shift and go to state 107 ]
  ! AND             [ shift and go to state 108 ]
  ! OR              [ shift and go to state 109 ]


state 139

    (86) expresion -> expresion POR expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MOD expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . MENOR expresion
    (92) expresion -> expresion . MAYORIGUAL expresion
    (93) expresion -> expresion . MAYOR expresion
    (94) expresion -> expresion . IGUALIGUAL expresion
    (95) expresion -> expresion . DISTINTO expresion
    (96) expresion -> expresion . AND expresion
    (97) expresion -> expresion . OR expresion

    MAS             reduce using rule 86 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 86 (expresion -> expresion POR expresion .)
    POR             reduce using rule 86 (expresion -> expresion POR expresion .)
    DIV             reduce using rule 86 (expresion -> expresion POR expresion .)
    MOD             reduce using rule 86 (expresion -> expresion POR expresion .)
    MENORIGUAL      reduce using rule 86 (expresion -> expresion POR expresion .)
    MENOR           reduce using rule 86 (expresion -> expresion POR expresion .)
    MAYORIGUAL      reduce using rule 86 (expresion -> expresion POR expresion .)
    MAYOR           reduce using rule 86 (expresion -> expresion POR expresion .)
    IGUALIGUAL      reduce using rule 86 (expresion -> expresion POR expresion .)
    DISTINTO        reduce using rule 86 (expresion -> expresion POR expresion .)
    AND             reduce using rule 86 (expresion -> expresion POR expresion .)
    OR              reduce using rule 86 (expresion -> expresion POR expresion .)
    PUNTOCOMA       reduce using rule 86 (expresion -> expresion POR expresion .)
    error           reduce using rule 86 (expresion -> expresion POR expresion .)
    Rconsole        reduce using rule 86 (expresion -> expresion POR expresion .)
    Rlet            reduce using rule 86 (expresion -> expresion POR expresion .)
    ID              reduce using rule 86 (expresion -> expresion POR expresion .)
    Rif             reduce using rule 86 (expresion -> expresion POR expresion .)
    Rbreak          reduce using rule 86 (expresion -> expresion POR expresion .)
    Rwhile          reduce using rule 86 (expresion -> expresion POR expresion .)
    Rfor            reduce using rule 86 (expresion -> expresion POR expresion .)
    Rcontinue       reduce using rule 86 (expresion -> expresion POR expresion .)
    Rfunc           reduce using rule 86 (expresion -> expresion POR expresion .)
    Rreturn         reduce using rule 86 (expresion -> expresion POR expresion .)
    Rnumber         reduce using rule 86 (expresion -> expresion POR expresion .)
    Rboolean        reduce using rule 86 (expresion -> expresion POR expresion .)
    Rstring         reduce using rule 86 (expresion -> expresion POR expresion .)
    Rany            reduce using rule 86 (expresion -> expresion POR expresion .)
    Rvoid           reduce using rule 86 (expresion -> expresion POR expresion .)
    $end            reduce using rule 86 (expresion -> expresion POR expresion .)
    LLAVEC          reduce using rule 86 (expresion -> expresion POR expresion .)
    NOT             reduce using rule 86 (expresion -> expresion POR expresion .)
    PARA            reduce using rule 86 (expresion -> expresion POR expresion .)
    ENTERO          reduce using rule 86 (expresion -> expresion POR expresion .)
    DECIMAL         reduce using rule 86 (expresion -> expresion POR expresion .)
    CADENA          reduce using rule 86 (expresion -> expresion POR expresion .)
    Rtrue           reduce using rule 86 (expresion -> expresion POR expresion .)
    Rfalse          reduce using rule 86 (expresion -> expresion POR expresion .)
    Rnull           reduce using rule 86 (expresion -> expresion POR expresion .)
    PARC            reduce using rule 86 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 86 (expresion -> expresion POR expresion .)
    CORC            reduce using rule 86 (expresion -> expresion POR expresion .)
    POT             shift and go to state 100

  ! POT             [ reduce using rule 86 (expresion -> expresion POR expresion .) ]
  ! MAS             [ shift and go to state 96 ]
  ! MENOS           [ shift and go to state 97 ]
  ! POR             [ shift and go to state 98 ]
  ! DIV             [ shift and go to state 99 ]
  ! MOD             [ shift and go to state 101 ]
  ! MENORIGUAL      [ shift and go to state 102 ]
  ! MENOR           [ shift and go to state 103 ]
  ! MAYORIGUAL      [ shift and go to state 104 ]
  ! MAYOR           [ shift and go to state 105 ]
  ! IGUALIGUAL      [ shift and go to state 106 ]
  ! DISTINTO        [ shift and go to state 107 ]
  ! AND             [ shift and go to state 108 ]
  ! OR              [ shift and go to state 109 ]


state 140

    (87) expresion -> expresion DIV expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MOD expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . MENOR expresion
    (92) expresion -> expresion . MAYORIGUAL expresion
    (93) expresion -> expresion . MAYOR expresion
    (94) expresion -> expresion . IGUALIGUAL expresion
    (95) expresion -> expresion . DISTINTO expresion
    (96) expresion -> expresion . AND expresion
    (97) expresion -> expresion . OR expresion

    MAS             reduce using rule 87 (expresion -> expresion DIV expresion .)
    MENOS           reduce using rule 87 (expresion -> expresion DIV expresion .)
    POR             reduce using rule 87 (expresion -> expresion DIV expresion .)
    DIV             reduce using rule 87 (expresion -> expresion DIV expresion .)
    MOD             reduce using rule 87 (expresion -> expresion DIV expresion .)
    MENORIGUAL      reduce using rule 87 (expresion -> expresion DIV expresion .)
    MENOR           reduce using rule 87 (expresion -> expresion DIV expresion .)
    MAYORIGUAL      reduce using rule 87 (expresion -> expresion DIV expresion .)
    MAYOR           reduce using rule 87 (expresion -> expresion DIV expresion .)
    IGUALIGUAL      reduce using rule 87 (expresion -> expresion DIV expresion .)
    DISTINTO        reduce using rule 87 (expresion -> expresion DIV expresion .)
    AND             reduce using rule 87 (expresion -> expresion DIV expresion .)
    OR              reduce using rule 87 (expresion -> expresion DIV expresion .)
    PUNTOCOMA       reduce using rule 87 (expresion -> expresion DIV expresion .)
    error           reduce using rule 87 (expresion -> expresion DIV expresion .)
    Rconsole        reduce using rule 87 (expresion -> expresion DIV expresion .)
    Rlet            reduce using rule 87 (expresion -> expresion DIV expresion .)
    ID              reduce using rule 87 (expresion -> expresion DIV expresion .)
    Rif             reduce using rule 87 (expresion -> expresion DIV expresion .)
    Rbreak          reduce using rule 87 (expresion -> expresion DIV expresion .)
    Rwhile          reduce using rule 87 (expresion -> expresion DIV expresion .)
    Rfor            reduce using rule 87 (expresion -> expresion DIV expresion .)
    Rcontinue       reduce using rule 87 (expresion -> expresion DIV expresion .)
    Rfunc           reduce using rule 87 (expresion -> expresion DIV expresion .)
    Rreturn         reduce using rule 87 (expresion -> expresion DIV expresion .)
    Rnumber         reduce using rule 87 (expresion -> expresion DIV expresion .)
    Rboolean        reduce using rule 87 (expresion -> expresion DIV expresion .)
    Rstring         reduce using rule 87 (expresion -> expresion DIV expresion .)
    Rany            reduce using rule 87 (expresion -> expresion DIV expresion .)
    Rvoid           reduce using rule 87 (expresion -> expresion DIV expresion .)
    $end            reduce using rule 87 (expresion -> expresion DIV expresion .)
    LLAVEC          reduce using rule 87 (expresion -> expresion DIV expresion .)
    NOT             reduce using rule 87 (expresion -> expresion DIV expresion .)
    PARA            reduce using rule 87 (expresion -> expresion DIV expresion .)
    ENTERO          reduce using rule 87 (expresion -> expresion DIV expresion .)
    DECIMAL         reduce using rule 87 (expresion -> expresion DIV expresion .)
    CADENA          reduce using rule 87 (expresion -> expresion DIV expresion .)
    Rtrue           reduce using rule 87 (expresion -> expresion DIV expresion .)
    Rfalse          reduce using rule 87 (expresion -> expresion DIV expresion .)
    Rnull           reduce using rule 87 (expresion -> expresion DIV expresion .)
    PARC            reduce using rule 87 (expresion -> expresion DIV expresion .)
    COMA            reduce using rule 87 (expresion -> expresion DIV expresion .)
    CORC            reduce using rule 87 (expresion -> expresion DIV expresion .)
    POT             shift and go to state 100

  ! POT             [ reduce using rule 87 (expresion -> expresion DIV expresion .) ]
  ! MAS             [ shift and go to state 96 ]
  ! MENOS           [ shift and go to state 97 ]
  ! POR             [ shift and go to state 98 ]
  ! DIV             [ shift and go to state 99 ]
  ! MOD             [ shift and go to state 101 ]
  ! MENORIGUAL      [ shift and go to state 102 ]
  ! MENOR           [ shift and go to state 103 ]
  ! MAYORIGUAL      [ shift and go to state 104 ]
  ! MAYOR           [ shift and go to state 105 ]
  ! IGUALIGUAL      [ shift and go to state 106 ]
  ! DISTINTO        [ shift and go to state 107 ]
  ! AND             [ shift and go to state 108 ]
  ! OR              [ shift and go to state 109 ]


state 141

    (88) expresion -> expresion POT expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MOD expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . MENOR expresion
    (92) expresion -> expresion . MAYORIGUAL expresion
    (93) expresion -> expresion . MAYOR expresion
    (94) expresion -> expresion . IGUALIGUAL expresion
    (95) expresion -> expresion . DISTINTO expresion
    (96) expresion -> expresion . AND expresion
    (97) expresion -> expresion . OR expresion

    MAS             reduce using rule 88 (expresion -> expresion POT expresion .)
    MENOS           reduce using rule 88 (expresion -> expresion POT expresion .)
    POR             reduce using rule 88 (expresion -> expresion POT expresion .)
    DIV             reduce using rule 88 (expresion -> expresion POT expresion .)
    POT             reduce using rule 88 (expresion -> expresion POT expresion .)
    MOD             reduce using rule 88 (expresion -> expresion POT expresion .)
    MENORIGUAL      reduce using rule 88 (expresion -> expresion POT expresion .)
    MENOR           reduce using rule 88 (expresion -> expresion POT expresion .)
    MAYORIGUAL      reduce using rule 88 (expresion -> expresion POT expresion .)
    MAYOR           reduce using rule 88 (expresion -> expresion POT expresion .)
    IGUALIGUAL      reduce using rule 88 (expresion -> expresion POT expresion .)
    DISTINTO        reduce using rule 88 (expresion -> expresion POT expresion .)
    AND             reduce using rule 88 (expresion -> expresion POT expresion .)
    OR              reduce using rule 88 (expresion -> expresion POT expresion .)
    PUNTOCOMA       reduce using rule 88 (expresion -> expresion POT expresion .)
    error           reduce using rule 88 (expresion -> expresion POT expresion .)
    Rconsole        reduce using rule 88 (expresion -> expresion POT expresion .)
    Rlet            reduce using rule 88 (expresion -> expresion POT expresion .)
    ID              reduce using rule 88 (expresion -> expresion POT expresion .)
    Rif             reduce using rule 88 (expresion -> expresion POT expresion .)
    Rbreak          reduce using rule 88 (expresion -> expresion POT expresion .)
    Rwhile          reduce using rule 88 (expresion -> expresion POT expresion .)
    Rfor            reduce using rule 88 (expresion -> expresion POT expresion .)
    Rcontinue       reduce using rule 88 (expresion -> expresion POT expresion .)
    Rfunc           reduce using rule 88 (expresion -> expresion POT expresion .)
    Rreturn         reduce using rule 88 (expresion -> expresion POT expresion .)
    Rnumber         reduce using rule 88 (expresion -> expresion POT expresion .)
    Rboolean        reduce using rule 88 (expresion -> expresion POT expresion .)
    Rstring         reduce using rule 88 (expresion -> expresion POT expresion .)
    Rany            reduce using rule 88 (expresion -> expresion POT expresion .)
    Rvoid           reduce using rule 88 (expresion -> expresion POT expresion .)
    $end            reduce using rule 88 (expresion -> expresion POT expresion .)
    LLAVEC          reduce using rule 88 (expresion -> expresion POT expresion .)
    NOT             reduce using rule 88 (expresion -> expresion POT expresion .)
    PARA            reduce using rule 88 (expresion -> expresion POT expresion .)
    ENTERO          reduce using rule 88 (expresion -> expresion POT expresion .)
    DECIMAL         reduce using rule 88 (expresion -> expresion POT expresion .)
    CADENA          reduce using rule 88 (expresion -> expresion POT expresion .)
    Rtrue           reduce using rule 88 (expresion -> expresion POT expresion .)
    Rfalse          reduce using rule 88 (expresion -> expresion POT expresion .)
    Rnull           reduce using rule 88 (expresion -> expresion POT expresion .)
    PARC            reduce using rule 88 (expresion -> expresion POT expresion .)
    COMA            reduce using rule 88 (expresion -> expresion POT expresion .)
    CORC            reduce using rule 88 (expresion -> expresion POT expresion .)

  ! MAS             [ shift and go to state 96 ]
  ! MENOS           [ shift and go to state 97 ]
  ! POR             [ shift and go to state 98 ]
  ! DIV             [ shift and go to state 99 ]
  ! POT             [ shift and go to state 100 ]
  ! MOD             [ shift and go to state 101 ]
  ! MENORIGUAL      [ shift and go to state 102 ]
  ! MENOR           [ shift and go to state 103 ]
  ! MAYORIGUAL      [ shift and go to state 104 ]
  ! MAYOR           [ shift and go to state 105 ]
  ! IGUALIGUAL      [ shift and go to state 106 ]
  ! DISTINTO        [ shift and go to state 107 ]
  ! AND             [ shift and go to state 108 ]
  ! OR              [ shift and go to state 109 ]


state 142

    (89) expresion -> expresion MOD expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MOD expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . MENOR expresion
    (92) expresion -> expresion . MAYORIGUAL expresion
    (93) expresion -> expresion . MAYOR expresion
    (94) expresion -> expresion . IGUALIGUAL expresion
    (95) expresion -> expresion . DISTINTO expresion
    (96) expresion -> expresion . AND expresion
    (97) expresion -> expresion . OR expresion

    MAS             reduce using rule 89 (expresion -> expresion MOD expresion .)
    MENOS           reduce using rule 89 (expresion -> expresion MOD expresion .)
    POR             reduce using rule 89 (expresion -> expresion MOD expresion .)
    DIV             reduce using rule 89 (expresion -> expresion MOD expresion .)
    MOD             reduce using rule 89 (expresion -> expresion MOD expresion .)
    MENORIGUAL      reduce using rule 89 (expresion -> expresion MOD expresion .)
    MENOR           reduce using rule 89 (expresion -> expresion MOD expresion .)
    MAYORIGUAL      reduce using rule 89 (expresion -> expresion MOD expresion .)
    MAYOR           reduce using rule 89 (expresion -> expresion MOD expresion .)
    IGUALIGUAL      reduce using rule 89 (expresion -> expresion MOD expresion .)
    DISTINTO        reduce using rule 89 (expresion -> expresion MOD expresion .)
    AND             reduce using rule 89 (expresion -> expresion MOD expresion .)
    OR              reduce using rule 89 (expresion -> expresion MOD expresion .)
    PUNTOCOMA       reduce using rule 89 (expresion -> expresion MOD expresion .)
    error           reduce using rule 89 (expresion -> expresion MOD expresion .)
    Rconsole        reduce using rule 89 (expresion -> expresion MOD expresion .)
    Rlet            reduce using rule 89 (expresion -> expresion MOD expresion .)
    ID              reduce using rule 89 (expresion -> expresion MOD expresion .)
    Rif             reduce using rule 89 (expresion -> expresion MOD expresion .)
    Rbreak          reduce using rule 89 (expresion -> expresion MOD expresion .)
    Rwhile          reduce using rule 89 (expresion -> expresion MOD expresion .)
    Rfor            reduce using rule 89 (expresion -> expresion MOD expresion .)
    Rcontinue       reduce using rule 89 (expresion -> expresion MOD expresion .)
    Rfunc           reduce using rule 89 (expresion -> expresion MOD expresion .)
    Rreturn         reduce using rule 89 (expresion -> expresion MOD expresion .)
    Rnumber         reduce using rule 89 (expresion -> expresion MOD expresion .)
    Rboolean        reduce using rule 89 (expresion -> expresion MOD expresion .)
    Rstring         reduce using rule 89 (expresion -> expresion MOD expresion .)
    Rany            reduce using rule 89 (expresion -> expresion MOD expresion .)
    Rvoid           reduce using rule 89 (expresion -> expresion MOD expresion .)
    $end            reduce using rule 89 (expresion -> expresion MOD expresion .)
    LLAVEC          reduce using rule 89 (expresion -> expresion MOD expresion .)
    NOT             reduce using rule 89 (expresion -> expresion MOD expresion .)
    PARA            reduce using rule 89 (expresion -> expresion MOD expresion .)
    ENTERO          reduce using rule 89 (expresion -> expresion MOD expresion .)
    DECIMAL         reduce using rule 89 (expresion -> expresion MOD expresion .)
    CADENA          reduce using rule 89 (expresion -> expresion MOD expresion .)
    Rtrue           reduce using rule 89 (expresion -> expresion MOD expresion .)
    Rfalse          reduce using rule 89 (expresion -> expresion MOD expresion .)
    Rnull           reduce using rule 89 (expresion -> expresion MOD expresion .)
    PARC            reduce using rule 89 (expresion -> expresion MOD expresion .)
    COMA            reduce using rule 89 (expresion -> expresion MOD expresion .)
    CORC            reduce using rule 89 (expresion -> expresion MOD expresion .)
    POT             shift and go to state 100

  ! POT             [ reduce using rule 89 (expresion -> expresion MOD expresion .) ]
  ! MAS             [ shift and go to state 96 ]
  ! MENOS           [ shift and go to state 97 ]
  ! POR             [ shift and go to state 98 ]
  ! DIV             [ shift and go to state 99 ]
  ! MOD             [ shift and go to state 101 ]
  ! MENORIGUAL      [ shift and go to state 102 ]
  ! MENOR           [ shift and go to state 103 ]
  ! MAYORIGUAL      [ shift and go to state 104 ]
  ! MAYOR           [ shift and go to state 105 ]
  ! IGUALIGUAL      [ shift and go to state 106 ]
  ! DISTINTO        [ shift and go to state 107 ]
  ! AND             [ shift and go to state 108 ]
  ! OR              [ shift and go to state 109 ]


state 143

    (90) expresion -> expresion MENORIGUAL expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MOD expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . MENOR expresion
    (92) expresion -> expresion . MAYORIGUAL expresion
    (93) expresion -> expresion . MAYOR expresion
    (94) expresion -> expresion . IGUALIGUAL expresion
    (95) expresion -> expresion . DISTINTO expresion
    (96) expresion -> expresion . AND expresion
    (97) expresion -> expresion . OR expresion

    MENORIGUAL      reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    MENOR           reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    MAYOR           reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    IGUALIGUAL      reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    DISTINTO        reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    AND             reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    OR              reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    PUNTOCOMA       reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    error           reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    Rconsole        reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    Rlet            reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    ID              reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    Rif             reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    Rbreak          reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    Rwhile          reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    Rfor            reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    Rcontinue       reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    Rfunc           reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    Rreturn         reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    Rnumber         reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    Rboolean        reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    Rstring         reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    Rany            reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    Rvoid           reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    $end            reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    LLAVEC          reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    NOT             reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    PARA            reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    ENTERO          reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    DECIMAL         reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    CADENA          reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    Rtrue           reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    Rfalse          reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    Rnull           reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    PARC            reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    COMA            reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    CORC            reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIV             shift and go to state 99
    POT             shift and go to state 100
    MOD             shift and go to state 101

  ! MAS             [ reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POR             [ reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .) ]
  ! DIV             [ reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POT             [ reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MOD             [ reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MENORIGUAL      [ shift and go to state 102 ]
  ! MENOR           [ shift and go to state 103 ]
  ! MAYORIGUAL      [ shift and go to state 104 ]
  ! MAYOR           [ shift and go to state 105 ]
  ! IGUALIGUAL      [ shift and go to state 106 ]
  ! DISTINTO        [ shift and go to state 107 ]
  ! AND             [ shift and go to state 108 ]
  ! OR              [ shift and go to state 109 ]


state 144

    (91) expresion -> expresion MENOR expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MOD expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . MENOR expresion
    (92) expresion -> expresion . MAYORIGUAL expresion
    (93) expresion -> expresion . MAYOR expresion
    (94) expresion -> expresion . IGUALIGUAL expresion
    (95) expresion -> expresion . DISTINTO expresion
    (96) expresion -> expresion . AND expresion
    (97) expresion -> expresion . OR expresion

    MENORIGUAL      reduce using rule 91 (expresion -> expresion MENOR expresion .)
    MENOR           reduce using rule 91 (expresion -> expresion MENOR expresion .)
    MAYORIGUAL      reduce using rule 91 (expresion -> expresion MENOR expresion .)
    MAYOR           reduce using rule 91 (expresion -> expresion MENOR expresion .)
    IGUALIGUAL      reduce using rule 91 (expresion -> expresion MENOR expresion .)
    DISTINTO        reduce using rule 91 (expresion -> expresion MENOR expresion .)
    AND             reduce using rule 91 (expresion -> expresion MENOR expresion .)
    OR              reduce using rule 91 (expresion -> expresion MENOR expresion .)
    PUNTOCOMA       reduce using rule 91 (expresion -> expresion MENOR expresion .)
    error           reduce using rule 91 (expresion -> expresion MENOR expresion .)
    Rconsole        reduce using rule 91 (expresion -> expresion MENOR expresion .)
    Rlet            reduce using rule 91 (expresion -> expresion MENOR expresion .)
    ID              reduce using rule 91 (expresion -> expresion MENOR expresion .)
    Rif             reduce using rule 91 (expresion -> expresion MENOR expresion .)
    Rbreak          reduce using rule 91 (expresion -> expresion MENOR expresion .)
    Rwhile          reduce using rule 91 (expresion -> expresion MENOR expresion .)
    Rfor            reduce using rule 91 (expresion -> expresion MENOR expresion .)
    Rcontinue       reduce using rule 91 (expresion -> expresion MENOR expresion .)
    Rfunc           reduce using rule 91 (expresion -> expresion MENOR expresion .)
    Rreturn         reduce using rule 91 (expresion -> expresion MENOR expresion .)
    Rnumber         reduce using rule 91 (expresion -> expresion MENOR expresion .)
    Rboolean        reduce using rule 91 (expresion -> expresion MENOR expresion .)
    Rstring         reduce using rule 91 (expresion -> expresion MENOR expresion .)
    Rany            reduce using rule 91 (expresion -> expresion MENOR expresion .)
    Rvoid           reduce using rule 91 (expresion -> expresion MENOR expresion .)
    $end            reduce using rule 91 (expresion -> expresion MENOR expresion .)
    LLAVEC          reduce using rule 91 (expresion -> expresion MENOR expresion .)
    NOT             reduce using rule 91 (expresion -> expresion MENOR expresion .)
    PARA            reduce using rule 91 (expresion -> expresion MENOR expresion .)
    ENTERO          reduce using rule 91 (expresion -> expresion MENOR expresion .)
    DECIMAL         reduce using rule 91 (expresion -> expresion MENOR expresion .)
    CADENA          reduce using rule 91 (expresion -> expresion MENOR expresion .)
    Rtrue           reduce using rule 91 (expresion -> expresion MENOR expresion .)
    Rfalse          reduce using rule 91 (expresion -> expresion MENOR expresion .)
    Rnull           reduce using rule 91 (expresion -> expresion MENOR expresion .)
    PARC            reduce using rule 91 (expresion -> expresion MENOR expresion .)
    COMA            reduce using rule 91 (expresion -> expresion MENOR expresion .)
    CORC            reduce using rule 91 (expresion -> expresion MENOR expresion .)
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIV             shift and go to state 99
    POT             shift and go to state 100
    MOD             shift and go to state 101

  ! MAS             [ reduce using rule 91 (expresion -> expresion MENOR expresion .) ]
  ! MENOS           [ reduce using rule 91 (expresion -> expresion MENOR expresion .) ]
  ! POR             [ reduce using rule 91 (expresion -> expresion MENOR expresion .) ]
  ! DIV             [ reduce using rule 91 (expresion -> expresion MENOR expresion .) ]
  ! POT             [ reduce using rule 91 (expresion -> expresion MENOR expresion .) ]
  ! MOD             [ reduce using rule 91 (expresion -> expresion MENOR expresion .) ]
  ! MENORIGUAL      [ shift and go to state 102 ]
  ! MENOR           [ shift and go to state 103 ]
  ! MAYORIGUAL      [ shift and go to state 104 ]
  ! MAYOR           [ shift and go to state 105 ]
  ! IGUALIGUAL      [ shift and go to state 106 ]
  ! DISTINTO        [ shift and go to state 107 ]
  ! AND             [ shift and go to state 108 ]
  ! OR              [ shift and go to state 109 ]


state 145

    (92) expresion -> expresion MAYORIGUAL expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MOD expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . MENOR expresion
    (92) expresion -> expresion . MAYORIGUAL expresion
    (93) expresion -> expresion . MAYOR expresion
    (94) expresion -> expresion . IGUALIGUAL expresion
    (95) expresion -> expresion . DISTINTO expresion
    (96) expresion -> expresion . AND expresion
    (97) expresion -> expresion . OR expresion

    MENORIGUAL      reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .)
    MENOR           reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .)
    MAYOR           reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .)
    IGUALIGUAL      reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .)
    DISTINTO        reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .)
    AND             reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .)
    OR              reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .)
    PUNTOCOMA       reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .)
    error           reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .)
    Rconsole        reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .)
    Rlet            reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .)
    ID              reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .)
    Rif             reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .)
    Rbreak          reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .)
    Rwhile          reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .)
    Rfor            reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .)
    Rcontinue       reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .)
    Rfunc           reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .)
    Rreturn         reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .)
    Rnumber         reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .)
    Rboolean        reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .)
    Rstring         reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .)
    Rany            reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .)
    Rvoid           reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .)
    $end            reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .)
    LLAVEC          reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .)
    NOT             reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .)
    PARA            reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .)
    ENTERO          reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .)
    DECIMAL         reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .)
    CADENA          reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .)
    Rtrue           reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .)
    Rfalse          reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .)
    Rnull           reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .)
    PARC            reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .)
    COMA            reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .)
    CORC            reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .)
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIV             shift and go to state 99
    POT             shift and go to state 100
    MOD             shift and go to state 101

  ! MAS             [ reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POR             [ reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! DIV             [ reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POT             [ reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MOD             [ reduce using rule 92 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MENORIGUAL      [ shift and go to state 102 ]
  ! MENOR           [ shift and go to state 103 ]
  ! MAYORIGUAL      [ shift and go to state 104 ]
  ! MAYOR           [ shift and go to state 105 ]
  ! IGUALIGUAL      [ shift and go to state 106 ]
  ! DISTINTO        [ shift and go to state 107 ]
  ! AND             [ shift and go to state 108 ]
  ! OR              [ shift and go to state 109 ]


state 146

    (93) expresion -> expresion MAYOR expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MOD expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . MENOR expresion
    (92) expresion -> expresion . MAYORIGUAL expresion
    (93) expresion -> expresion . MAYOR expresion
    (94) expresion -> expresion . IGUALIGUAL expresion
    (95) expresion -> expresion . DISTINTO expresion
    (96) expresion -> expresion . AND expresion
    (97) expresion -> expresion . OR expresion

    MENORIGUAL      reduce using rule 93 (expresion -> expresion MAYOR expresion .)
    MENOR           reduce using rule 93 (expresion -> expresion MAYOR expresion .)
    MAYORIGUAL      reduce using rule 93 (expresion -> expresion MAYOR expresion .)
    MAYOR           reduce using rule 93 (expresion -> expresion MAYOR expresion .)
    IGUALIGUAL      reduce using rule 93 (expresion -> expresion MAYOR expresion .)
    DISTINTO        reduce using rule 93 (expresion -> expresion MAYOR expresion .)
    AND             reduce using rule 93 (expresion -> expresion MAYOR expresion .)
    OR              reduce using rule 93 (expresion -> expresion MAYOR expresion .)
    PUNTOCOMA       reduce using rule 93 (expresion -> expresion MAYOR expresion .)
    error           reduce using rule 93 (expresion -> expresion MAYOR expresion .)
    Rconsole        reduce using rule 93 (expresion -> expresion MAYOR expresion .)
    Rlet            reduce using rule 93 (expresion -> expresion MAYOR expresion .)
    ID              reduce using rule 93 (expresion -> expresion MAYOR expresion .)
    Rif             reduce using rule 93 (expresion -> expresion MAYOR expresion .)
    Rbreak          reduce using rule 93 (expresion -> expresion MAYOR expresion .)
    Rwhile          reduce using rule 93 (expresion -> expresion MAYOR expresion .)
    Rfor            reduce using rule 93 (expresion -> expresion MAYOR expresion .)
    Rcontinue       reduce using rule 93 (expresion -> expresion MAYOR expresion .)
    Rfunc           reduce using rule 93 (expresion -> expresion MAYOR expresion .)
    Rreturn         reduce using rule 93 (expresion -> expresion MAYOR expresion .)
    Rnumber         reduce using rule 93 (expresion -> expresion MAYOR expresion .)
    Rboolean        reduce using rule 93 (expresion -> expresion MAYOR expresion .)
    Rstring         reduce using rule 93 (expresion -> expresion MAYOR expresion .)
    Rany            reduce using rule 93 (expresion -> expresion MAYOR expresion .)
    Rvoid           reduce using rule 93 (expresion -> expresion MAYOR expresion .)
    $end            reduce using rule 93 (expresion -> expresion MAYOR expresion .)
    LLAVEC          reduce using rule 93 (expresion -> expresion MAYOR expresion .)
    NOT             reduce using rule 93 (expresion -> expresion MAYOR expresion .)
    PARA            reduce using rule 93 (expresion -> expresion MAYOR expresion .)
    ENTERO          reduce using rule 93 (expresion -> expresion MAYOR expresion .)
    DECIMAL         reduce using rule 93 (expresion -> expresion MAYOR expresion .)
    CADENA          reduce using rule 93 (expresion -> expresion MAYOR expresion .)
    Rtrue           reduce using rule 93 (expresion -> expresion MAYOR expresion .)
    Rfalse          reduce using rule 93 (expresion -> expresion MAYOR expresion .)
    Rnull           reduce using rule 93 (expresion -> expresion MAYOR expresion .)
    PARC            reduce using rule 93 (expresion -> expresion MAYOR expresion .)
    COMA            reduce using rule 93 (expresion -> expresion MAYOR expresion .)
    CORC            reduce using rule 93 (expresion -> expresion MAYOR expresion .)
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIV             shift and go to state 99
    POT             shift and go to state 100
    MOD             shift and go to state 101

  ! MAS             [ reduce using rule 93 (expresion -> expresion MAYOR expresion .) ]
  ! MENOS           [ reduce using rule 93 (expresion -> expresion MAYOR expresion .) ]
  ! POR             [ reduce using rule 93 (expresion -> expresion MAYOR expresion .) ]
  ! DIV             [ reduce using rule 93 (expresion -> expresion MAYOR expresion .) ]
  ! POT             [ reduce using rule 93 (expresion -> expresion MAYOR expresion .) ]
  ! MOD             [ reduce using rule 93 (expresion -> expresion MAYOR expresion .) ]
  ! MENORIGUAL      [ shift and go to state 102 ]
  ! MENOR           [ shift and go to state 103 ]
  ! MAYORIGUAL      [ shift and go to state 104 ]
  ! MAYOR           [ shift and go to state 105 ]
  ! IGUALIGUAL      [ shift and go to state 106 ]
  ! DISTINTO        [ shift and go to state 107 ]
  ! AND             [ shift and go to state 108 ]
  ! OR              [ shift and go to state 109 ]


state 147

    (94) expresion -> expresion IGUALIGUAL expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MOD expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . MENOR expresion
    (92) expresion -> expresion . MAYORIGUAL expresion
    (93) expresion -> expresion . MAYOR expresion
    (94) expresion -> expresion . IGUALIGUAL expresion
    (95) expresion -> expresion . DISTINTO expresion
    (96) expresion -> expresion . AND expresion
    (97) expresion -> expresion . OR expresion

    MENORIGUAL      reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .)
    MENOR           reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .)
    MAYORIGUAL      reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .)
    MAYOR           reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .)
    IGUALIGUAL      reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .)
    DISTINTO        reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .)
    AND             reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .)
    OR              reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .)
    PUNTOCOMA       reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .)
    error           reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .)
    Rconsole        reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .)
    Rlet            reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .)
    ID              reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .)
    Rif             reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .)
    Rbreak          reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .)
    Rwhile          reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .)
    Rfor            reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .)
    Rcontinue       reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .)
    Rfunc           reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .)
    Rreturn         reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .)
    Rnumber         reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .)
    Rboolean        reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .)
    Rstring         reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .)
    Rany            reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .)
    Rvoid           reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .)
    $end            reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .)
    LLAVEC          reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .)
    NOT             reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .)
    PARA            reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .)
    ENTERO          reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .)
    DECIMAL         reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .)
    CADENA          reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .)
    Rtrue           reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .)
    Rfalse          reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .)
    Rnull           reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .)
    PARC            reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .)
    COMA            reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .)
    CORC            reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .)
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIV             shift and go to state 99
    POT             shift and go to state 100
    MOD             shift and go to state 101

  ! MAS             [ reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! POR             [ reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! DIV             [ reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! POT             [ reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MOD             [ reduce using rule 94 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MENORIGUAL      [ shift and go to state 102 ]
  ! MENOR           [ shift and go to state 103 ]
  ! MAYORIGUAL      [ shift and go to state 104 ]
  ! MAYOR           [ shift and go to state 105 ]
  ! IGUALIGUAL      [ shift and go to state 106 ]
  ! DISTINTO        [ shift and go to state 107 ]
  ! AND             [ shift and go to state 108 ]
  ! OR              [ shift and go to state 109 ]


state 148

    (95) expresion -> expresion DISTINTO expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MOD expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . MENOR expresion
    (92) expresion -> expresion . MAYORIGUAL expresion
    (93) expresion -> expresion . MAYOR expresion
    (94) expresion -> expresion . IGUALIGUAL expresion
    (95) expresion -> expresion . DISTINTO expresion
    (96) expresion -> expresion . AND expresion
    (97) expresion -> expresion . OR expresion

    MENORIGUAL      reduce using rule 95 (expresion -> expresion DISTINTO expresion .)
    MENOR           reduce using rule 95 (expresion -> expresion DISTINTO expresion .)
    MAYORIGUAL      reduce using rule 95 (expresion -> expresion DISTINTO expresion .)
    MAYOR           reduce using rule 95 (expresion -> expresion DISTINTO expresion .)
    IGUALIGUAL      reduce using rule 95 (expresion -> expresion DISTINTO expresion .)
    DISTINTO        reduce using rule 95 (expresion -> expresion DISTINTO expresion .)
    AND             reduce using rule 95 (expresion -> expresion DISTINTO expresion .)
    OR              reduce using rule 95 (expresion -> expresion DISTINTO expresion .)
    PUNTOCOMA       reduce using rule 95 (expresion -> expresion DISTINTO expresion .)
    error           reduce using rule 95 (expresion -> expresion DISTINTO expresion .)
    Rconsole        reduce using rule 95 (expresion -> expresion DISTINTO expresion .)
    Rlet            reduce using rule 95 (expresion -> expresion DISTINTO expresion .)
    ID              reduce using rule 95 (expresion -> expresion DISTINTO expresion .)
    Rif             reduce using rule 95 (expresion -> expresion DISTINTO expresion .)
    Rbreak          reduce using rule 95 (expresion -> expresion DISTINTO expresion .)
    Rwhile          reduce using rule 95 (expresion -> expresion DISTINTO expresion .)
    Rfor            reduce using rule 95 (expresion -> expresion DISTINTO expresion .)
    Rcontinue       reduce using rule 95 (expresion -> expresion DISTINTO expresion .)
    Rfunc           reduce using rule 95 (expresion -> expresion DISTINTO expresion .)
    Rreturn         reduce using rule 95 (expresion -> expresion DISTINTO expresion .)
    Rnumber         reduce using rule 95 (expresion -> expresion DISTINTO expresion .)
    Rboolean        reduce using rule 95 (expresion -> expresion DISTINTO expresion .)
    Rstring         reduce using rule 95 (expresion -> expresion DISTINTO expresion .)
    Rany            reduce using rule 95 (expresion -> expresion DISTINTO expresion .)
    Rvoid           reduce using rule 95 (expresion -> expresion DISTINTO expresion .)
    $end            reduce using rule 95 (expresion -> expresion DISTINTO expresion .)
    LLAVEC          reduce using rule 95 (expresion -> expresion DISTINTO expresion .)
    NOT             reduce using rule 95 (expresion -> expresion DISTINTO expresion .)
    PARA            reduce using rule 95 (expresion -> expresion DISTINTO expresion .)
    ENTERO          reduce using rule 95 (expresion -> expresion DISTINTO expresion .)
    DECIMAL         reduce using rule 95 (expresion -> expresion DISTINTO expresion .)
    CADENA          reduce using rule 95 (expresion -> expresion DISTINTO expresion .)
    Rtrue           reduce using rule 95 (expresion -> expresion DISTINTO expresion .)
    Rfalse          reduce using rule 95 (expresion -> expresion DISTINTO expresion .)
    Rnull           reduce using rule 95 (expresion -> expresion DISTINTO expresion .)
    PARC            reduce using rule 95 (expresion -> expresion DISTINTO expresion .)
    COMA            reduce using rule 95 (expresion -> expresion DISTINTO expresion .)
    CORC            reduce using rule 95 (expresion -> expresion DISTINTO expresion .)
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIV             shift and go to state 99
    POT             shift and go to state 100
    MOD             shift and go to state 101

  ! MAS             [ reduce using rule 95 (expresion -> expresion DISTINTO expresion .) ]
  ! MENOS           [ reduce using rule 95 (expresion -> expresion DISTINTO expresion .) ]
  ! POR             [ reduce using rule 95 (expresion -> expresion DISTINTO expresion .) ]
  ! DIV             [ reduce using rule 95 (expresion -> expresion DISTINTO expresion .) ]
  ! POT             [ reduce using rule 95 (expresion -> expresion DISTINTO expresion .) ]
  ! MOD             [ reduce using rule 95 (expresion -> expresion DISTINTO expresion .) ]
  ! MENORIGUAL      [ shift and go to state 102 ]
  ! MENOR           [ shift and go to state 103 ]
  ! MAYORIGUAL      [ shift and go to state 104 ]
  ! MAYOR           [ shift and go to state 105 ]
  ! IGUALIGUAL      [ shift and go to state 106 ]
  ! DISTINTO        [ shift and go to state 107 ]
  ! AND             [ shift and go to state 108 ]
  ! OR              [ shift and go to state 109 ]


state 149

    (96) expresion -> expresion AND expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MOD expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . MENOR expresion
    (92) expresion -> expresion . MAYORIGUAL expresion
    (93) expresion -> expresion . MAYOR expresion
    (94) expresion -> expresion . IGUALIGUAL expresion
    (95) expresion -> expresion . DISTINTO expresion
    (96) expresion -> expresion . AND expresion
    (97) expresion -> expresion . OR expresion

    AND             reduce using rule 96 (expresion -> expresion AND expresion .)
    OR              reduce using rule 96 (expresion -> expresion AND expresion .)
    PUNTOCOMA       reduce using rule 96 (expresion -> expresion AND expresion .)
    error           reduce using rule 96 (expresion -> expresion AND expresion .)
    Rconsole        reduce using rule 96 (expresion -> expresion AND expresion .)
    Rlet            reduce using rule 96 (expresion -> expresion AND expresion .)
    ID              reduce using rule 96 (expresion -> expresion AND expresion .)
    Rif             reduce using rule 96 (expresion -> expresion AND expresion .)
    Rbreak          reduce using rule 96 (expresion -> expresion AND expresion .)
    Rwhile          reduce using rule 96 (expresion -> expresion AND expresion .)
    Rfor            reduce using rule 96 (expresion -> expresion AND expresion .)
    Rcontinue       reduce using rule 96 (expresion -> expresion AND expresion .)
    Rfunc           reduce using rule 96 (expresion -> expresion AND expresion .)
    Rreturn         reduce using rule 96 (expresion -> expresion AND expresion .)
    Rnumber         reduce using rule 96 (expresion -> expresion AND expresion .)
    Rboolean        reduce using rule 96 (expresion -> expresion AND expresion .)
    Rstring         reduce using rule 96 (expresion -> expresion AND expresion .)
    Rany            reduce using rule 96 (expresion -> expresion AND expresion .)
    Rvoid           reduce using rule 96 (expresion -> expresion AND expresion .)
    $end            reduce using rule 96 (expresion -> expresion AND expresion .)
    LLAVEC          reduce using rule 96 (expresion -> expresion AND expresion .)
    NOT             reduce using rule 96 (expresion -> expresion AND expresion .)
    PARA            reduce using rule 96 (expresion -> expresion AND expresion .)
    ENTERO          reduce using rule 96 (expresion -> expresion AND expresion .)
    DECIMAL         reduce using rule 96 (expresion -> expresion AND expresion .)
    CADENA          reduce using rule 96 (expresion -> expresion AND expresion .)
    Rtrue           reduce using rule 96 (expresion -> expresion AND expresion .)
    Rfalse          reduce using rule 96 (expresion -> expresion AND expresion .)
    Rnull           reduce using rule 96 (expresion -> expresion AND expresion .)
    PARC            reduce using rule 96 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 96 (expresion -> expresion AND expresion .)
    CORC            reduce using rule 96 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIV             shift and go to state 99
    POT             shift and go to state 100
    MOD             shift and go to state 101
    MENORIGUAL      shift and go to state 102
    MENOR           shift and go to state 103
    MAYORIGUAL      shift and go to state 104
    MAYOR           shift and go to state 105
    IGUALIGUAL      shift and go to state 106
    DISTINTO        shift and go to state 107

  ! MAS             [ reduce using rule 96 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 96 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 96 (expresion -> expresion AND expresion .) ]
  ! DIV             [ reduce using rule 96 (expresion -> expresion AND expresion .) ]
  ! POT             [ reduce using rule 96 (expresion -> expresion AND expresion .) ]
  ! MOD             [ reduce using rule 96 (expresion -> expresion AND expresion .) ]
  ! MENORIGUAL      [ reduce using rule 96 (expresion -> expresion AND expresion .) ]
  ! MENOR           [ reduce using rule 96 (expresion -> expresion AND expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 96 (expresion -> expresion AND expresion .) ]
  ! MAYOR           [ reduce using rule 96 (expresion -> expresion AND expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 96 (expresion -> expresion AND expresion .) ]
  ! DISTINTO        [ reduce using rule 96 (expresion -> expresion AND expresion .) ]
  ! AND             [ shift and go to state 108 ]
  ! OR              [ shift and go to state 109 ]


state 150

    (97) expresion -> expresion OR expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MOD expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . MENOR expresion
    (92) expresion -> expresion . MAYORIGUAL expresion
    (93) expresion -> expresion . MAYOR expresion
    (94) expresion -> expresion . IGUALIGUAL expresion
    (95) expresion -> expresion . DISTINTO expresion
    (96) expresion -> expresion . AND expresion
    (97) expresion -> expresion . OR expresion

    OR              reduce using rule 97 (expresion -> expresion OR expresion .)
    PUNTOCOMA       reduce using rule 97 (expresion -> expresion OR expresion .)
    error           reduce using rule 97 (expresion -> expresion OR expresion .)
    Rconsole        reduce using rule 97 (expresion -> expresion OR expresion .)
    Rlet            reduce using rule 97 (expresion -> expresion OR expresion .)
    ID              reduce using rule 97 (expresion -> expresion OR expresion .)
    Rif             reduce using rule 97 (expresion -> expresion OR expresion .)
    Rbreak          reduce using rule 97 (expresion -> expresion OR expresion .)
    Rwhile          reduce using rule 97 (expresion -> expresion OR expresion .)
    Rfor            reduce using rule 97 (expresion -> expresion OR expresion .)
    Rcontinue       reduce using rule 97 (expresion -> expresion OR expresion .)
    Rfunc           reduce using rule 97 (expresion -> expresion OR expresion .)
    Rreturn         reduce using rule 97 (expresion -> expresion OR expresion .)
    Rnumber         reduce using rule 97 (expresion -> expresion OR expresion .)
    Rboolean        reduce using rule 97 (expresion -> expresion OR expresion .)
    Rstring         reduce using rule 97 (expresion -> expresion OR expresion .)
    Rany            reduce using rule 97 (expresion -> expresion OR expresion .)
    Rvoid           reduce using rule 97 (expresion -> expresion OR expresion .)
    $end            reduce using rule 97 (expresion -> expresion OR expresion .)
    LLAVEC          reduce using rule 97 (expresion -> expresion OR expresion .)
    NOT             reduce using rule 97 (expresion -> expresion OR expresion .)
    PARA            reduce using rule 97 (expresion -> expresion OR expresion .)
    ENTERO          reduce using rule 97 (expresion -> expresion OR expresion .)
    DECIMAL         reduce using rule 97 (expresion -> expresion OR expresion .)
    CADENA          reduce using rule 97 (expresion -> expresion OR expresion .)
    Rtrue           reduce using rule 97 (expresion -> expresion OR expresion .)
    Rfalse          reduce using rule 97 (expresion -> expresion OR expresion .)
    Rnull           reduce using rule 97 (expresion -> expresion OR expresion .)
    PARC            reduce using rule 97 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 97 (expresion -> expresion OR expresion .)
    CORC            reduce using rule 97 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIV             shift and go to state 99
    POT             shift and go to state 100
    MOD             shift and go to state 101
    MENORIGUAL      shift and go to state 102
    MENOR           shift and go to state 103
    MAYORIGUAL      shift and go to state 104
    MAYOR           shift and go to state 105
    IGUALIGUAL      shift and go to state 106
    DISTINTO        shift and go to state 107
    AND             shift and go to state 108

  ! MAS             [ reduce using rule 97 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 97 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 97 (expresion -> expresion OR expresion .) ]
  ! DIV             [ reduce using rule 97 (expresion -> expresion OR expresion .) ]
  ! POT             [ reduce using rule 97 (expresion -> expresion OR expresion .) ]
  ! MOD             [ reduce using rule 97 (expresion -> expresion OR expresion .) ]
  ! MENORIGUAL      [ reduce using rule 97 (expresion -> expresion OR expresion .) ]
  ! MENOR           [ reduce using rule 97 (expresion -> expresion OR expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 97 (expresion -> expresion OR expresion .) ]
  ! MAYOR           [ reduce using rule 97 (expresion -> expresion OR expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 97 (expresion -> expresion OR expresion .) ]
  ! DISTINTO        [ reduce using rule 97 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 97 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 109 ]


state 151

    (100) expresion -> PARA expresion PARC .

    MAS             reduce using rule 100 (expresion -> PARA expresion PARC .)
    MENOS           reduce using rule 100 (expresion -> PARA expresion PARC .)
    POR             reduce using rule 100 (expresion -> PARA expresion PARC .)
    DIV             reduce using rule 100 (expresion -> PARA expresion PARC .)
    POT             reduce using rule 100 (expresion -> PARA expresion PARC .)
    MOD             reduce using rule 100 (expresion -> PARA expresion PARC .)
    MENORIGUAL      reduce using rule 100 (expresion -> PARA expresion PARC .)
    MENOR           reduce using rule 100 (expresion -> PARA expresion PARC .)
    MAYORIGUAL      reduce using rule 100 (expresion -> PARA expresion PARC .)
    MAYOR           reduce using rule 100 (expresion -> PARA expresion PARC .)
    IGUALIGUAL      reduce using rule 100 (expresion -> PARA expresion PARC .)
    DISTINTO        reduce using rule 100 (expresion -> PARA expresion PARC .)
    AND             reduce using rule 100 (expresion -> PARA expresion PARC .)
    OR              reduce using rule 100 (expresion -> PARA expresion PARC .)
    PUNTOCOMA       reduce using rule 100 (expresion -> PARA expresion PARC .)
    error           reduce using rule 100 (expresion -> PARA expresion PARC .)
    Rconsole        reduce using rule 100 (expresion -> PARA expresion PARC .)
    Rlet            reduce using rule 100 (expresion -> PARA expresion PARC .)
    ID              reduce using rule 100 (expresion -> PARA expresion PARC .)
    Rif             reduce using rule 100 (expresion -> PARA expresion PARC .)
    Rbreak          reduce using rule 100 (expresion -> PARA expresion PARC .)
    Rwhile          reduce using rule 100 (expresion -> PARA expresion PARC .)
    Rfor            reduce using rule 100 (expresion -> PARA expresion PARC .)
    Rcontinue       reduce using rule 100 (expresion -> PARA expresion PARC .)
    Rfunc           reduce using rule 100 (expresion -> PARA expresion PARC .)
    Rreturn         reduce using rule 100 (expresion -> PARA expresion PARC .)
    Rnumber         reduce using rule 100 (expresion -> PARA expresion PARC .)
    Rboolean        reduce using rule 100 (expresion -> PARA expresion PARC .)
    Rstring         reduce using rule 100 (expresion -> PARA expresion PARC .)
    Rany            reduce using rule 100 (expresion -> PARA expresion PARC .)
    Rvoid           reduce using rule 100 (expresion -> PARA expresion PARC .)
    $end            reduce using rule 100 (expresion -> PARA expresion PARC .)
    LLAVEC          reduce using rule 100 (expresion -> PARA expresion PARC .)
    NOT             reduce using rule 100 (expresion -> PARA expresion PARC .)
    PARA            reduce using rule 100 (expresion -> PARA expresion PARC .)
    ENTERO          reduce using rule 100 (expresion -> PARA expresion PARC .)
    DECIMAL         reduce using rule 100 (expresion -> PARA expresion PARC .)
    CADENA          reduce using rule 100 (expresion -> PARA expresion PARC .)
    Rtrue           reduce using rule 100 (expresion -> PARA expresion PARC .)
    Rfalse          reduce using rule 100 (expresion -> PARA expresion PARC .)
    Rnull           reduce using rule 100 (expresion -> PARA expresion PARC .)
    PARC            reduce using rule 100 (expresion -> PARA expresion PARC .)
    COMA            reduce using rule 100 (expresion -> PARA expresion PARC .)
    CORC            reduce using rule 100 (expresion -> PARA expresion PARC .)


state 152

    (109) expresion -> PARA tipo PARC . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    expresion                      shift and go to state 189
    llamada                        shift and go to state 69

state 153

    (111) expresion -> ID PUNTO RtoFixed . PARA expresion PARC

    PARA            shift and go to state 190


state 154

    (112) expresion -> ID PUNTO RtoExponential . PARA expresion PARC

    PARA            shift and go to state 191


state 155

    (113) expresion -> ID PUNTO RtoString . PARA PARC

    PARA            shift and go to state 192


state 156

    (114) expresion -> ID PUNTO RtoLowerCase . PARA PARC

    PARA            shift and go to state 193


state 157

    (115) expresion -> ID PUNTO RtoUpperCase . PARA PARC

    PARA            shift and go to state 194


state 158

    (116) expresion -> ID PUNTO Rlength . PARA PARC

    PARA            shift and go to state 195


state 159

    (117) expresion -> ID PUNTO Rsplit . PARA expresion PARC

    PARA            shift and go to state 196


state 160

    (23) imprimir_instr -> Rconsole PUNTO Rlog PARA imprimir_listas . PARC fin_instr
    (24) imprimir_listas -> imprimir_listas . COMA expresion

    PARC            shift and go to state 197
    COMA            shift and go to state 198


state 161

    (25) imprimir_listas -> expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MOD expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . MENOR expresion
    (92) expresion -> expresion . MAYORIGUAL expresion
    (93) expresion -> expresion . MAYOR expresion
    (94) expresion -> expresion . IGUALIGUAL expresion
    (95) expresion -> expresion . DISTINTO expresion
    (96) expresion -> expresion . AND expresion
    (97) expresion -> expresion . OR expresion

    PARC            reduce using rule 25 (imprimir_listas -> expresion .)
    COMA            reduce using rule 25 (imprimir_listas -> expresion .)
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIV             shift and go to state 99
    POT             shift and go to state 100
    MOD             shift and go to state 101
    MENORIGUAL      shift and go to state 102
    MENOR           shift and go to state 103
    MAYORIGUAL      shift and go to state 104
    MAYOR           shift and go to state 105
    IGUALIGUAL      shift and go to state 106
    DISTINTO        shift and go to state 107
    AND             shift and go to state 108
    OR              shift and go to state 109


state 162

    (26) declaracion -> Rlet ID DOSPUNTO tipo IGUAL . expresion fin_instr
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    expresion                      shift and go to state 199
    llamada                        shift and go to state 69

state 163

    (33) declaracion_sinAsig -> Rlet ID DOSPUNTO tipo fin_instr .

    error           reduce using rule 33 (declaracion_sinAsig -> Rlet ID DOSPUNTO tipo fin_instr .)
    Rconsole        reduce using rule 33 (declaracion_sinAsig -> Rlet ID DOSPUNTO tipo fin_instr .)
    Rlet            reduce using rule 33 (declaracion_sinAsig -> Rlet ID DOSPUNTO tipo fin_instr .)
    ID              reduce using rule 33 (declaracion_sinAsig -> Rlet ID DOSPUNTO tipo fin_instr .)
    Rif             reduce using rule 33 (declaracion_sinAsig -> Rlet ID DOSPUNTO tipo fin_instr .)
    Rbreak          reduce using rule 33 (declaracion_sinAsig -> Rlet ID DOSPUNTO tipo fin_instr .)
    Rwhile          reduce using rule 33 (declaracion_sinAsig -> Rlet ID DOSPUNTO tipo fin_instr .)
    Rfor            reduce using rule 33 (declaracion_sinAsig -> Rlet ID DOSPUNTO tipo fin_instr .)
    Rcontinue       reduce using rule 33 (declaracion_sinAsig -> Rlet ID DOSPUNTO tipo fin_instr .)
    Rfunc           reduce using rule 33 (declaracion_sinAsig -> Rlet ID DOSPUNTO tipo fin_instr .)
    Rreturn         reduce using rule 33 (declaracion_sinAsig -> Rlet ID DOSPUNTO tipo fin_instr .)
    Rnumber         reduce using rule 33 (declaracion_sinAsig -> Rlet ID DOSPUNTO tipo fin_instr .)
    Rboolean        reduce using rule 33 (declaracion_sinAsig -> Rlet ID DOSPUNTO tipo fin_instr .)
    Rstring         reduce using rule 33 (declaracion_sinAsig -> Rlet ID DOSPUNTO tipo fin_instr .)
    Rany            reduce using rule 33 (declaracion_sinAsig -> Rlet ID DOSPUNTO tipo fin_instr .)
    Rvoid           reduce using rule 33 (declaracion_sinAsig -> Rlet ID DOSPUNTO tipo fin_instr .)
    $end            reduce using rule 33 (declaracion_sinAsig -> Rlet ID DOSPUNTO tipo fin_instr .)
    LLAVEC          reduce using rule 33 (declaracion_sinAsig -> Rlet ID DOSPUNTO tipo fin_instr .)


state 164

    (65) declaracion_arreglo -> Rlet ID DOSPUNTO tipo lista_expresiones . fin_instr
    (72) declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_expresiones . IGUAL CORA tipo_lista CORC fin_instr
    (68) lista_expresiones -> lista_expresiones . CORA expresion CORC
    (49) fin_instr -> . PUNTOCOMA
    (50) fin_instr -> .

    IGUAL           shift and go to state 201
    CORA            shift and go to state 82
    PUNTOCOMA       shift and go to state 53
    error           reduce using rule 50 (fin_instr -> .)
    Rconsole        reduce using rule 50 (fin_instr -> .)
    Rlet            reduce using rule 50 (fin_instr -> .)
    ID              reduce using rule 50 (fin_instr -> .)
    Rif             reduce using rule 50 (fin_instr -> .)
    Rbreak          reduce using rule 50 (fin_instr -> .)
    Rwhile          reduce using rule 50 (fin_instr -> .)
    Rfor            reduce using rule 50 (fin_instr -> .)
    Rcontinue       reduce using rule 50 (fin_instr -> .)
    Rfunc           reduce using rule 50 (fin_instr -> .)
    Rreturn         reduce using rule 50 (fin_instr -> .)
    Rnumber         reduce using rule 50 (fin_instr -> .)
    Rboolean        reduce using rule 50 (fin_instr -> .)
    Rstring         reduce using rule 50 (fin_instr -> .)
    Rany            reduce using rule 50 (fin_instr -> .)
    Rvoid           reduce using rule 50 (fin_instr -> .)
    $end            reduce using rule 50 (fin_instr -> .)
    LLAVEC          reduce using rule 50 (fin_instr -> .)

    fin_instr                      shift and go to state 200

state 165

    (71) declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_Dim . IGUAL CORA tipo_lista CORC fin_instr
    (66) lista_Dim -> lista_Dim . CORA CORC

    IGUAL           shift and go to state 202
    CORA            shift and go to state 85


state 166

    (69) lista_expresiones -> CORA . expresion CORC
    (67) lista_Dim -> CORA . CORC
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    CORC            shift and go to state 86
    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    expresion                      shift and go to state 83
    llamada                        shift and go to state 69

state 167

    (27) declaracion -> Rlet ID IGUAL expresion fin_instr .

    error           reduce using rule 27 (declaracion -> Rlet ID IGUAL expresion fin_instr .)
    Rconsole        reduce using rule 27 (declaracion -> Rlet ID IGUAL expresion fin_instr .)
    Rlet            reduce using rule 27 (declaracion -> Rlet ID IGUAL expresion fin_instr .)
    ID              reduce using rule 27 (declaracion -> Rlet ID IGUAL expresion fin_instr .)
    Rif             reduce using rule 27 (declaracion -> Rlet ID IGUAL expresion fin_instr .)
    Rbreak          reduce using rule 27 (declaracion -> Rlet ID IGUAL expresion fin_instr .)
    Rwhile          reduce using rule 27 (declaracion -> Rlet ID IGUAL expresion fin_instr .)
    Rfor            reduce using rule 27 (declaracion -> Rlet ID IGUAL expresion fin_instr .)
    Rcontinue       reduce using rule 27 (declaracion -> Rlet ID IGUAL expresion fin_instr .)
    Rfunc           reduce using rule 27 (declaracion -> Rlet ID IGUAL expresion fin_instr .)
    Rreturn         reduce using rule 27 (declaracion -> Rlet ID IGUAL expresion fin_instr .)
    Rnumber         reduce using rule 27 (declaracion -> Rlet ID IGUAL expresion fin_instr .)
    Rboolean        reduce using rule 27 (declaracion -> Rlet ID IGUAL expresion fin_instr .)
    Rstring         reduce using rule 27 (declaracion -> Rlet ID IGUAL expresion fin_instr .)
    Rany            reduce using rule 27 (declaracion -> Rlet ID IGUAL expresion fin_instr .)
    Rvoid           reduce using rule 27 (declaracion -> Rlet ID IGUAL expresion fin_instr .)
    $end            reduce using rule 27 (declaracion -> Rlet ID IGUAL expresion fin_instr .)
    MENOS           reduce using rule 27 (declaracion -> Rlet ID IGUAL expresion fin_instr .)
    NOT             reduce using rule 27 (declaracion -> Rlet ID IGUAL expresion fin_instr .)
    PARA            reduce using rule 27 (declaracion -> Rlet ID IGUAL expresion fin_instr .)
    ENTERO          reduce using rule 27 (declaracion -> Rlet ID IGUAL expresion fin_instr .)
    DECIMAL         reduce using rule 27 (declaracion -> Rlet ID IGUAL expresion fin_instr .)
    CADENA          reduce using rule 27 (declaracion -> Rlet ID IGUAL expresion fin_instr .)
    Rtrue           reduce using rule 27 (declaracion -> Rlet ID IGUAL expresion fin_instr .)
    Rfalse          reduce using rule 27 (declaracion -> Rlet ID IGUAL expresion fin_instr .)
    Rnull           reduce using rule 27 (declaracion -> Rlet ID IGUAL expresion fin_instr .)
    LLAVEC          reduce using rule 27 (declaracion -> Rlet ID IGUAL expresion fin_instr .)


state 168

    (70) declaracion_arreglo2 -> Rlet ID IGUAL CORA tipo_lista . CORC fin_instr

    CORC            shift and go to state 203


state 169

    (74) tipo_lista -> d1 .
    (77) d1 -> d1 . COMA expresion

    CORC            reduce using rule 74 (tipo_lista -> d1 .)
    COMA            shift and go to state 204


state 170

    (75) tipo_lista -> d2 .
    (79) d2 -> d2 . COMA LLAVEA d1 LLAVEC

    CORC            reduce using rule 75 (tipo_lista -> d2 .)
    COMA            shift and go to state 205


state 171

    (76) tipo_lista -> d3 .
    (81) d3 -> d3 . COMA LLAVEA d2 LLAVEC

    CORC            reduce using rule 76 (tipo_lista -> d3 .)
    COMA            shift and go to state 206


state 172

    (78) d1 -> expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MOD expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . MENOR expresion
    (92) expresion -> expresion . MAYORIGUAL expresion
    (93) expresion -> expresion . MAYOR expresion
    (94) expresion -> expresion . IGUALIGUAL expresion
    (95) expresion -> expresion . DISTINTO expresion
    (96) expresion -> expresion . AND expresion
    (97) expresion -> expresion . OR expresion

    COMA            reduce using rule 78 (d1 -> expresion .)
    CORC            reduce using rule 78 (d1 -> expresion .)
    LLAVEC          reduce using rule 78 (d1 -> expresion .)
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIV             shift and go to state 99
    POT             shift and go to state 100
    MOD             shift and go to state 101
    MENORIGUAL      shift and go to state 102
    MENOR           shift and go to state 103
    MAYORIGUAL      shift and go to state 104
    MAYOR           shift and go to state 105
    IGUALIGUAL      shift and go to state 106
    DISTINTO        shift and go to state 107
    AND             shift and go to state 108
    OR              shift and go to state 109


state 173

    (80) d2 -> LLAVEA . d1 LLAVEC
    (82) d3 -> LLAVEA . d2 LLAVEC
    (77) d1 -> . d1 COMA expresion
    (78) d1 -> . expresion
    (79) d2 -> . d2 COMA LLAVEA d1 LLAVEC
    (80) d2 -> . LLAVEA d1 LLAVEC
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    LLAVEA          shift and go to state 207
    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    d1                             shift and go to state 208
    d2                             shift and go to state 209
    expresion                      shift and go to state 172
    llamada                        shift and go to state 69

state 174

    (60) llamada -> ID PARA parametros_llamada PARC fin_instr .

    error           reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    Rconsole        reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    Rlet            reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    ID              reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    Rif             reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    Rbreak          reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    Rwhile          reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    Rfor            reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    Rcontinue       reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    Rfunc           reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    Rreturn         reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    Rnumber         reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    Rboolean        reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    Rstring         reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    Rany            reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    Rvoid           reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    $end            reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    MAS             reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    MENOS           reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    POR             reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    DIV             reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    POT             reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    MOD             reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    MENORIGUAL      reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    MENOR           reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    MAYORIGUAL      reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    MAYOR           reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    IGUALIGUAL      reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    DISTINTO        reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    AND             reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    OR              reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    PUNTOCOMA       reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    LLAVEC          reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    NOT             reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    PARA            reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    ENTERO          reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    DECIMAL         reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    CADENA          reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    Rtrue           reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    Rfalse          reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    Rnull           reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    PARC            reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    COMA            reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)
    CORC            reduce using rule 60 (llamada -> ID PARA parametros_llamada PARC fin_instr .)


state 175

    (62) parametros_llamada -> parametros_llamada COMA parametro_llam .

    PARC            reduce using rule 62 (parametros_llamada -> parametros_llamada COMA parametro_llam .)
    COMA            reduce using rule 62 (parametros_llamada -> parametros_llamada COMA parametro_llam .)


state 176

    (83) modificar_arreglo -> ID lista_expresiones IGUAL expresion fin_instr .

    error           reduce using rule 83 (modificar_arreglo -> ID lista_expresiones IGUAL expresion fin_instr .)
    Rconsole        reduce using rule 83 (modificar_arreglo -> ID lista_expresiones IGUAL expresion fin_instr .)
    Rlet            reduce using rule 83 (modificar_arreglo -> ID lista_expresiones IGUAL expresion fin_instr .)
    ID              reduce using rule 83 (modificar_arreglo -> ID lista_expresiones IGUAL expresion fin_instr .)
    Rif             reduce using rule 83 (modificar_arreglo -> ID lista_expresiones IGUAL expresion fin_instr .)
    Rbreak          reduce using rule 83 (modificar_arreglo -> ID lista_expresiones IGUAL expresion fin_instr .)
    Rwhile          reduce using rule 83 (modificar_arreglo -> ID lista_expresiones IGUAL expresion fin_instr .)
    Rfor            reduce using rule 83 (modificar_arreglo -> ID lista_expresiones IGUAL expresion fin_instr .)
    Rcontinue       reduce using rule 83 (modificar_arreglo -> ID lista_expresiones IGUAL expresion fin_instr .)
    Rfunc           reduce using rule 83 (modificar_arreglo -> ID lista_expresiones IGUAL expresion fin_instr .)
    Rreturn         reduce using rule 83 (modificar_arreglo -> ID lista_expresiones IGUAL expresion fin_instr .)
    Rnumber         reduce using rule 83 (modificar_arreglo -> ID lista_expresiones IGUAL expresion fin_instr .)
    Rboolean        reduce using rule 83 (modificar_arreglo -> ID lista_expresiones IGUAL expresion fin_instr .)
    Rstring         reduce using rule 83 (modificar_arreglo -> ID lista_expresiones IGUAL expresion fin_instr .)
    Rany            reduce using rule 83 (modificar_arreglo -> ID lista_expresiones IGUAL expresion fin_instr .)
    Rvoid           reduce using rule 83 (modificar_arreglo -> ID lista_expresiones IGUAL expresion fin_instr .)
    $end            reduce using rule 83 (modificar_arreglo -> ID lista_expresiones IGUAL expresion fin_instr .)
    LLAVEC          reduce using rule 83 (modificar_arreglo -> ID lista_expresiones IGUAL expresion fin_instr .)


state 177

    (68) lista_expresiones -> lista_expresiones CORA expresion CORC .

    IGUAL           reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    CORA            reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    MAS             reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    MENOS           reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    POR             reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    DIV             reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    POT             reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    MOD             reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    MENORIGUAL      reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    MENOR           reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    MAYORIGUAL      reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    MAYOR           reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    IGUALIGUAL      reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    DISTINTO        reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    AND             reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    OR              reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    PUNTOCOMA       reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    error           reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    Rconsole        reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    Rlet            reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    ID              reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    Rif             reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    Rbreak          reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    Rwhile          reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    Rfor            reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    Rcontinue       reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    Rfunc           reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    Rreturn         reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    Rnumber         reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    Rboolean        reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    Rstring         reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    Rany            reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    Rvoid           reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    $end            reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    LLAVEC          reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    NOT             reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    PARA            reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    ENTERO          reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    DECIMAL         reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    CADENA          reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    Rtrue           reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    Rfalse          reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    Rnull           reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    PARC            reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    COMA            reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)
    CORC            reduce using rule 68 (lista_expresiones -> lista_expresiones CORA expresion CORC .)


state 178

    (73) declaracion_arreglo2 -> tipo lista_Dim ID IGUAL ID .

    error           reduce using rule 73 (declaracion_arreglo2 -> tipo lista_Dim ID IGUAL ID .)
    Rconsole        reduce using rule 73 (declaracion_arreglo2 -> tipo lista_Dim ID IGUAL ID .)
    Rlet            reduce using rule 73 (declaracion_arreglo2 -> tipo lista_Dim ID IGUAL ID .)
    ID              reduce using rule 73 (declaracion_arreglo2 -> tipo lista_Dim ID IGUAL ID .)
    Rif             reduce using rule 73 (declaracion_arreglo2 -> tipo lista_Dim ID IGUAL ID .)
    Rbreak          reduce using rule 73 (declaracion_arreglo2 -> tipo lista_Dim ID IGUAL ID .)
    Rwhile          reduce using rule 73 (declaracion_arreglo2 -> tipo lista_Dim ID IGUAL ID .)
    Rfor            reduce using rule 73 (declaracion_arreglo2 -> tipo lista_Dim ID IGUAL ID .)
    Rcontinue       reduce using rule 73 (declaracion_arreglo2 -> tipo lista_Dim ID IGUAL ID .)
    Rfunc           reduce using rule 73 (declaracion_arreglo2 -> tipo lista_Dim ID IGUAL ID .)
    Rreturn         reduce using rule 73 (declaracion_arreglo2 -> tipo lista_Dim ID IGUAL ID .)
    Rnumber         reduce using rule 73 (declaracion_arreglo2 -> tipo lista_Dim ID IGUAL ID .)
    Rboolean        reduce using rule 73 (declaracion_arreglo2 -> tipo lista_Dim ID IGUAL ID .)
    Rstring         reduce using rule 73 (declaracion_arreglo2 -> tipo lista_Dim ID IGUAL ID .)
    Rany            reduce using rule 73 (declaracion_arreglo2 -> tipo lista_Dim ID IGUAL ID .)
    Rvoid           reduce using rule 73 (declaracion_arreglo2 -> tipo lista_Dim ID IGUAL ID .)
    $end            reduce using rule 73 (declaracion_arreglo2 -> tipo lista_Dim ID IGUAL ID .)
    LLAVEC          reduce using rule 73 (declaracion_arreglo2 -> tipo lista_Dim ID IGUAL ID .)


state 179

    (36) if -> Rif PARA expresion PARC LLAVEA . instrucciones LLAVEC
    (37) if -> Rif PARA expresion PARC LLAVEA . instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC
    (38) if -> Rif PARA expresion PARC LLAVEA . instrucciones LLAVEC Relse if
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion
    (6) instruccion -> . declaracion_sinAsig
    (7) instruccion -> . asignacion
    (8) instruccion -> . if
    (9) instruccion -> . break
    (10) instruccion -> . while
    (11) instruccion -> . tipo_incremento
    (12) instruccion -> . for
    (13) instruccion -> . continue
    (14) instruccion -> . funcion
    (15) instruccion -> . retorno
    (16) instruccion -> . llamada
    (17) instruccion -> . declaracion_arreglo
    (18) instruccion -> . declaracion_arreglo2
    (19) instruccion -> . modificar_arreglo
    (20) instruccion -> . error errores
    (23) imprimir_instr -> . Rconsole PUNTO Rlog PARA imprimir_listas PARC fin_instr
    (26) declaracion -> . Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr
    (27) declaracion -> . Rlet ID IGUAL expresion fin_instr
    (33) declaracion_sinAsig -> . Rlet ID DOSPUNTO tipo fin_instr
    (34) declaracion_sinAsig -> . Rlet ID fin_instr
    (35) asignacion -> . ID IGUAL expresion fin_instr
    (36) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC
    (37) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC
    (38) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse if
    (39) break -> . Rbreak fin_instr
    (40) while -> . Rwhile PARA expresion PARC LLAVEA instrucciones LLAVEC
    (41) tipo_incremento -> . ID MASMAS fin_instr
    (42) tipo_incremento -> . ID MENOSMENOS fin_instr
    (43) for -> . Rfor PARA declar_asig expresion fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC
    (48) continue -> . Rcontinue fin_instr
    (51) funcion -> . Rfunc ID PARA parametros PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (52) funcion -> . Rfunc ID PARA PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (53) funcion -> . Rfunc ID PARA parametros PARC LLAVEA instrucciones LLAVEC
    (54) funcion -> . Rfunc ID PARA PARC LLAVEA instrucciones LLAVEC
    (59) retorno -> . Rreturn expresion fin_instr
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr
    (65) declaracion_arreglo -> . Rlet ID DOSPUNTO tipo lista_expresiones fin_instr
    (70) declaracion_arreglo2 -> . Rlet ID IGUAL CORA tipo_lista CORC fin_instr
    (71) declaracion_arreglo2 -> . Rlet ID DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista CORC fin_instr
    (72) declaracion_arreglo2 -> . Rlet ID DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista CORC fin_instr
    (73) declaracion_arreglo2 -> . tipo lista_Dim ID IGUAL ID
    (83) modificar_arreglo -> . ID lista_expresiones IGUAL expresion fin_instr
    (28) tipo -> . Rnumber
    (29) tipo -> . Rboolean
    (30) tipo -> . Rstring
    (31) tipo -> . Rany
    (32) tipo -> . Rvoid

    error           shift and go to state 20
    Rconsole        shift and go to state 21
    Rlet            shift and go to state 22
    ID              shift and go to state 23
    Rif             shift and go to state 25
    Rbreak          shift and go to state 26
    Rwhile          shift and go to state 27
    Rfor            shift and go to state 28
    Rcontinue       shift and go to state 29
    Rfunc           shift and go to state 30
    Rreturn         shift and go to state 31
    Rnumber         shift and go to state 32
    Rboolean        shift and go to state 33
    Rstring         shift and go to state 34
    Rany            shift and go to state 35
    Rvoid           shift and go to state 36

    instrucciones                  shift and go to state 210
    if                             shift and go to state 8
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    declaracion                    shift and go to state 5
    declaracion_sinAsig            shift and go to state 6
    asignacion                     shift and go to state 7
    break                          shift and go to state 9
    while                          shift and go to state 10
    tipo_incremento                shift and go to state 11
    for                            shift and go to state 12
    continue                       shift and go to state 13
    funcion                        shift and go to state 14
    retorno                        shift and go to state 15
    llamada                        shift and go to state 16
    declaracion_arreglo            shift and go to state 17
    declaracion_arreglo2           shift and go to state 18
    modificar_arreglo              shift and go to state 19
    tipo                           shift and go to state 24

state 180

    (40) while -> Rwhile PARA expresion PARC LLAVEA . instrucciones LLAVEC
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion
    (6) instruccion -> . declaracion_sinAsig
    (7) instruccion -> . asignacion
    (8) instruccion -> . if
    (9) instruccion -> . break
    (10) instruccion -> . while
    (11) instruccion -> . tipo_incremento
    (12) instruccion -> . for
    (13) instruccion -> . continue
    (14) instruccion -> . funcion
    (15) instruccion -> . retorno
    (16) instruccion -> . llamada
    (17) instruccion -> . declaracion_arreglo
    (18) instruccion -> . declaracion_arreglo2
    (19) instruccion -> . modificar_arreglo
    (20) instruccion -> . error errores
    (23) imprimir_instr -> . Rconsole PUNTO Rlog PARA imprimir_listas PARC fin_instr
    (26) declaracion -> . Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr
    (27) declaracion -> . Rlet ID IGUAL expresion fin_instr
    (33) declaracion_sinAsig -> . Rlet ID DOSPUNTO tipo fin_instr
    (34) declaracion_sinAsig -> . Rlet ID fin_instr
    (35) asignacion -> . ID IGUAL expresion fin_instr
    (36) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC
    (37) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC
    (38) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse if
    (39) break -> . Rbreak fin_instr
    (40) while -> . Rwhile PARA expresion PARC LLAVEA instrucciones LLAVEC
    (41) tipo_incremento -> . ID MASMAS fin_instr
    (42) tipo_incremento -> . ID MENOSMENOS fin_instr
    (43) for -> . Rfor PARA declar_asig expresion fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC
    (48) continue -> . Rcontinue fin_instr
    (51) funcion -> . Rfunc ID PARA parametros PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (52) funcion -> . Rfunc ID PARA PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (53) funcion -> . Rfunc ID PARA parametros PARC LLAVEA instrucciones LLAVEC
    (54) funcion -> . Rfunc ID PARA PARC LLAVEA instrucciones LLAVEC
    (59) retorno -> . Rreturn expresion fin_instr
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr
    (65) declaracion_arreglo -> . Rlet ID DOSPUNTO tipo lista_expresiones fin_instr
    (70) declaracion_arreglo2 -> . Rlet ID IGUAL CORA tipo_lista CORC fin_instr
    (71) declaracion_arreglo2 -> . Rlet ID DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista CORC fin_instr
    (72) declaracion_arreglo2 -> . Rlet ID DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista CORC fin_instr
    (73) declaracion_arreglo2 -> . tipo lista_Dim ID IGUAL ID
    (83) modificar_arreglo -> . ID lista_expresiones IGUAL expresion fin_instr
    (28) tipo -> . Rnumber
    (29) tipo -> . Rboolean
    (30) tipo -> . Rstring
    (31) tipo -> . Rany
    (32) tipo -> . Rvoid

    error           shift and go to state 20
    Rconsole        shift and go to state 21
    Rlet            shift and go to state 22
    ID              shift and go to state 23
    Rif             shift and go to state 25
    Rbreak          shift and go to state 26
    Rwhile          shift and go to state 27
    Rfor            shift and go to state 28
    Rcontinue       shift and go to state 29
    Rfunc           shift and go to state 30
    Rreturn         shift and go to state 31
    Rnumber         shift and go to state 32
    Rboolean        shift and go to state 33
    Rstring         shift and go to state 34
    Rany            shift and go to state 35
    Rvoid           shift and go to state 36

    instrucciones                  shift and go to state 211
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    declaracion                    shift and go to state 5
    declaracion_sinAsig            shift and go to state 6
    asignacion                     shift and go to state 7
    if                             shift and go to state 8
    break                          shift and go to state 9
    while                          shift and go to state 10
    tipo_incremento                shift and go to state 11
    for                            shift and go to state 12
    continue                       shift and go to state 13
    funcion                        shift and go to state 14
    retorno                        shift and go to state 15
    llamada                        shift and go to state 16
    declaracion_arreglo            shift and go to state 17
    declaracion_arreglo2           shift and go to state 18
    modificar_arreglo              shift and go to state 19
    tipo                           shift and go to state 24

state 181

    (43) for -> Rfor PARA declar_asig expresion fin_instr . actualizacion PARC LLAVEA instrucciones LLAVEC
    (46) actualizacion -> . asignacion
    (47) actualizacion -> . tipo_incremento
    (35) asignacion -> . ID IGUAL expresion fin_instr
    (41) tipo_incremento -> . ID MASMAS fin_instr
    (42) tipo_incremento -> . ID MENOSMENOS fin_instr

    ID              shift and go to state 215

    actualizacion                  shift and go to state 212
    asignacion                     shift and go to state 213
    tipo_incremento                shift and go to state 214

state 182

    (26) declaracion -> Rlet ID DOSPUNTO . tipo IGUAL expresion fin_instr
    (28) tipo -> . Rnumber
    (29) tipo -> . Rboolean
    (30) tipo -> . Rstring
    (31) tipo -> . Rany
    (32) tipo -> . Rvoid

    Rnumber         shift and go to state 32
    Rboolean        shift and go to state 33
    Rstring         shift and go to state 34
    Rany            shift and go to state 35
    Rvoid           shift and go to state 36

    tipo                           shift and go to state 216

state 183

    (27) declaracion -> Rlet ID IGUAL . expresion fin_instr
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    expresion                      shift and go to state 118
    llamada                        shift and go to state 69

state 184

    (57) parametro -> ID DOSPUNTO . tipo
    (58) parametro -> ID DOSPUNTO . tipo lista_Dim
    (28) tipo -> . Rnumber
    (29) tipo -> . Rboolean
    (30) tipo -> . Rstring
    (31) tipo -> . Rany
    (32) tipo -> . Rvoid

    Rnumber         shift and go to state 32
    Rboolean        shift and go to state 33
    Rstring         shift and go to state 34
    Rany            shift and go to state 35
    Rvoid           shift and go to state 36

    tipo                           shift and go to state 217

state 185

    (51) funcion -> Rfunc ID PARA parametros PARC . DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (53) funcion -> Rfunc ID PARA parametros PARC . LLAVEA instrucciones LLAVEC

    DOSPUNTO        shift and go to state 218
    LLAVEA          shift and go to state 219


state 186

    (55) parametros -> parametros COMA . parametro
    (57) parametro -> . ID DOSPUNTO tipo
    (58) parametro -> . ID DOSPUNTO tipo lista_Dim

    ID              shift and go to state 133

    parametro                      shift and go to state 220

state 187

    (52) funcion -> Rfunc ID PARA PARC DOSPUNTO . tipo LLAVEA instrucciones LLAVEC
    (28) tipo -> . Rnumber
    (29) tipo -> . Rboolean
    (30) tipo -> . Rstring
    (31) tipo -> . Rany
    (32) tipo -> . Rvoid

    Rnumber         shift and go to state 32
    Rboolean        shift and go to state 33
    Rstring         shift and go to state 34
    Rany            shift and go to state 35
    Rvoid           shift and go to state 36

    tipo                           shift and go to state 221

state 188

    (54) funcion -> Rfunc ID PARA PARC LLAVEA . instrucciones LLAVEC
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion
    (6) instruccion -> . declaracion_sinAsig
    (7) instruccion -> . asignacion
    (8) instruccion -> . if
    (9) instruccion -> . break
    (10) instruccion -> . while
    (11) instruccion -> . tipo_incremento
    (12) instruccion -> . for
    (13) instruccion -> . continue
    (14) instruccion -> . funcion
    (15) instruccion -> . retorno
    (16) instruccion -> . llamada
    (17) instruccion -> . declaracion_arreglo
    (18) instruccion -> . declaracion_arreglo2
    (19) instruccion -> . modificar_arreglo
    (20) instruccion -> . error errores
    (23) imprimir_instr -> . Rconsole PUNTO Rlog PARA imprimir_listas PARC fin_instr
    (26) declaracion -> . Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr
    (27) declaracion -> . Rlet ID IGUAL expresion fin_instr
    (33) declaracion_sinAsig -> . Rlet ID DOSPUNTO tipo fin_instr
    (34) declaracion_sinAsig -> . Rlet ID fin_instr
    (35) asignacion -> . ID IGUAL expresion fin_instr
    (36) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC
    (37) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC
    (38) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse if
    (39) break -> . Rbreak fin_instr
    (40) while -> . Rwhile PARA expresion PARC LLAVEA instrucciones LLAVEC
    (41) tipo_incremento -> . ID MASMAS fin_instr
    (42) tipo_incremento -> . ID MENOSMENOS fin_instr
    (43) for -> . Rfor PARA declar_asig expresion fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC
    (48) continue -> . Rcontinue fin_instr
    (51) funcion -> . Rfunc ID PARA parametros PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (52) funcion -> . Rfunc ID PARA PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (53) funcion -> . Rfunc ID PARA parametros PARC LLAVEA instrucciones LLAVEC
    (54) funcion -> . Rfunc ID PARA PARC LLAVEA instrucciones LLAVEC
    (59) retorno -> . Rreturn expresion fin_instr
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr
    (65) declaracion_arreglo -> . Rlet ID DOSPUNTO tipo lista_expresiones fin_instr
    (70) declaracion_arreglo2 -> . Rlet ID IGUAL CORA tipo_lista CORC fin_instr
    (71) declaracion_arreglo2 -> . Rlet ID DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista CORC fin_instr
    (72) declaracion_arreglo2 -> . Rlet ID DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista CORC fin_instr
    (73) declaracion_arreglo2 -> . tipo lista_Dim ID IGUAL ID
    (83) modificar_arreglo -> . ID lista_expresiones IGUAL expresion fin_instr
    (28) tipo -> . Rnumber
    (29) tipo -> . Rboolean
    (30) tipo -> . Rstring
    (31) tipo -> . Rany
    (32) tipo -> . Rvoid

    error           shift and go to state 20
    Rconsole        shift and go to state 21
    Rlet            shift and go to state 22
    ID              shift and go to state 23
    Rif             shift and go to state 25
    Rbreak          shift and go to state 26
    Rwhile          shift and go to state 27
    Rfor            shift and go to state 28
    Rcontinue       shift and go to state 29
    Rfunc           shift and go to state 30
    Rreturn         shift and go to state 31
    Rnumber         shift and go to state 32
    Rboolean        shift and go to state 33
    Rstring         shift and go to state 34
    Rany            shift and go to state 35
    Rvoid           shift and go to state 36

    instrucciones                  shift and go to state 222
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    declaracion                    shift and go to state 5
    declaracion_sinAsig            shift and go to state 6
    asignacion                     shift and go to state 7
    if                             shift and go to state 8
    break                          shift and go to state 9
    while                          shift and go to state 10
    tipo_incremento                shift and go to state 11
    for                            shift and go to state 12
    continue                       shift and go to state 13
    funcion                        shift and go to state 14
    retorno                        shift and go to state 15
    llamada                        shift and go to state 16
    declaracion_arreglo            shift and go to state 17
    declaracion_arreglo2           shift and go to state 18
    modificar_arreglo              shift and go to state 19
    tipo                           shift and go to state 24

state 189

    (109) expresion -> PARA tipo PARC expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MOD expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . MENOR expresion
    (92) expresion -> expresion . MAYORIGUAL expresion
    (93) expresion -> expresion . MAYOR expresion
    (94) expresion -> expresion . IGUALIGUAL expresion
    (95) expresion -> expresion . DISTINTO expresion
    (96) expresion -> expresion . AND expresion
    (97) expresion -> expresion . OR expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for DISTINTO resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    PUNTOCOMA       reduce using rule 109 (expresion -> PARA tipo PARC expresion .)
    error           reduce using rule 109 (expresion -> PARA tipo PARC expresion .)
    Rconsole        reduce using rule 109 (expresion -> PARA tipo PARC expresion .)
    Rlet            reduce using rule 109 (expresion -> PARA tipo PARC expresion .)
    ID              reduce using rule 109 (expresion -> PARA tipo PARC expresion .)
    Rif             reduce using rule 109 (expresion -> PARA tipo PARC expresion .)
    Rbreak          reduce using rule 109 (expresion -> PARA tipo PARC expresion .)
    Rwhile          reduce using rule 109 (expresion -> PARA tipo PARC expresion .)
    Rfor            reduce using rule 109 (expresion -> PARA tipo PARC expresion .)
    Rcontinue       reduce using rule 109 (expresion -> PARA tipo PARC expresion .)
    Rfunc           reduce using rule 109 (expresion -> PARA tipo PARC expresion .)
    Rreturn         reduce using rule 109 (expresion -> PARA tipo PARC expresion .)
    Rnumber         reduce using rule 109 (expresion -> PARA tipo PARC expresion .)
    Rboolean        reduce using rule 109 (expresion -> PARA tipo PARC expresion .)
    Rstring         reduce using rule 109 (expresion -> PARA tipo PARC expresion .)
    Rany            reduce using rule 109 (expresion -> PARA tipo PARC expresion .)
    Rvoid           reduce using rule 109 (expresion -> PARA tipo PARC expresion .)
    $end            reduce using rule 109 (expresion -> PARA tipo PARC expresion .)
    LLAVEC          reduce using rule 109 (expresion -> PARA tipo PARC expresion .)
    NOT             reduce using rule 109 (expresion -> PARA tipo PARC expresion .)
    PARA            reduce using rule 109 (expresion -> PARA tipo PARC expresion .)
    ENTERO          reduce using rule 109 (expresion -> PARA tipo PARC expresion .)
    DECIMAL         reduce using rule 109 (expresion -> PARA tipo PARC expresion .)
    CADENA          reduce using rule 109 (expresion -> PARA tipo PARC expresion .)
    Rtrue           reduce using rule 109 (expresion -> PARA tipo PARC expresion .)
    Rfalse          reduce using rule 109 (expresion -> PARA tipo PARC expresion .)
    Rnull           reduce using rule 109 (expresion -> PARA tipo PARC expresion .)
    PARC            reduce using rule 109 (expresion -> PARA tipo PARC expresion .)
    COMA            reduce using rule 109 (expresion -> PARA tipo PARC expresion .)
    CORC            reduce using rule 109 (expresion -> PARA tipo PARC expresion .)
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIV             shift and go to state 99
    POT             shift and go to state 100
    MOD             shift and go to state 101
    MENORIGUAL      shift and go to state 102
    MENOR           shift and go to state 103
    MAYORIGUAL      shift and go to state 104
    MAYOR           shift and go to state 105
    IGUALIGUAL      shift and go to state 106
    DISTINTO        shift and go to state 107
    AND             shift and go to state 108
    OR              shift and go to state 109

  ! MAS             [ reduce using rule 109 (expresion -> PARA tipo PARC expresion .) ]
  ! MENOS           [ reduce using rule 109 (expresion -> PARA tipo PARC expresion .) ]
  ! POR             [ reduce using rule 109 (expresion -> PARA tipo PARC expresion .) ]
  ! DIV             [ reduce using rule 109 (expresion -> PARA tipo PARC expresion .) ]
  ! POT             [ reduce using rule 109 (expresion -> PARA tipo PARC expresion .) ]
  ! MOD             [ reduce using rule 109 (expresion -> PARA tipo PARC expresion .) ]
  ! MENORIGUAL      [ reduce using rule 109 (expresion -> PARA tipo PARC expresion .) ]
  ! MENOR           [ reduce using rule 109 (expresion -> PARA tipo PARC expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 109 (expresion -> PARA tipo PARC expresion .) ]
  ! MAYOR           [ reduce using rule 109 (expresion -> PARA tipo PARC expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 109 (expresion -> PARA tipo PARC expresion .) ]
  ! DISTINTO        [ reduce using rule 109 (expresion -> PARA tipo PARC expresion .) ]
  ! AND             [ reduce using rule 109 (expresion -> PARA tipo PARC expresion .) ]
  ! OR              [ reduce using rule 109 (expresion -> PARA tipo PARC expresion .) ]


state 190

    (111) expresion -> ID PUNTO RtoFixed PARA . expresion PARC
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    expresion                      shift and go to state 223
    llamada                        shift and go to state 69

state 191

    (112) expresion -> ID PUNTO RtoExponential PARA . expresion PARC
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    expresion                      shift and go to state 224
    llamada                        shift and go to state 69

state 192

    (113) expresion -> ID PUNTO RtoString PARA . PARC

    PARC            shift and go to state 225


state 193

    (114) expresion -> ID PUNTO RtoLowerCase PARA . PARC

    PARC            shift and go to state 226


state 194

    (115) expresion -> ID PUNTO RtoUpperCase PARA . PARC

    PARC            shift and go to state 227


state 195

    (116) expresion -> ID PUNTO Rlength PARA . PARC

    PARC            shift and go to state 228


state 196

    (117) expresion -> ID PUNTO Rsplit PARA . expresion PARC
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    expresion                      shift and go to state 229
    llamada                        shift and go to state 69

state 197

    (23) imprimir_instr -> Rconsole PUNTO Rlog PARA imprimir_listas PARC . fin_instr
    (49) fin_instr -> . PUNTOCOMA
    (50) fin_instr -> .

    PUNTOCOMA       shift and go to state 53
    error           reduce using rule 50 (fin_instr -> .)
    Rconsole        reduce using rule 50 (fin_instr -> .)
    Rlet            reduce using rule 50 (fin_instr -> .)
    ID              reduce using rule 50 (fin_instr -> .)
    Rif             reduce using rule 50 (fin_instr -> .)
    Rbreak          reduce using rule 50 (fin_instr -> .)
    Rwhile          reduce using rule 50 (fin_instr -> .)
    Rfor            reduce using rule 50 (fin_instr -> .)
    Rcontinue       reduce using rule 50 (fin_instr -> .)
    Rfunc           reduce using rule 50 (fin_instr -> .)
    Rreturn         reduce using rule 50 (fin_instr -> .)
    Rnumber         reduce using rule 50 (fin_instr -> .)
    Rboolean        reduce using rule 50 (fin_instr -> .)
    Rstring         reduce using rule 50 (fin_instr -> .)
    Rany            reduce using rule 50 (fin_instr -> .)
    Rvoid           reduce using rule 50 (fin_instr -> .)
    $end            reduce using rule 50 (fin_instr -> .)
    LLAVEC          reduce using rule 50 (fin_instr -> .)

    fin_instr                      shift and go to state 230

state 198

    (24) imprimir_listas -> imprimir_listas COMA . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    expresion                      shift and go to state 231
    llamada                        shift and go to state 69

state 199

    (26) declaracion -> Rlet ID DOSPUNTO tipo IGUAL expresion . fin_instr
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MOD expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . MENOR expresion
    (92) expresion -> expresion . MAYORIGUAL expresion
    (93) expresion -> expresion . MAYOR expresion
    (94) expresion -> expresion . IGUALIGUAL expresion
    (95) expresion -> expresion . DISTINTO expresion
    (96) expresion -> expresion . AND expresion
    (97) expresion -> expresion . OR expresion
    (49) fin_instr -> . PUNTOCOMA
    (50) fin_instr -> .

  ! shift/reduce conflict for MENOS resolved as shift
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIV             shift and go to state 99
    POT             shift and go to state 100
    MOD             shift and go to state 101
    MENORIGUAL      shift and go to state 102
    MENOR           shift and go to state 103
    MAYORIGUAL      shift and go to state 104
    MAYOR           shift and go to state 105
    IGUALIGUAL      shift and go to state 106
    DISTINTO        shift and go to state 107
    AND             shift and go to state 108
    OR              shift and go to state 109
    PUNTOCOMA       shift and go to state 53
    error           reduce using rule 50 (fin_instr -> .)
    Rconsole        reduce using rule 50 (fin_instr -> .)
    Rlet            reduce using rule 50 (fin_instr -> .)
    ID              reduce using rule 50 (fin_instr -> .)
    Rif             reduce using rule 50 (fin_instr -> .)
    Rbreak          reduce using rule 50 (fin_instr -> .)
    Rwhile          reduce using rule 50 (fin_instr -> .)
    Rfor            reduce using rule 50 (fin_instr -> .)
    Rcontinue       reduce using rule 50 (fin_instr -> .)
    Rfunc           reduce using rule 50 (fin_instr -> .)
    Rreturn         reduce using rule 50 (fin_instr -> .)
    Rnumber         reduce using rule 50 (fin_instr -> .)
    Rboolean        reduce using rule 50 (fin_instr -> .)
    Rstring         reduce using rule 50 (fin_instr -> .)
    Rany            reduce using rule 50 (fin_instr -> .)
    Rvoid           reduce using rule 50 (fin_instr -> .)
    $end            reduce using rule 50 (fin_instr -> .)
    NOT             reduce using rule 50 (fin_instr -> .)
    PARA            reduce using rule 50 (fin_instr -> .)
    ENTERO          reduce using rule 50 (fin_instr -> .)
    DECIMAL         reduce using rule 50 (fin_instr -> .)
    CADENA          reduce using rule 50 (fin_instr -> .)
    Rtrue           reduce using rule 50 (fin_instr -> .)
    Rfalse          reduce using rule 50 (fin_instr -> .)
    Rnull           reduce using rule 50 (fin_instr -> .)
    LLAVEC          reduce using rule 50 (fin_instr -> .)

  ! MENOS           [ reduce using rule 50 (fin_instr -> .) ]

    fin_instr                      shift and go to state 232

state 200

    (65) declaracion_arreglo -> Rlet ID DOSPUNTO tipo lista_expresiones fin_instr .

    error           reduce using rule 65 (declaracion_arreglo -> Rlet ID DOSPUNTO tipo lista_expresiones fin_instr .)
    Rconsole        reduce using rule 65 (declaracion_arreglo -> Rlet ID DOSPUNTO tipo lista_expresiones fin_instr .)
    Rlet            reduce using rule 65 (declaracion_arreglo -> Rlet ID DOSPUNTO tipo lista_expresiones fin_instr .)
    ID              reduce using rule 65 (declaracion_arreglo -> Rlet ID DOSPUNTO tipo lista_expresiones fin_instr .)
    Rif             reduce using rule 65 (declaracion_arreglo -> Rlet ID DOSPUNTO tipo lista_expresiones fin_instr .)
    Rbreak          reduce using rule 65 (declaracion_arreglo -> Rlet ID DOSPUNTO tipo lista_expresiones fin_instr .)
    Rwhile          reduce using rule 65 (declaracion_arreglo -> Rlet ID DOSPUNTO tipo lista_expresiones fin_instr .)
    Rfor            reduce using rule 65 (declaracion_arreglo -> Rlet ID DOSPUNTO tipo lista_expresiones fin_instr .)
    Rcontinue       reduce using rule 65 (declaracion_arreglo -> Rlet ID DOSPUNTO tipo lista_expresiones fin_instr .)
    Rfunc           reduce using rule 65 (declaracion_arreglo -> Rlet ID DOSPUNTO tipo lista_expresiones fin_instr .)
    Rreturn         reduce using rule 65 (declaracion_arreglo -> Rlet ID DOSPUNTO tipo lista_expresiones fin_instr .)
    Rnumber         reduce using rule 65 (declaracion_arreglo -> Rlet ID DOSPUNTO tipo lista_expresiones fin_instr .)
    Rboolean        reduce using rule 65 (declaracion_arreglo -> Rlet ID DOSPUNTO tipo lista_expresiones fin_instr .)
    Rstring         reduce using rule 65 (declaracion_arreglo -> Rlet ID DOSPUNTO tipo lista_expresiones fin_instr .)
    Rany            reduce using rule 65 (declaracion_arreglo -> Rlet ID DOSPUNTO tipo lista_expresiones fin_instr .)
    Rvoid           reduce using rule 65 (declaracion_arreglo -> Rlet ID DOSPUNTO tipo lista_expresiones fin_instr .)
    $end            reduce using rule 65 (declaracion_arreglo -> Rlet ID DOSPUNTO tipo lista_expresiones fin_instr .)
    LLAVEC          reduce using rule 65 (declaracion_arreglo -> Rlet ID DOSPUNTO tipo lista_expresiones fin_instr .)


state 201

    (72) declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_expresiones IGUAL . CORA tipo_lista CORC fin_instr

    CORA            shift and go to state 233


state 202

    (71) declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_Dim IGUAL . CORA tipo_lista CORC fin_instr

    CORA            shift and go to state 234


state 203

    (70) declaracion_arreglo2 -> Rlet ID IGUAL CORA tipo_lista CORC . fin_instr
    (49) fin_instr -> . PUNTOCOMA
    (50) fin_instr -> .

    PUNTOCOMA       shift and go to state 53
    error           reduce using rule 50 (fin_instr -> .)
    Rconsole        reduce using rule 50 (fin_instr -> .)
    Rlet            reduce using rule 50 (fin_instr -> .)
    ID              reduce using rule 50 (fin_instr -> .)
    Rif             reduce using rule 50 (fin_instr -> .)
    Rbreak          reduce using rule 50 (fin_instr -> .)
    Rwhile          reduce using rule 50 (fin_instr -> .)
    Rfor            reduce using rule 50 (fin_instr -> .)
    Rcontinue       reduce using rule 50 (fin_instr -> .)
    Rfunc           reduce using rule 50 (fin_instr -> .)
    Rreturn         reduce using rule 50 (fin_instr -> .)
    Rnumber         reduce using rule 50 (fin_instr -> .)
    Rboolean        reduce using rule 50 (fin_instr -> .)
    Rstring         reduce using rule 50 (fin_instr -> .)
    Rany            reduce using rule 50 (fin_instr -> .)
    Rvoid           reduce using rule 50 (fin_instr -> .)
    $end            reduce using rule 50 (fin_instr -> .)
    LLAVEC          reduce using rule 50 (fin_instr -> .)

    fin_instr                      shift and go to state 235

state 204

    (77) d1 -> d1 COMA . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    expresion                      shift and go to state 236
    llamada                        shift and go to state 69

state 205

    (79) d2 -> d2 COMA . LLAVEA d1 LLAVEC

    LLAVEA          shift and go to state 237


state 206

    (81) d3 -> d3 COMA . LLAVEA d2 LLAVEC

    LLAVEA          shift and go to state 238


state 207

    (80) d2 -> LLAVEA . d1 LLAVEC
    (77) d1 -> . d1 COMA expresion
    (78) d1 -> . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    d1                             shift and go to state 208
    expresion                      shift and go to state 172
    llamada                        shift and go to state 69

state 208

    (80) d2 -> LLAVEA d1 . LLAVEC
    (77) d1 -> d1 . COMA expresion

    LLAVEC          shift and go to state 239
    COMA            shift and go to state 204


state 209

    (82) d3 -> LLAVEA d2 . LLAVEC
    (79) d2 -> d2 . COMA LLAVEA d1 LLAVEC

    LLAVEC          shift and go to state 240
    COMA            shift and go to state 205


state 210

    (36) if -> Rif PARA expresion PARC LLAVEA instrucciones . LLAVEC
    (37) if -> Rif PARA expresion PARC LLAVEA instrucciones . LLAVEC Relse LLAVEA instrucciones LLAVEC
    (38) if -> Rif PARA expresion PARC LLAVEA instrucciones . LLAVEC Relse if
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion
    (6) instruccion -> . declaracion_sinAsig
    (7) instruccion -> . asignacion
    (8) instruccion -> . if
    (9) instruccion -> . break
    (10) instruccion -> . while
    (11) instruccion -> . tipo_incremento
    (12) instruccion -> . for
    (13) instruccion -> . continue
    (14) instruccion -> . funcion
    (15) instruccion -> . retorno
    (16) instruccion -> . llamada
    (17) instruccion -> . declaracion_arreglo
    (18) instruccion -> . declaracion_arreglo2
    (19) instruccion -> . modificar_arreglo
    (20) instruccion -> . error errores
    (23) imprimir_instr -> . Rconsole PUNTO Rlog PARA imprimir_listas PARC fin_instr
    (26) declaracion -> . Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr
    (27) declaracion -> . Rlet ID IGUAL expresion fin_instr
    (33) declaracion_sinAsig -> . Rlet ID DOSPUNTO tipo fin_instr
    (34) declaracion_sinAsig -> . Rlet ID fin_instr
    (35) asignacion -> . ID IGUAL expresion fin_instr
    (36) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC
    (37) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC
    (38) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse if
    (39) break -> . Rbreak fin_instr
    (40) while -> . Rwhile PARA expresion PARC LLAVEA instrucciones LLAVEC
    (41) tipo_incremento -> . ID MASMAS fin_instr
    (42) tipo_incremento -> . ID MENOSMENOS fin_instr
    (43) for -> . Rfor PARA declar_asig expresion fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC
    (48) continue -> . Rcontinue fin_instr
    (51) funcion -> . Rfunc ID PARA parametros PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (52) funcion -> . Rfunc ID PARA PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (53) funcion -> . Rfunc ID PARA parametros PARC LLAVEA instrucciones LLAVEC
    (54) funcion -> . Rfunc ID PARA PARC LLAVEA instrucciones LLAVEC
    (59) retorno -> . Rreturn expresion fin_instr
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr
    (65) declaracion_arreglo -> . Rlet ID DOSPUNTO tipo lista_expresiones fin_instr
    (70) declaracion_arreglo2 -> . Rlet ID IGUAL CORA tipo_lista CORC fin_instr
    (71) declaracion_arreglo2 -> . Rlet ID DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista CORC fin_instr
    (72) declaracion_arreglo2 -> . Rlet ID DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista CORC fin_instr
    (73) declaracion_arreglo2 -> . tipo lista_Dim ID IGUAL ID
    (83) modificar_arreglo -> . ID lista_expresiones IGUAL expresion fin_instr
    (28) tipo -> . Rnumber
    (29) tipo -> . Rboolean
    (30) tipo -> . Rstring
    (31) tipo -> . Rany
    (32) tipo -> . Rvoid

    LLAVEC          shift and go to state 241
    error           shift and go to state 20
    Rconsole        shift and go to state 21
    Rlet            shift and go to state 22
    ID              shift and go to state 23
    Rif             shift and go to state 25
    Rbreak          shift and go to state 26
    Rwhile          shift and go to state 27
    Rfor            shift and go to state 28
    Rcontinue       shift and go to state 29
    Rfunc           shift and go to state 30
    Rreturn         shift and go to state 31
    Rnumber         shift and go to state 32
    Rboolean        shift and go to state 33
    Rstring         shift and go to state 34
    Rany            shift and go to state 35
    Rvoid           shift and go to state 36

    if                             shift and go to state 8
    instruccion                    shift and go to state 37
    imprimir_instr                 shift and go to state 4
    declaracion                    shift and go to state 5
    declaracion_sinAsig            shift and go to state 6
    asignacion                     shift and go to state 7
    break                          shift and go to state 9
    while                          shift and go to state 10
    tipo_incremento                shift and go to state 11
    for                            shift and go to state 12
    continue                       shift and go to state 13
    funcion                        shift and go to state 14
    retorno                        shift and go to state 15
    llamada                        shift and go to state 16
    declaracion_arreglo            shift and go to state 17
    declaracion_arreglo2           shift and go to state 18
    modificar_arreglo              shift and go to state 19
    tipo                           shift and go to state 24

state 211

    (40) while -> Rwhile PARA expresion PARC LLAVEA instrucciones . LLAVEC
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion
    (6) instruccion -> . declaracion_sinAsig
    (7) instruccion -> . asignacion
    (8) instruccion -> . if
    (9) instruccion -> . break
    (10) instruccion -> . while
    (11) instruccion -> . tipo_incremento
    (12) instruccion -> . for
    (13) instruccion -> . continue
    (14) instruccion -> . funcion
    (15) instruccion -> . retorno
    (16) instruccion -> . llamada
    (17) instruccion -> . declaracion_arreglo
    (18) instruccion -> . declaracion_arreglo2
    (19) instruccion -> . modificar_arreglo
    (20) instruccion -> . error errores
    (23) imprimir_instr -> . Rconsole PUNTO Rlog PARA imprimir_listas PARC fin_instr
    (26) declaracion -> . Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr
    (27) declaracion -> . Rlet ID IGUAL expresion fin_instr
    (33) declaracion_sinAsig -> . Rlet ID DOSPUNTO tipo fin_instr
    (34) declaracion_sinAsig -> . Rlet ID fin_instr
    (35) asignacion -> . ID IGUAL expresion fin_instr
    (36) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC
    (37) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC
    (38) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse if
    (39) break -> . Rbreak fin_instr
    (40) while -> . Rwhile PARA expresion PARC LLAVEA instrucciones LLAVEC
    (41) tipo_incremento -> . ID MASMAS fin_instr
    (42) tipo_incremento -> . ID MENOSMENOS fin_instr
    (43) for -> . Rfor PARA declar_asig expresion fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC
    (48) continue -> . Rcontinue fin_instr
    (51) funcion -> . Rfunc ID PARA parametros PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (52) funcion -> . Rfunc ID PARA PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (53) funcion -> . Rfunc ID PARA parametros PARC LLAVEA instrucciones LLAVEC
    (54) funcion -> . Rfunc ID PARA PARC LLAVEA instrucciones LLAVEC
    (59) retorno -> . Rreturn expresion fin_instr
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr
    (65) declaracion_arreglo -> . Rlet ID DOSPUNTO tipo lista_expresiones fin_instr
    (70) declaracion_arreglo2 -> . Rlet ID IGUAL CORA tipo_lista CORC fin_instr
    (71) declaracion_arreglo2 -> . Rlet ID DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista CORC fin_instr
    (72) declaracion_arreglo2 -> . Rlet ID DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista CORC fin_instr
    (73) declaracion_arreglo2 -> . tipo lista_Dim ID IGUAL ID
    (83) modificar_arreglo -> . ID lista_expresiones IGUAL expresion fin_instr
    (28) tipo -> . Rnumber
    (29) tipo -> . Rboolean
    (30) tipo -> . Rstring
    (31) tipo -> . Rany
    (32) tipo -> . Rvoid

    LLAVEC          shift and go to state 242
    error           shift and go to state 20
    Rconsole        shift and go to state 21
    Rlet            shift and go to state 22
    ID              shift and go to state 23
    Rif             shift and go to state 25
    Rbreak          shift and go to state 26
    Rwhile          shift and go to state 27
    Rfor            shift and go to state 28
    Rcontinue       shift and go to state 29
    Rfunc           shift and go to state 30
    Rreturn         shift and go to state 31
    Rnumber         shift and go to state 32
    Rboolean        shift and go to state 33
    Rstring         shift and go to state 34
    Rany            shift and go to state 35
    Rvoid           shift and go to state 36

    instruccion                    shift and go to state 37
    imprimir_instr                 shift and go to state 4
    declaracion                    shift and go to state 5
    declaracion_sinAsig            shift and go to state 6
    asignacion                     shift and go to state 7
    if                             shift and go to state 8
    break                          shift and go to state 9
    while                          shift and go to state 10
    tipo_incremento                shift and go to state 11
    for                            shift and go to state 12
    continue                       shift and go to state 13
    funcion                        shift and go to state 14
    retorno                        shift and go to state 15
    llamada                        shift and go to state 16
    declaracion_arreglo            shift and go to state 17
    declaracion_arreglo2           shift and go to state 18
    modificar_arreglo              shift and go to state 19
    tipo                           shift and go to state 24

state 212

    (43) for -> Rfor PARA declar_asig expresion fin_instr actualizacion . PARC LLAVEA instrucciones LLAVEC

    PARC            shift and go to state 243


state 213

    (46) actualizacion -> asignacion .

    PARC            reduce using rule 46 (actualizacion -> asignacion .)


state 214

    (47) actualizacion -> tipo_incremento .

    PARC            reduce using rule 47 (actualizacion -> tipo_incremento .)


state 215

    (35) asignacion -> ID . IGUAL expresion fin_instr
    (41) tipo_incremento -> ID . MASMAS fin_instr
    (42) tipo_incremento -> ID . MENOSMENOS fin_instr

    IGUAL           shift and go to state 43
    MASMAS          shift and go to state 44
    MENOSMENOS      shift and go to state 45


state 216

    (26) declaracion -> Rlet ID DOSPUNTO tipo . IGUAL expresion fin_instr

    IGUAL           shift and go to state 162


state 217

    (57) parametro -> ID DOSPUNTO tipo .
    (58) parametro -> ID DOSPUNTO tipo . lista_Dim
    (66) lista_Dim -> . lista_Dim CORA CORC
    (67) lista_Dim -> . CORA CORC

    PARC            reduce using rule 57 (parametro -> ID DOSPUNTO tipo .)
    COMA            reduce using rule 57 (parametro -> ID DOSPUNTO tipo .)
    CORA            shift and go to state 50

    lista_Dim                      shift and go to state 244

state 218

    (51) funcion -> Rfunc ID PARA parametros PARC DOSPUNTO . tipo LLAVEA instrucciones LLAVEC
    (28) tipo -> . Rnumber
    (29) tipo -> . Rboolean
    (30) tipo -> . Rstring
    (31) tipo -> . Rany
    (32) tipo -> . Rvoid

    Rnumber         shift and go to state 32
    Rboolean        shift and go to state 33
    Rstring         shift and go to state 34
    Rany            shift and go to state 35
    Rvoid           shift and go to state 36

    tipo                           shift and go to state 245

state 219

    (53) funcion -> Rfunc ID PARA parametros PARC LLAVEA . instrucciones LLAVEC
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion
    (6) instruccion -> . declaracion_sinAsig
    (7) instruccion -> . asignacion
    (8) instruccion -> . if
    (9) instruccion -> . break
    (10) instruccion -> . while
    (11) instruccion -> . tipo_incremento
    (12) instruccion -> . for
    (13) instruccion -> . continue
    (14) instruccion -> . funcion
    (15) instruccion -> . retorno
    (16) instruccion -> . llamada
    (17) instruccion -> . declaracion_arreglo
    (18) instruccion -> . declaracion_arreglo2
    (19) instruccion -> . modificar_arreglo
    (20) instruccion -> . error errores
    (23) imprimir_instr -> . Rconsole PUNTO Rlog PARA imprimir_listas PARC fin_instr
    (26) declaracion -> . Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr
    (27) declaracion -> . Rlet ID IGUAL expresion fin_instr
    (33) declaracion_sinAsig -> . Rlet ID DOSPUNTO tipo fin_instr
    (34) declaracion_sinAsig -> . Rlet ID fin_instr
    (35) asignacion -> . ID IGUAL expresion fin_instr
    (36) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC
    (37) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC
    (38) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse if
    (39) break -> . Rbreak fin_instr
    (40) while -> . Rwhile PARA expresion PARC LLAVEA instrucciones LLAVEC
    (41) tipo_incremento -> . ID MASMAS fin_instr
    (42) tipo_incremento -> . ID MENOSMENOS fin_instr
    (43) for -> . Rfor PARA declar_asig expresion fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC
    (48) continue -> . Rcontinue fin_instr
    (51) funcion -> . Rfunc ID PARA parametros PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (52) funcion -> . Rfunc ID PARA PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (53) funcion -> . Rfunc ID PARA parametros PARC LLAVEA instrucciones LLAVEC
    (54) funcion -> . Rfunc ID PARA PARC LLAVEA instrucciones LLAVEC
    (59) retorno -> . Rreturn expresion fin_instr
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr
    (65) declaracion_arreglo -> . Rlet ID DOSPUNTO tipo lista_expresiones fin_instr
    (70) declaracion_arreglo2 -> . Rlet ID IGUAL CORA tipo_lista CORC fin_instr
    (71) declaracion_arreglo2 -> . Rlet ID DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista CORC fin_instr
    (72) declaracion_arreglo2 -> . Rlet ID DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista CORC fin_instr
    (73) declaracion_arreglo2 -> . tipo lista_Dim ID IGUAL ID
    (83) modificar_arreglo -> . ID lista_expresiones IGUAL expresion fin_instr
    (28) tipo -> . Rnumber
    (29) tipo -> . Rboolean
    (30) tipo -> . Rstring
    (31) tipo -> . Rany
    (32) tipo -> . Rvoid

    error           shift and go to state 20
    Rconsole        shift and go to state 21
    Rlet            shift and go to state 22
    ID              shift and go to state 23
    Rif             shift and go to state 25
    Rbreak          shift and go to state 26
    Rwhile          shift and go to state 27
    Rfor            shift and go to state 28
    Rcontinue       shift and go to state 29
    Rfunc           shift and go to state 30
    Rreturn         shift and go to state 31
    Rnumber         shift and go to state 32
    Rboolean        shift and go to state 33
    Rstring         shift and go to state 34
    Rany            shift and go to state 35
    Rvoid           shift and go to state 36

    instrucciones                  shift and go to state 246
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    declaracion                    shift and go to state 5
    declaracion_sinAsig            shift and go to state 6
    asignacion                     shift and go to state 7
    if                             shift and go to state 8
    break                          shift and go to state 9
    while                          shift and go to state 10
    tipo_incremento                shift and go to state 11
    for                            shift and go to state 12
    continue                       shift and go to state 13
    funcion                        shift and go to state 14
    retorno                        shift and go to state 15
    llamada                        shift and go to state 16
    declaracion_arreglo            shift and go to state 17
    declaracion_arreglo2           shift and go to state 18
    modificar_arreglo              shift and go to state 19
    tipo                           shift and go to state 24

state 220

    (55) parametros -> parametros COMA parametro .

    PARC            reduce using rule 55 (parametros -> parametros COMA parametro .)
    COMA            reduce using rule 55 (parametros -> parametros COMA parametro .)


state 221

    (52) funcion -> Rfunc ID PARA PARC DOSPUNTO tipo . LLAVEA instrucciones LLAVEC

    LLAVEA          shift and go to state 247


state 222

    (54) funcion -> Rfunc ID PARA PARC LLAVEA instrucciones . LLAVEC
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion
    (6) instruccion -> . declaracion_sinAsig
    (7) instruccion -> . asignacion
    (8) instruccion -> . if
    (9) instruccion -> . break
    (10) instruccion -> . while
    (11) instruccion -> . tipo_incremento
    (12) instruccion -> . for
    (13) instruccion -> . continue
    (14) instruccion -> . funcion
    (15) instruccion -> . retorno
    (16) instruccion -> . llamada
    (17) instruccion -> . declaracion_arreglo
    (18) instruccion -> . declaracion_arreglo2
    (19) instruccion -> . modificar_arreglo
    (20) instruccion -> . error errores
    (23) imprimir_instr -> . Rconsole PUNTO Rlog PARA imprimir_listas PARC fin_instr
    (26) declaracion -> . Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr
    (27) declaracion -> . Rlet ID IGUAL expresion fin_instr
    (33) declaracion_sinAsig -> . Rlet ID DOSPUNTO tipo fin_instr
    (34) declaracion_sinAsig -> . Rlet ID fin_instr
    (35) asignacion -> . ID IGUAL expresion fin_instr
    (36) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC
    (37) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC
    (38) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse if
    (39) break -> . Rbreak fin_instr
    (40) while -> . Rwhile PARA expresion PARC LLAVEA instrucciones LLAVEC
    (41) tipo_incremento -> . ID MASMAS fin_instr
    (42) tipo_incremento -> . ID MENOSMENOS fin_instr
    (43) for -> . Rfor PARA declar_asig expresion fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC
    (48) continue -> . Rcontinue fin_instr
    (51) funcion -> . Rfunc ID PARA parametros PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (52) funcion -> . Rfunc ID PARA PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (53) funcion -> . Rfunc ID PARA parametros PARC LLAVEA instrucciones LLAVEC
    (54) funcion -> . Rfunc ID PARA PARC LLAVEA instrucciones LLAVEC
    (59) retorno -> . Rreturn expresion fin_instr
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr
    (65) declaracion_arreglo -> . Rlet ID DOSPUNTO tipo lista_expresiones fin_instr
    (70) declaracion_arreglo2 -> . Rlet ID IGUAL CORA tipo_lista CORC fin_instr
    (71) declaracion_arreglo2 -> . Rlet ID DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista CORC fin_instr
    (72) declaracion_arreglo2 -> . Rlet ID DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista CORC fin_instr
    (73) declaracion_arreglo2 -> . tipo lista_Dim ID IGUAL ID
    (83) modificar_arreglo -> . ID lista_expresiones IGUAL expresion fin_instr
    (28) tipo -> . Rnumber
    (29) tipo -> . Rboolean
    (30) tipo -> . Rstring
    (31) tipo -> . Rany
    (32) tipo -> . Rvoid

    LLAVEC          shift and go to state 248
    error           shift and go to state 20
    Rconsole        shift and go to state 21
    Rlet            shift and go to state 22
    ID              shift and go to state 23
    Rif             shift and go to state 25
    Rbreak          shift and go to state 26
    Rwhile          shift and go to state 27
    Rfor            shift and go to state 28
    Rcontinue       shift and go to state 29
    Rfunc           shift and go to state 30
    Rreturn         shift and go to state 31
    Rnumber         shift and go to state 32
    Rboolean        shift and go to state 33
    Rstring         shift and go to state 34
    Rany            shift and go to state 35
    Rvoid           shift and go to state 36

    instruccion                    shift and go to state 37
    imprimir_instr                 shift and go to state 4
    declaracion                    shift and go to state 5
    declaracion_sinAsig            shift and go to state 6
    asignacion                     shift and go to state 7
    if                             shift and go to state 8
    break                          shift and go to state 9
    while                          shift and go to state 10
    tipo_incremento                shift and go to state 11
    for                            shift and go to state 12
    continue                       shift and go to state 13
    funcion                        shift and go to state 14
    retorno                        shift and go to state 15
    llamada                        shift and go to state 16
    declaracion_arreglo            shift and go to state 17
    declaracion_arreglo2           shift and go to state 18
    modificar_arreglo              shift and go to state 19
    tipo                           shift and go to state 24

state 223

    (111) expresion -> ID PUNTO RtoFixed PARA expresion . PARC
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MOD expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . MENOR expresion
    (92) expresion -> expresion . MAYORIGUAL expresion
    (93) expresion -> expresion . MAYOR expresion
    (94) expresion -> expresion . IGUALIGUAL expresion
    (95) expresion -> expresion . DISTINTO expresion
    (96) expresion -> expresion . AND expresion
    (97) expresion -> expresion . OR expresion

    PARC            shift and go to state 249
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIV             shift and go to state 99
    POT             shift and go to state 100
    MOD             shift and go to state 101
    MENORIGUAL      shift and go to state 102
    MENOR           shift and go to state 103
    MAYORIGUAL      shift and go to state 104
    MAYOR           shift and go to state 105
    IGUALIGUAL      shift and go to state 106
    DISTINTO        shift and go to state 107
    AND             shift and go to state 108
    OR              shift and go to state 109


state 224

    (112) expresion -> ID PUNTO RtoExponential PARA expresion . PARC
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MOD expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . MENOR expresion
    (92) expresion -> expresion . MAYORIGUAL expresion
    (93) expresion -> expresion . MAYOR expresion
    (94) expresion -> expresion . IGUALIGUAL expresion
    (95) expresion -> expresion . DISTINTO expresion
    (96) expresion -> expresion . AND expresion
    (97) expresion -> expresion . OR expresion

    PARC            shift and go to state 250
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIV             shift and go to state 99
    POT             shift and go to state 100
    MOD             shift and go to state 101
    MENORIGUAL      shift and go to state 102
    MENOR           shift and go to state 103
    MAYORIGUAL      shift and go to state 104
    MAYOR           shift and go to state 105
    IGUALIGUAL      shift and go to state 106
    DISTINTO        shift and go to state 107
    AND             shift and go to state 108
    OR              shift and go to state 109


state 225

    (113) expresion -> ID PUNTO RtoString PARA PARC .

    MAS             reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    MENOS           reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    POR             reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    DIV             reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    POT             reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    MOD             reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    MENORIGUAL      reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    MENOR           reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    MAYORIGUAL      reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    MAYOR           reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    IGUALIGUAL      reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    DISTINTO        reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    AND             reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    OR              reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    PUNTOCOMA       reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    error           reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    Rconsole        reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    Rlet            reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    ID              reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    Rif             reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    Rbreak          reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    Rwhile          reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    Rfor            reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    Rcontinue       reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    Rfunc           reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    Rreturn         reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    Rnumber         reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    Rboolean        reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    Rstring         reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    Rany            reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    Rvoid           reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    $end            reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    LLAVEC          reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    NOT             reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    PARA            reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    ENTERO          reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    DECIMAL         reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    CADENA          reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    Rtrue           reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    Rfalse          reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    Rnull           reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    PARC            reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    COMA            reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)
    CORC            reduce using rule 113 (expresion -> ID PUNTO RtoString PARA PARC .)


state 226

    (114) expresion -> ID PUNTO RtoLowerCase PARA PARC .

    MAS             reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    MENOS           reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    POR             reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    DIV             reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    POT             reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    MOD             reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    MENORIGUAL      reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    MENOR           reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    MAYORIGUAL      reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    MAYOR           reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    IGUALIGUAL      reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    DISTINTO        reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    AND             reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    OR              reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    PUNTOCOMA       reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    error           reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    Rconsole        reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    Rlet            reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    ID              reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    Rif             reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    Rbreak          reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    Rwhile          reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    Rfor            reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    Rcontinue       reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    Rfunc           reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    Rreturn         reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    Rnumber         reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    Rboolean        reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    Rstring         reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    Rany            reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    Rvoid           reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    $end            reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    LLAVEC          reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    NOT             reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    PARA            reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    ENTERO          reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    DECIMAL         reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    CADENA          reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    Rtrue           reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    Rfalse          reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    Rnull           reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    PARC            reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    COMA            reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)
    CORC            reduce using rule 114 (expresion -> ID PUNTO RtoLowerCase PARA PARC .)


state 227

    (115) expresion -> ID PUNTO RtoUpperCase PARA PARC .

    MAS             reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    MENOS           reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    POR             reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    DIV             reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    POT             reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    MOD             reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    MENORIGUAL      reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    MENOR           reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    MAYORIGUAL      reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    MAYOR           reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    IGUALIGUAL      reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    DISTINTO        reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    AND             reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    OR              reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    PUNTOCOMA       reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    error           reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    Rconsole        reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    Rlet            reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    ID              reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    Rif             reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    Rbreak          reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    Rwhile          reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    Rfor            reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    Rcontinue       reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    Rfunc           reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    Rreturn         reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    Rnumber         reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    Rboolean        reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    Rstring         reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    Rany            reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    Rvoid           reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    $end            reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    LLAVEC          reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    NOT             reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    PARA            reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    ENTERO          reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    DECIMAL         reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    CADENA          reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    Rtrue           reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    Rfalse          reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    Rnull           reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    PARC            reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    COMA            reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)
    CORC            reduce using rule 115 (expresion -> ID PUNTO RtoUpperCase PARA PARC .)


state 228

    (116) expresion -> ID PUNTO Rlength PARA PARC .

    MAS             reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    MENOS           reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    POR             reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    DIV             reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    POT             reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    MOD             reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    MENORIGUAL      reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    MENOR           reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    MAYORIGUAL      reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    MAYOR           reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    IGUALIGUAL      reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    DISTINTO        reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    AND             reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    OR              reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    PUNTOCOMA       reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    error           reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    Rconsole        reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    Rlet            reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    ID              reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    Rif             reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    Rbreak          reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    Rwhile          reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    Rfor            reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    Rcontinue       reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    Rfunc           reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    Rreturn         reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    Rnumber         reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    Rboolean        reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    Rstring         reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    Rany            reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    Rvoid           reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    $end            reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    LLAVEC          reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    NOT             reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    PARA            reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    ENTERO          reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    DECIMAL         reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    CADENA          reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    Rtrue           reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    Rfalse          reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    Rnull           reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    PARC            reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    COMA            reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)
    CORC            reduce using rule 116 (expresion -> ID PUNTO Rlength PARA PARC .)


state 229

    (117) expresion -> ID PUNTO Rsplit PARA expresion . PARC
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MOD expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . MENOR expresion
    (92) expresion -> expresion . MAYORIGUAL expresion
    (93) expresion -> expresion . MAYOR expresion
    (94) expresion -> expresion . IGUALIGUAL expresion
    (95) expresion -> expresion . DISTINTO expresion
    (96) expresion -> expresion . AND expresion
    (97) expresion -> expresion . OR expresion

    PARC            shift and go to state 251
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIV             shift and go to state 99
    POT             shift and go to state 100
    MOD             shift and go to state 101
    MENORIGUAL      shift and go to state 102
    MENOR           shift and go to state 103
    MAYORIGUAL      shift and go to state 104
    MAYOR           shift and go to state 105
    IGUALIGUAL      shift and go to state 106
    DISTINTO        shift and go to state 107
    AND             shift and go to state 108
    OR              shift and go to state 109


state 230

    (23) imprimir_instr -> Rconsole PUNTO Rlog PARA imprimir_listas PARC fin_instr .

    error           reduce using rule 23 (imprimir_instr -> Rconsole PUNTO Rlog PARA imprimir_listas PARC fin_instr .)
    Rconsole        reduce using rule 23 (imprimir_instr -> Rconsole PUNTO Rlog PARA imprimir_listas PARC fin_instr .)
    Rlet            reduce using rule 23 (imprimir_instr -> Rconsole PUNTO Rlog PARA imprimir_listas PARC fin_instr .)
    ID              reduce using rule 23 (imprimir_instr -> Rconsole PUNTO Rlog PARA imprimir_listas PARC fin_instr .)
    Rif             reduce using rule 23 (imprimir_instr -> Rconsole PUNTO Rlog PARA imprimir_listas PARC fin_instr .)
    Rbreak          reduce using rule 23 (imprimir_instr -> Rconsole PUNTO Rlog PARA imprimir_listas PARC fin_instr .)
    Rwhile          reduce using rule 23 (imprimir_instr -> Rconsole PUNTO Rlog PARA imprimir_listas PARC fin_instr .)
    Rfor            reduce using rule 23 (imprimir_instr -> Rconsole PUNTO Rlog PARA imprimir_listas PARC fin_instr .)
    Rcontinue       reduce using rule 23 (imprimir_instr -> Rconsole PUNTO Rlog PARA imprimir_listas PARC fin_instr .)
    Rfunc           reduce using rule 23 (imprimir_instr -> Rconsole PUNTO Rlog PARA imprimir_listas PARC fin_instr .)
    Rreturn         reduce using rule 23 (imprimir_instr -> Rconsole PUNTO Rlog PARA imprimir_listas PARC fin_instr .)
    Rnumber         reduce using rule 23 (imprimir_instr -> Rconsole PUNTO Rlog PARA imprimir_listas PARC fin_instr .)
    Rboolean        reduce using rule 23 (imprimir_instr -> Rconsole PUNTO Rlog PARA imprimir_listas PARC fin_instr .)
    Rstring         reduce using rule 23 (imprimir_instr -> Rconsole PUNTO Rlog PARA imprimir_listas PARC fin_instr .)
    Rany            reduce using rule 23 (imprimir_instr -> Rconsole PUNTO Rlog PARA imprimir_listas PARC fin_instr .)
    Rvoid           reduce using rule 23 (imprimir_instr -> Rconsole PUNTO Rlog PARA imprimir_listas PARC fin_instr .)
    $end            reduce using rule 23 (imprimir_instr -> Rconsole PUNTO Rlog PARA imprimir_listas PARC fin_instr .)
    LLAVEC          reduce using rule 23 (imprimir_instr -> Rconsole PUNTO Rlog PARA imprimir_listas PARC fin_instr .)


state 231

    (24) imprimir_listas -> imprimir_listas COMA expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MOD expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . MENOR expresion
    (92) expresion -> expresion . MAYORIGUAL expresion
    (93) expresion -> expresion . MAYOR expresion
    (94) expresion -> expresion . IGUALIGUAL expresion
    (95) expresion -> expresion . DISTINTO expresion
    (96) expresion -> expresion . AND expresion
    (97) expresion -> expresion . OR expresion

    PARC            reduce using rule 24 (imprimir_listas -> imprimir_listas COMA expresion .)
    COMA            reduce using rule 24 (imprimir_listas -> imprimir_listas COMA expresion .)
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIV             shift and go to state 99
    POT             shift and go to state 100
    MOD             shift and go to state 101
    MENORIGUAL      shift and go to state 102
    MENOR           shift and go to state 103
    MAYORIGUAL      shift and go to state 104
    MAYOR           shift and go to state 105
    IGUALIGUAL      shift and go to state 106
    DISTINTO        shift and go to state 107
    AND             shift and go to state 108
    OR              shift and go to state 109


state 232

    (26) declaracion -> Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr .

    error           reduce using rule 26 (declaracion -> Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr .)
    Rconsole        reduce using rule 26 (declaracion -> Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr .)
    Rlet            reduce using rule 26 (declaracion -> Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr .)
    ID              reduce using rule 26 (declaracion -> Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr .)
    Rif             reduce using rule 26 (declaracion -> Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr .)
    Rbreak          reduce using rule 26 (declaracion -> Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr .)
    Rwhile          reduce using rule 26 (declaracion -> Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr .)
    Rfor            reduce using rule 26 (declaracion -> Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr .)
    Rcontinue       reduce using rule 26 (declaracion -> Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr .)
    Rfunc           reduce using rule 26 (declaracion -> Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr .)
    Rreturn         reduce using rule 26 (declaracion -> Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr .)
    Rnumber         reduce using rule 26 (declaracion -> Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr .)
    Rboolean        reduce using rule 26 (declaracion -> Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr .)
    Rstring         reduce using rule 26 (declaracion -> Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr .)
    Rany            reduce using rule 26 (declaracion -> Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr .)
    Rvoid           reduce using rule 26 (declaracion -> Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr .)
    $end            reduce using rule 26 (declaracion -> Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr .)
    MENOS           reduce using rule 26 (declaracion -> Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr .)
    NOT             reduce using rule 26 (declaracion -> Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr .)
    PARA            reduce using rule 26 (declaracion -> Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr .)
    ENTERO          reduce using rule 26 (declaracion -> Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr .)
    DECIMAL         reduce using rule 26 (declaracion -> Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr .)
    CADENA          reduce using rule 26 (declaracion -> Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr .)
    Rtrue           reduce using rule 26 (declaracion -> Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr .)
    Rfalse          reduce using rule 26 (declaracion -> Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr .)
    Rnull           reduce using rule 26 (declaracion -> Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr .)
    LLAVEC          reduce using rule 26 (declaracion -> Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr .)


state 233

    (72) declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_expresiones IGUAL CORA . tipo_lista CORC fin_instr
    (74) tipo_lista -> . d1
    (75) tipo_lista -> . d2
    (76) tipo_lista -> . d3
    (77) d1 -> . d1 COMA expresion
    (78) d1 -> . expresion
    (79) d2 -> . d2 COMA LLAVEA d1 LLAVEC
    (80) d2 -> . LLAVEA d1 LLAVEC
    (81) d3 -> . d3 COMA LLAVEA d2 LLAVEC
    (82) d3 -> . LLAVEA d2 LLAVEC
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    LLAVEA          shift and go to state 173
    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    tipo_lista                     shift and go to state 252
    d1                             shift and go to state 169
    d2                             shift and go to state 170
    d3                             shift and go to state 171
    expresion                      shift and go to state 172
    llamada                        shift and go to state 69

state 234

    (71) declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_Dim IGUAL CORA . tipo_lista CORC fin_instr
    (74) tipo_lista -> . d1
    (75) tipo_lista -> . d2
    (76) tipo_lista -> . d3
    (77) d1 -> . d1 COMA expresion
    (78) d1 -> . expresion
    (79) d2 -> . d2 COMA LLAVEA d1 LLAVEC
    (80) d2 -> . LLAVEA d1 LLAVEC
    (81) d3 -> . d3 COMA LLAVEA d2 LLAVEC
    (82) d3 -> . LLAVEA d2 LLAVEC
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    LLAVEA          shift and go to state 173
    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    tipo_lista                     shift and go to state 253
    d1                             shift and go to state 169
    d2                             shift and go to state 170
    d3                             shift and go to state 171
    expresion                      shift and go to state 172
    llamada                        shift and go to state 69

state 235

    (70) declaracion_arreglo2 -> Rlet ID IGUAL CORA tipo_lista CORC fin_instr .

    error           reduce using rule 70 (declaracion_arreglo2 -> Rlet ID IGUAL CORA tipo_lista CORC fin_instr .)
    Rconsole        reduce using rule 70 (declaracion_arreglo2 -> Rlet ID IGUAL CORA tipo_lista CORC fin_instr .)
    Rlet            reduce using rule 70 (declaracion_arreglo2 -> Rlet ID IGUAL CORA tipo_lista CORC fin_instr .)
    ID              reduce using rule 70 (declaracion_arreglo2 -> Rlet ID IGUAL CORA tipo_lista CORC fin_instr .)
    Rif             reduce using rule 70 (declaracion_arreglo2 -> Rlet ID IGUAL CORA tipo_lista CORC fin_instr .)
    Rbreak          reduce using rule 70 (declaracion_arreglo2 -> Rlet ID IGUAL CORA tipo_lista CORC fin_instr .)
    Rwhile          reduce using rule 70 (declaracion_arreglo2 -> Rlet ID IGUAL CORA tipo_lista CORC fin_instr .)
    Rfor            reduce using rule 70 (declaracion_arreglo2 -> Rlet ID IGUAL CORA tipo_lista CORC fin_instr .)
    Rcontinue       reduce using rule 70 (declaracion_arreglo2 -> Rlet ID IGUAL CORA tipo_lista CORC fin_instr .)
    Rfunc           reduce using rule 70 (declaracion_arreglo2 -> Rlet ID IGUAL CORA tipo_lista CORC fin_instr .)
    Rreturn         reduce using rule 70 (declaracion_arreglo2 -> Rlet ID IGUAL CORA tipo_lista CORC fin_instr .)
    Rnumber         reduce using rule 70 (declaracion_arreglo2 -> Rlet ID IGUAL CORA tipo_lista CORC fin_instr .)
    Rboolean        reduce using rule 70 (declaracion_arreglo2 -> Rlet ID IGUAL CORA tipo_lista CORC fin_instr .)
    Rstring         reduce using rule 70 (declaracion_arreglo2 -> Rlet ID IGUAL CORA tipo_lista CORC fin_instr .)
    Rany            reduce using rule 70 (declaracion_arreglo2 -> Rlet ID IGUAL CORA tipo_lista CORC fin_instr .)
    Rvoid           reduce using rule 70 (declaracion_arreglo2 -> Rlet ID IGUAL CORA tipo_lista CORC fin_instr .)
    $end            reduce using rule 70 (declaracion_arreglo2 -> Rlet ID IGUAL CORA tipo_lista CORC fin_instr .)
    LLAVEC          reduce using rule 70 (declaracion_arreglo2 -> Rlet ID IGUAL CORA tipo_lista CORC fin_instr .)


state 236

    (77) d1 -> d1 COMA expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MOD expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . MENOR expresion
    (92) expresion -> expresion . MAYORIGUAL expresion
    (93) expresion -> expresion . MAYOR expresion
    (94) expresion -> expresion . IGUALIGUAL expresion
    (95) expresion -> expresion . DISTINTO expresion
    (96) expresion -> expresion . AND expresion
    (97) expresion -> expresion . OR expresion

    COMA            reduce using rule 77 (d1 -> d1 COMA expresion .)
    CORC            reduce using rule 77 (d1 -> d1 COMA expresion .)
    LLAVEC          reduce using rule 77 (d1 -> d1 COMA expresion .)
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIV             shift and go to state 99
    POT             shift and go to state 100
    MOD             shift and go to state 101
    MENORIGUAL      shift and go to state 102
    MENOR           shift and go to state 103
    MAYORIGUAL      shift and go to state 104
    MAYOR           shift and go to state 105
    IGUALIGUAL      shift and go to state 106
    DISTINTO        shift and go to state 107
    AND             shift and go to state 108
    OR              shift and go to state 109


state 237

    (79) d2 -> d2 COMA LLAVEA . d1 LLAVEC
    (77) d1 -> . d1 COMA expresion
    (78) d1 -> . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MOD expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion MENOR expresion
    (92) expresion -> . expresion MAYORIGUAL expresion
    (93) expresion -> . expresion MAYOR expresion
    (94) expresion -> . expresion IGUALIGUAL expresion
    (95) expresion -> . expresion DISTINTO expresion
    (96) expresion -> . expresion AND expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . PARA expresion PARC
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . CADENA
    (104) expresion -> . Rtrue
    (105) expresion -> . Rfalse
    (106) expresion -> . ID
    (107) expresion -> . Rnull
    (108) expresion -> . llamada
    (109) expresion -> . PARA tipo PARC expresion
    (110) expresion -> . ID lista_expresiones
    (111) expresion -> . ID PUNTO RtoFixed PARA expresion PARC
    (112) expresion -> . ID PUNTO RtoExponential PARA expresion PARC
    (113) expresion -> . ID PUNTO RtoString PARA PARC
    (114) expresion -> . ID PUNTO RtoLowerCase PARA PARC
    (115) expresion -> . ID PUNTO RtoUpperCase PARA PARC
    (116) expresion -> . ID PUNTO Rlength PARA PARC
    (117) expresion -> . ID PUNTO Rsplit PARA expresion PARC
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr

    MENOS           shift and go to state 59
    NOT             shift and go to state 60
    PARA            shift and go to state 61
    ENTERO          shift and go to state 62
    DECIMAL         shift and go to state 63
    CADENA          shift and go to state 64
    Rtrue           shift and go to state 65
    Rfalse          shift and go to state 66
    ID              shift and go to state 67
    Rnull           shift and go to state 68

    d1                             shift and go to state 254
    expresion                      shift and go to state 172
    llamada                        shift and go to state 69

state 238

    (81) d3 -> d3 COMA LLAVEA . d2 LLAVEC
    (79) d2 -> . d2 COMA LLAVEA d1 LLAVEC
    (80) d2 -> . LLAVEA d1 LLAVEC

    LLAVEA          shift and go to state 207

    d2                             shift and go to state 255

state 239

    (80) d2 -> LLAVEA d1 LLAVEC .

    COMA            reduce using rule 80 (d2 -> LLAVEA d1 LLAVEC .)
    CORC            reduce using rule 80 (d2 -> LLAVEA d1 LLAVEC .)
    LLAVEC          reduce using rule 80 (d2 -> LLAVEA d1 LLAVEC .)


state 240

    (82) d3 -> LLAVEA d2 LLAVEC .

    COMA            reduce using rule 82 (d3 -> LLAVEA d2 LLAVEC .)
    CORC            reduce using rule 82 (d3 -> LLAVEA d2 LLAVEC .)


state 241

    (36) if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC .
    (37) if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC . Relse LLAVEA instrucciones LLAVEC
    (38) if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC . Relse if

    error           reduce using rule 36 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC .)
    Rconsole        reduce using rule 36 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC .)
    Rlet            reduce using rule 36 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC .)
    ID              reduce using rule 36 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC .)
    Rif             reduce using rule 36 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC .)
    Rbreak          reduce using rule 36 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC .)
    Rwhile          reduce using rule 36 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC .)
    Rfor            reduce using rule 36 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC .)
    Rcontinue       reduce using rule 36 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC .)
    Rfunc           reduce using rule 36 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC .)
    Rreturn         reduce using rule 36 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC .)
    Rnumber         reduce using rule 36 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC .)
    Rboolean        reduce using rule 36 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC .)
    Rstring         reduce using rule 36 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC .)
    Rany            reduce using rule 36 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC .)
    Rvoid           reduce using rule 36 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC .)
    $end            reduce using rule 36 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC .)
    LLAVEC          reduce using rule 36 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC .)
    Relse           shift and go to state 256


state 242

    (40) while -> Rwhile PARA expresion PARC LLAVEA instrucciones LLAVEC .

    error           reduce using rule 40 (while -> Rwhile PARA expresion PARC LLAVEA instrucciones LLAVEC .)
    Rconsole        reduce using rule 40 (while -> Rwhile PARA expresion PARC LLAVEA instrucciones LLAVEC .)
    Rlet            reduce using rule 40 (while -> Rwhile PARA expresion PARC LLAVEA instrucciones LLAVEC .)
    ID              reduce using rule 40 (while -> Rwhile PARA expresion PARC LLAVEA instrucciones LLAVEC .)
    Rif             reduce using rule 40 (while -> Rwhile PARA expresion PARC LLAVEA instrucciones LLAVEC .)
    Rbreak          reduce using rule 40 (while -> Rwhile PARA expresion PARC LLAVEA instrucciones LLAVEC .)
    Rwhile          reduce using rule 40 (while -> Rwhile PARA expresion PARC LLAVEA instrucciones LLAVEC .)
    Rfor            reduce using rule 40 (while -> Rwhile PARA expresion PARC LLAVEA instrucciones LLAVEC .)
    Rcontinue       reduce using rule 40 (while -> Rwhile PARA expresion PARC LLAVEA instrucciones LLAVEC .)
    Rfunc           reduce using rule 40 (while -> Rwhile PARA expresion PARC LLAVEA instrucciones LLAVEC .)
    Rreturn         reduce using rule 40 (while -> Rwhile PARA expresion PARC LLAVEA instrucciones LLAVEC .)
    Rnumber         reduce using rule 40 (while -> Rwhile PARA expresion PARC LLAVEA instrucciones LLAVEC .)
    Rboolean        reduce using rule 40 (while -> Rwhile PARA expresion PARC LLAVEA instrucciones LLAVEC .)
    Rstring         reduce using rule 40 (while -> Rwhile PARA expresion PARC LLAVEA instrucciones LLAVEC .)
    Rany            reduce using rule 40 (while -> Rwhile PARA expresion PARC LLAVEA instrucciones LLAVEC .)
    Rvoid           reduce using rule 40 (while -> Rwhile PARA expresion PARC LLAVEA instrucciones LLAVEC .)
    $end            reduce using rule 40 (while -> Rwhile PARA expresion PARC LLAVEA instrucciones LLAVEC .)
    LLAVEC          reduce using rule 40 (while -> Rwhile PARA expresion PARC LLAVEA instrucciones LLAVEC .)


state 243

    (43) for -> Rfor PARA declar_asig expresion fin_instr actualizacion PARC . LLAVEA instrucciones LLAVEC

    LLAVEA          shift and go to state 257


state 244

    (58) parametro -> ID DOSPUNTO tipo lista_Dim .
    (66) lista_Dim -> lista_Dim . CORA CORC

    PARC            reduce using rule 58 (parametro -> ID DOSPUNTO tipo lista_Dim .)
    COMA            reduce using rule 58 (parametro -> ID DOSPUNTO tipo lista_Dim .)
    CORA            shift and go to state 85


state 245

    (51) funcion -> Rfunc ID PARA parametros PARC DOSPUNTO tipo . LLAVEA instrucciones LLAVEC

    LLAVEA          shift and go to state 258


state 246

    (53) funcion -> Rfunc ID PARA parametros PARC LLAVEA instrucciones . LLAVEC
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion
    (6) instruccion -> . declaracion_sinAsig
    (7) instruccion -> . asignacion
    (8) instruccion -> . if
    (9) instruccion -> . break
    (10) instruccion -> . while
    (11) instruccion -> . tipo_incremento
    (12) instruccion -> . for
    (13) instruccion -> . continue
    (14) instruccion -> . funcion
    (15) instruccion -> . retorno
    (16) instruccion -> . llamada
    (17) instruccion -> . declaracion_arreglo
    (18) instruccion -> . declaracion_arreglo2
    (19) instruccion -> . modificar_arreglo
    (20) instruccion -> . error errores
    (23) imprimir_instr -> . Rconsole PUNTO Rlog PARA imprimir_listas PARC fin_instr
    (26) declaracion -> . Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr
    (27) declaracion -> . Rlet ID IGUAL expresion fin_instr
    (33) declaracion_sinAsig -> . Rlet ID DOSPUNTO tipo fin_instr
    (34) declaracion_sinAsig -> . Rlet ID fin_instr
    (35) asignacion -> . ID IGUAL expresion fin_instr
    (36) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC
    (37) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC
    (38) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse if
    (39) break -> . Rbreak fin_instr
    (40) while -> . Rwhile PARA expresion PARC LLAVEA instrucciones LLAVEC
    (41) tipo_incremento -> . ID MASMAS fin_instr
    (42) tipo_incremento -> . ID MENOSMENOS fin_instr
    (43) for -> . Rfor PARA declar_asig expresion fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC
    (48) continue -> . Rcontinue fin_instr
    (51) funcion -> . Rfunc ID PARA parametros PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (52) funcion -> . Rfunc ID PARA PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (53) funcion -> . Rfunc ID PARA parametros PARC LLAVEA instrucciones LLAVEC
    (54) funcion -> . Rfunc ID PARA PARC LLAVEA instrucciones LLAVEC
    (59) retorno -> . Rreturn expresion fin_instr
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr
    (65) declaracion_arreglo -> . Rlet ID DOSPUNTO tipo lista_expresiones fin_instr
    (70) declaracion_arreglo2 -> . Rlet ID IGUAL CORA tipo_lista CORC fin_instr
    (71) declaracion_arreglo2 -> . Rlet ID DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista CORC fin_instr
    (72) declaracion_arreglo2 -> . Rlet ID DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista CORC fin_instr
    (73) declaracion_arreglo2 -> . tipo lista_Dim ID IGUAL ID
    (83) modificar_arreglo -> . ID lista_expresiones IGUAL expresion fin_instr
    (28) tipo -> . Rnumber
    (29) tipo -> . Rboolean
    (30) tipo -> . Rstring
    (31) tipo -> . Rany
    (32) tipo -> . Rvoid

    LLAVEC          shift and go to state 259
    error           shift and go to state 20
    Rconsole        shift and go to state 21
    Rlet            shift and go to state 22
    ID              shift and go to state 23
    Rif             shift and go to state 25
    Rbreak          shift and go to state 26
    Rwhile          shift and go to state 27
    Rfor            shift and go to state 28
    Rcontinue       shift and go to state 29
    Rfunc           shift and go to state 30
    Rreturn         shift and go to state 31
    Rnumber         shift and go to state 32
    Rboolean        shift and go to state 33
    Rstring         shift and go to state 34
    Rany            shift and go to state 35
    Rvoid           shift and go to state 36

    instruccion                    shift and go to state 37
    imprimir_instr                 shift and go to state 4
    declaracion                    shift and go to state 5
    declaracion_sinAsig            shift and go to state 6
    asignacion                     shift and go to state 7
    if                             shift and go to state 8
    break                          shift and go to state 9
    while                          shift and go to state 10
    tipo_incremento                shift and go to state 11
    for                            shift and go to state 12
    continue                       shift and go to state 13
    funcion                        shift and go to state 14
    retorno                        shift and go to state 15
    llamada                        shift and go to state 16
    declaracion_arreglo            shift and go to state 17
    declaracion_arreglo2           shift and go to state 18
    modificar_arreglo              shift and go to state 19
    tipo                           shift and go to state 24

state 247

    (52) funcion -> Rfunc ID PARA PARC DOSPUNTO tipo LLAVEA . instrucciones LLAVEC
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion
    (6) instruccion -> . declaracion_sinAsig
    (7) instruccion -> . asignacion
    (8) instruccion -> . if
    (9) instruccion -> . break
    (10) instruccion -> . while
    (11) instruccion -> . tipo_incremento
    (12) instruccion -> . for
    (13) instruccion -> . continue
    (14) instruccion -> . funcion
    (15) instruccion -> . retorno
    (16) instruccion -> . llamada
    (17) instruccion -> . declaracion_arreglo
    (18) instruccion -> . declaracion_arreglo2
    (19) instruccion -> . modificar_arreglo
    (20) instruccion -> . error errores
    (23) imprimir_instr -> . Rconsole PUNTO Rlog PARA imprimir_listas PARC fin_instr
    (26) declaracion -> . Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr
    (27) declaracion -> . Rlet ID IGUAL expresion fin_instr
    (33) declaracion_sinAsig -> . Rlet ID DOSPUNTO tipo fin_instr
    (34) declaracion_sinAsig -> . Rlet ID fin_instr
    (35) asignacion -> . ID IGUAL expresion fin_instr
    (36) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC
    (37) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC
    (38) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse if
    (39) break -> . Rbreak fin_instr
    (40) while -> . Rwhile PARA expresion PARC LLAVEA instrucciones LLAVEC
    (41) tipo_incremento -> . ID MASMAS fin_instr
    (42) tipo_incremento -> . ID MENOSMENOS fin_instr
    (43) for -> . Rfor PARA declar_asig expresion fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC
    (48) continue -> . Rcontinue fin_instr
    (51) funcion -> . Rfunc ID PARA parametros PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (52) funcion -> . Rfunc ID PARA PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (53) funcion -> . Rfunc ID PARA parametros PARC LLAVEA instrucciones LLAVEC
    (54) funcion -> . Rfunc ID PARA PARC LLAVEA instrucciones LLAVEC
    (59) retorno -> . Rreturn expresion fin_instr
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr
    (65) declaracion_arreglo -> . Rlet ID DOSPUNTO tipo lista_expresiones fin_instr
    (70) declaracion_arreglo2 -> . Rlet ID IGUAL CORA tipo_lista CORC fin_instr
    (71) declaracion_arreglo2 -> . Rlet ID DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista CORC fin_instr
    (72) declaracion_arreglo2 -> . Rlet ID DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista CORC fin_instr
    (73) declaracion_arreglo2 -> . tipo lista_Dim ID IGUAL ID
    (83) modificar_arreglo -> . ID lista_expresiones IGUAL expresion fin_instr
    (28) tipo -> . Rnumber
    (29) tipo -> . Rboolean
    (30) tipo -> . Rstring
    (31) tipo -> . Rany
    (32) tipo -> . Rvoid

    error           shift and go to state 20
    Rconsole        shift and go to state 21
    Rlet            shift and go to state 22
    ID              shift and go to state 23
    Rif             shift and go to state 25
    Rbreak          shift and go to state 26
    Rwhile          shift and go to state 27
    Rfor            shift and go to state 28
    Rcontinue       shift and go to state 29
    Rfunc           shift and go to state 30
    Rreturn         shift and go to state 31
    Rnumber         shift and go to state 32
    Rboolean        shift and go to state 33
    Rstring         shift and go to state 34
    Rany            shift and go to state 35
    Rvoid           shift and go to state 36

    tipo                           shift and go to state 24
    instrucciones                  shift and go to state 260
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    declaracion                    shift and go to state 5
    declaracion_sinAsig            shift and go to state 6
    asignacion                     shift and go to state 7
    if                             shift and go to state 8
    break                          shift and go to state 9
    while                          shift and go to state 10
    tipo_incremento                shift and go to state 11
    for                            shift and go to state 12
    continue                       shift and go to state 13
    funcion                        shift and go to state 14
    retorno                        shift and go to state 15
    llamada                        shift and go to state 16
    declaracion_arreglo            shift and go to state 17
    declaracion_arreglo2           shift and go to state 18
    modificar_arreglo              shift and go to state 19

state 248

    (54) funcion -> Rfunc ID PARA PARC LLAVEA instrucciones LLAVEC .

    error           reduce using rule 54 (funcion -> Rfunc ID PARA PARC LLAVEA instrucciones LLAVEC .)
    Rconsole        reduce using rule 54 (funcion -> Rfunc ID PARA PARC LLAVEA instrucciones LLAVEC .)
    Rlet            reduce using rule 54 (funcion -> Rfunc ID PARA PARC LLAVEA instrucciones LLAVEC .)
    ID              reduce using rule 54 (funcion -> Rfunc ID PARA PARC LLAVEA instrucciones LLAVEC .)
    Rif             reduce using rule 54 (funcion -> Rfunc ID PARA PARC LLAVEA instrucciones LLAVEC .)
    Rbreak          reduce using rule 54 (funcion -> Rfunc ID PARA PARC LLAVEA instrucciones LLAVEC .)
    Rwhile          reduce using rule 54 (funcion -> Rfunc ID PARA PARC LLAVEA instrucciones LLAVEC .)
    Rfor            reduce using rule 54 (funcion -> Rfunc ID PARA PARC LLAVEA instrucciones LLAVEC .)
    Rcontinue       reduce using rule 54 (funcion -> Rfunc ID PARA PARC LLAVEA instrucciones LLAVEC .)
    Rfunc           reduce using rule 54 (funcion -> Rfunc ID PARA PARC LLAVEA instrucciones LLAVEC .)
    Rreturn         reduce using rule 54 (funcion -> Rfunc ID PARA PARC LLAVEA instrucciones LLAVEC .)
    Rnumber         reduce using rule 54 (funcion -> Rfunc ID PARA PARC LLAVEA instrucciones LLAVEC .)
    Rboolean        reduce using rule 54 (funcion -> Rfunc ID PARA PARC LLAVEA instrucciones LLAVEC .)
    Rstring         reduce using rule 54 (funcion -> Rfunc ID PARA PARC LLAVEA instrucciones LLAVEC .)
    Rany            reduce using rule 54 (funcion -> Rfunc ID PARA PARC LLAVEA instrucciones LLAVEC .)
    Rvoid           reduce using rule 54 (funcion -> Rfunc ID PARA PARC LLAVEA instrucciones LLAVEC .)
    $end            reduce using rule 54 (funcion -> Rfunc ID PARA PARC LLAVEA instrucciones LLAVEC .)
    LLAVEC          reduce using rule 54 (funcion -> Rfunc ID PARA PARC LLAVEA instrucciones LLAVEC .)


state 249

    (111) expresion -> ID PUNTO RtoFixed PARA expresion PARC .

    MAS             reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    MENOS           reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    POR             reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    DIV             reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    POT             reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    MOD             reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    MENORIGUAL      reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    MENOR           reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    MAYORIGUAL      reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    MAYOR           reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    IGUALIGUAL      reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    DISTINTO        reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    AND             reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    OR              reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    PUNTOCOMA       reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    error           reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    Rconsole        reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    Rlet            reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    ID              reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    Rif             reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    Rbreak          reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    Rwhile          reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    Rfor            reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    Rcontinue       reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    Rfunc           reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    Rreturn         reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    Rnumber         reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    Rboolean        reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    Rstring         reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    Rany            reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    Rvoid           reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    $end            reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    LLAVEC          reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    NOT             reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    PARA            reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    ENTERO          reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    DECIMAL         reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    CADENA          reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    Rtrue           reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    Rfalse          reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    Rnull           reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    PARC            reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    COMA            reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)
    CORC            reduce using rule 111 (expresion -> ID PUNTO RtoFixed PARA expresion PARC .)


state 250

    (112) expresion -> ID PUNTO RtoExponential PARA expresion PARC .

    MAS             reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    MENOS           reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    POR             reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    DIV             reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    POT             reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    MOD             reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    MENORIGUAL      reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    MENOR           reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    MAYORIGUAL      reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    MAYOR           reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    IGUALIGUAL      reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    DISTINTO        reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    AND             reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    OR              reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    PUNTOCOMA       reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    error           reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    Rconsole        reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    Rlet            reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    ID              reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    Rif             reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    Rbreak          reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    Rwhile          reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    Rfor            reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    Rcontinue       reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    Rfunc           reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    Rreturn         reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    Rnumber         reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    Rboolean        reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    Rstring         reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    Rany            reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    Rvoid           reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    $end            reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    LLAVEC          reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    NOT             reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    PARA            reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    ENTERO          reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    DECIMAL         reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    CADENA          reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    Rtrue           reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    Rfalse          reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    Rnull           reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    PARC            reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    COMA            reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)
    CORC            reduce using rule 112 (expresion -> ID PUNTO RtoExponential PARA expresion PARC .)


state 251

    (117) expresion -> ID PUNTO Rsplit PARA expresion PARC .

    MAS             reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    MENOS           reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    POR             reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    DIV             reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    POT             reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    MOD             reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    MENORIGUAL      reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    MENOR           reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    MAYORIGUAL      reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    MAYOR           reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    IGUALIGUAL      reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    DISTINTO        reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    AND             reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    OR              reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    PUNTOCOMA       reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    error           reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    Rconsole        reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    Rlet            reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    ID              reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    Rif             reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    Rbreak          reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    Rwhile          reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    Rfor            reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    Rcontinue       reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    Rfunc           reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    Rreturn         reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    Rnumber         reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    Rboolean        reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    Rstring         reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    Rany            reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    Rvoid           reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    $end            reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    LLAVEC          reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    NOT             reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    PARA            reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    ENTERO          reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    DECIMAL         reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    CADENA          reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    Rtrue           reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    Rfalse          reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    Rnull           reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    PARC            reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    COMA            reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)
    CORC            reduce using rule 117 (expresion -> ID PUNTO Rsplit PARA expresion PARC .)


state 252

    (72) declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista . CORC fin_instr

    CORC            shift and go to state 261


state 253

    (71) declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista . CORC fin_instr

    CORC            shift and go to state 262


state 254

    (79) d2 -> d2 COMA LLAVEA d1 . LLAVEC
    (77) d1 -> d1 . COMA expresion

    LLAVEC          shift and go to state 263
    COMA            shift and go to state 204


state 255

    (81) d3 -> d3 COMA LLAVEA d2 . LLAVEC
    (79) d2 -> d2 . COMA LLAVEA d1 LLAVEC

    LLAVEC          shift and go to state 264
    COMA            shift and go to state 205


state 256

    (37) if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse . LLAVEA instrucciones LLAVEC
    (38) if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse . if
    (36) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC
    (37) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC
    (38) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse if

    LLAVEA          shift and go to state 265
    Rif             shift and go to state 25

    if                             shift and go to state 266

state 257

    (43) for -> Rfor PARA declar_asig expresion fin_instr actualizacion PARC LLAVEA . instrucciones LLAVEC
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion
    (6) instruccion -> . declaracion_sinAsig
    (7) instruccion -> . asignacion
    (8) instruccion -> . if
    (9) instruccion -> . break
    (10) instruccion -> . while
    (11) instruccion -> . tipo_incremento
    (12) instruccion -> . for
    (13) instruccion -> . continue
    (14) instruccion -> . funcion
    (15) instruccion -> . retorno
    (16) instruccion -> . llamada
    (17) instruccion -> . declaracion_arreglo
    (18) instruccion -> . declaracion_arreglo2
    (19) instruccion -> . modificar_arreglo
    (20) instruccion -> . error errores
    (23) imprimir_instr -> . Rconsole PUNTO Rlog PARA imprimir_listas PARC fin_instr
    (26) declaracion -> . Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr
    (27) declaracion -> . Rlet ID IGUAL expresion fin_instr
    (33) declaracion_sinAsig -> . Rlet ID DOSPUNTO tipo fin_instr
    (34) declaracion_sinAsig -> . Rlet ID fin_instr
    (35) asignacion -> . ID IGUAL expresion fin_instr
    (36) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC
    (37) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC
    (38) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse if
    (39) break -> . Rbreak fin_instr
    (40) while -> . Rwhile PARA expresion PARC LLAVEA instrucciones LLAVEC
    (41) tipo_incremento -> . ID MASMAS fin_instr
    (42) tipo_incremento -> . ID MENOSMENOS fin_instr
    (43) for -> . Rfor PARA declar_asig expresion fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC
    (48) continue -> . Rcontinue fin_instr
    (51) funcion -> . Rfunc ID PARA parametros PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (52) funcion -> . Rfunc ID PARA PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (53) funcion -> . Rfunc ID PARA parametros PARC LLAVEA instrucciones LLAVEC
    (54) funcion -> . Rfunc ID PARA PARC LLAVEA instrucciones LLAVEC
    (59) retorno -> . Rreturn expresion fin_instr
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr
    (65) declaracion_arreglo -> . Rlet ID DOSPUNTO tipo lista_expresiones fin_instr
    (70) declaracion_arreglo2 -> . Rlet ID IGUAL CORA tipo_lista CORC fin_instr
    (71) declaracion_arreglo2 -> . Rlet ID DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista CORC fin_instr
    (72) declaracion_arreglo2 -> . Rlet ID DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista CORC fin_instr
    (73) declaracion_arreglo2 -> . tipo lista_Dim ID IGUAL ID
    (83) modificar_arreglo -> . ID lista_expresiones IGUAL expresion fin_instr
    (28) tipo -> . Rnumber
    (29) tipo -> . Rboolean
    (30) tipo -> . Rstring
    (31) tipo -> . Rany
    (32) tipo -> . Rvoid

    error           shift and go to state 20
    Rconsole        shift and go to state 21
    Rlet            shift and go to state 22
    ID              shift and go to state 23
    Rif             shift and go to state 25
    Rbreak          shift and go to state 26
    Rwhile          shift and go to state 27
    Rfor            shift and go to state 28
    Rcontinue       shift and go to state 29
    Rfunc           shift and go to state 30
    Rreturn         shift and go to state 31
    Rnumber         shift and go to state 32
    Rboolean        shift and go to state 33
    Rstring         shift and go to state 34
    Rany            shift and go to state 35
    Rvoid           shift and go to state 36

    instrucciones                  shift and go to state 267
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    declaracion                    shift and go to state 5
    declaracion_sinAsig            shift and go to state 6
    asignacion                     shift and go to state 7
    if                             shift and go to state 8
    break                          shift and go to state 9
    while                          shift and go to state 10
    tipo_incremento                shift and go to state 11
    for                            shift and go to state 12
    continue                       shift and go to state 13
    funcion                        shift and go to state 14
    retorno                        shift and go to state 15
    llamada                        shift and go to state 16
    declaracion_arreglo            shift and go to state 17
    declaracion_arreglo2           shift and go to state 18
    modificar_arreglo              shift and go to state 19
    tipo                           shift and go to state 24

state 258

    (51) funcion -> Rfunc ID PARA parametros PARC DOSPUNTO tipo LLAVEA . instrucciones LLAVEC
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion
    (6) instruccion -> . declaracion_sinAsig
    (7) instruccion -> . asignacion
    (8) instruccion -> . if
    (9) instruccion -> . break
    (10) instruccion -> . while
    (11) instruccion -> . tipo_incremento
    (12) instruccion -> . for
    (13) instruccion -> . continue
    (14) instruccion -> . funcion
    (15) instruccion -> . retorno
    (16) instruccion -> . llamada
    (17) instruccion -> . declaracion_arreglo
    (18) instruccion -> . declaracion_arreglo2
    (19) instruccion -> . modificar_arreglo
    (20) instruccion -> . error errores
    (23) imprimir_instr -> . Rconsole PUNTO Rlog PARA imprimir_listas PARC fin_instr
    (26) declaracion -> . Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr
    (27) declaracion -> . Rlet ID IGUAL expresion fin_instr
    (33) declaracion_sinAsig -> . Rlet ID DOSPUNTO tipo fin_instr
    (34) declaracion_sinAsig -> . Rlet ID fin_instr
    (35) asignacion -> . ID IGUAL expresion fin_instr
    (36) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC
    (37) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC
    (38) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse if
    (39) break -> . Rbreak fin_instr
    (40) while -> . Rwhile PARA expresion PARC LLAVEA instrucciones LLAVEC
    (41) tipo_incremento -> . ID MASMAS fin_instr
    (42) tipo_incremento -> . ID MENOSMENOS fin_instr
    (43) for -> . Rfor PARA declar_asig expresion fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC
    (48) continue -> . Rcontinue fin_instr
    (51) funcion -> . Rfunc ID PARA parametros PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (52) funcion -> . Rfunc ID PARA PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (53) funcion -> . Rfunc ID PARA parametros PARC LLAVEA instrucciones LLAVEC
    (54) funcion -> . Rfunc ID PARA PARC LLAVEA instrucciones LLAVEC
    (59) retorno -> . Rreturn expresion fin_instr
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr
    (65) declaracion_arreglo -> . Rlet ID DOSPUNTO tipo lista_expresiones fin_instr
    (70) declaracion_arreglo2 -> . Rlet ID IGUAL CORA tipo_lista CORC fin_instr
    (71) declaracion_arreglo2 -> . Rlet ID DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista CORC fin_instr
    (72) declaracion_arreglo2 -> . Rlet ID DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista CORC fin_instr
    (73) declaracion_arreglo2 -> . tipo lista_Dim ID IGUAL ID
    (83) modificar_arreglo -> . ID lista_expresiones IGUAL expresion fin_instr
    (28) tipo -> . Rnumber
    (29) tipo -> . Rboolean
    (30) tipo -> . Rstring
    (31) tipo -> . Rany
    (32) tipo -> . Rvoid

    error           shift and go to state 20
    Rconsole        shift and go to state 21
    Rlet            shift and go to state 22
    ID              shift and go to state 23
    Rif             shift and go to state 25
    Rbreak          shift and go to state 26
    Rwhile          shift and go to state 27
    Rfor            shift and go to state 28
    Rcontinue       shift and go to state 29
    Rfunc           shift and go to state 30
    Rreturn         shift and go to state 31
    Rnumber         shift and go to state 32
    Rboolean        shift and go to state 33
    Rstring         shift and go to state 34
    Rany            shift and go to state 35
    Rvoid           shift and go to state 36

    tipo                           shift and go to state 24
    instrucciones                  shift and go to state 268
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    declaracion                    shift and go to state 5
    declaracion_sinAsig            shift and go to state 6
    asignacion                     shift and go to state 7
    if                             shift and go to state 8
    break                          shift and go to state 9
    while                          shift and go to state 10
    tipo_incremento                shift and go to state 11
    for                            shift and go to state 12
    continue                       shift and go to state 13
    funcion                        shift and go to state 14
    retorno                        shift and go to state 15
    llamada                        shift and go to state 16
    declaracion_arreglo            shift and go to state 17
    declaracion_arreglo2           shift and go to state 18
    modificar_arreglo              shift and go to state 19

state 259

    (53) funcion -> Rfunc ID PARA parametros PARC LLAVEA instrucciones LLAVEC .

    error           reduce using rule 53 (funcion -> Rfunc ID PARA parametros PARC LLAVEA instrucciones LLAVEC .)
    Rconsole        reduce using rule 53 (funcion -> Rfunc ID PARA parametros PARC LLAVEA instrucciones LLAVEC .)
    Rlet            reduce using rule 53 (funcion -> Rfunc ID PARA parametros PARC LLAVEA instrucciones LLAVEC .)
    ID              reduce using rule 53 (funcion -> Rfunc ID PARA parametros PARC LLAVEA instrucciones LLAVEC .)
    Rif             reduce using rule 53 (funcion -> Rfunc ID PARA parametros PARC LLAVEA instrucciones LLAVEC .)
    Rbreak          reduce using rule 53 (funcion -> Rfunc ID PARA parametros PARC LLAVEA instrucciones LLAVEC .)
    Rwhile          reduce using rule 53 (funcion -> Rfunc ID PARA parametros PARC LLAVEA instrucciones LLAVEC .)
    Rfor            reduce using rule 53 (funcion -> Rfunc ID PARA parametros PARC LLAVEA instrucciones LLAVEC .)
    Rcontinue       reduce using rule 53 (funcion -> Rfunc ID PARA parametros PARC LLAVEA instrucciones LLAVEC .)
    Rfunc           reduce using rule 53 (funcion -> Rfunc ID PARA parametros PARC LLAVEA instrucciones LLAVEC .)
    Rreturn         reduce using rule 53 (funcion -> Rfunc ID PARA parametros PARC LLAVEA instrucciones LLAVEC .)
    Rnumber         reduce using rule 53 (funcion -> Rfunc ID PARA parametros PARC LLAVEA instrucciones LLAVEC .)
    Rboolean        reduce using rule 53 (funcion -> Rfunc ID PARA parametros PARC LLAVEA instrucciones LLAVEC .)
    Rstring         reduce using rule 53 (funcion -> Rfunc ID PARA parametros PARC LLAVEA instrucciones LLAVEC .)
    Rany            reduce using rule 53 (funcion -> Rfunc ID PARA parametros PARC LLAVEA instrucciones LLAVEC .)
    Rvoid           reduce using rule 53 (funcion -> Rfunc ID PARA parametros PARC LLAVEA instrucciones LLAVEC .)
    $end            reduce using rule 53 (funcion -> Rfunc ID PARA parametros PARC LLAVEA instrucciones LLAVEC .)
    LLAVEC          reduce using rule 53 (funcion -> Rfunc ID PARA parametros PARC LLAVEA instrucciones LLAVEC .)


state 260

    (52) funcion -> Rfunc ID PARA PARC DOSPUNTO tipo LLAVEA instrucciones . LLAVEC
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion
    (6) instruccion -> . declaracion_sinAsig
    (7) instruccion -> . asignacion
    (8) instruccion -> . if
    (9) instruccion -> . break
    (10) instruccion -> . while
    (11) instruccion -> . tipo_incremento
    (12) instruccion -> . for
    (13) instruccion -> . continue
    (14) instruccion -> . funcion
    (15) instruccion -> . retorno
    (16) instruccion -> . llamada
    (17) instruccion -> . declaracion_arreglo
    (18) instruccion -> . declaracion_arreglo2
    (19) instruccion -> . modificar_arreglo
    (20) instruccion -> . error errores
    (23) imprimir_instr -> . Rconsole PUNTO Rlog PARA imprimir_listas PARC fin_instr
    (26) declaracion -> . Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr
    (27) declaracion -> . Rlet ID IGUAL expresion fin_instr
    (33) declaracion_sinAsig -> . Rlet ID DOSPUNTO tipo fin_instr
    (34) declaracion_sinAsig -> . Rlet ID fin_instr
    (35) asignacion -> . ID IGUAL expresion fin_instr
    (36) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC
    (37) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC
    (38) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse if
    (39) break -> . Rbreak fin_instr
    (40) while -> . Rwhile PARA expresion PARC LLAVEA instrucciones LLAVEC
    (41) tipo_incremento -> . ID MASMAS fin_instr
    (42) tipo_incremento -> . ID MENOSMENOS fin_instr
    (43) for -> . Rfor PARA declar_asig expresion fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC
    (48) continue -> . Rcontinue fin_instr
    (51) funcion -> . Rfunc ID PARA parametros PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (52) funcion -> . Rfunc ID PARA PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (53) funcion -> . Rfunc ID PARA parametros PARC LLAVEA instrucciones LLAVEC
    (54) funcion -> . Rfunc ID PARA PARC LLAVEA instrucciones LLAVEC
    (59) retorno -> . Rreturn expresion fin_instr
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr
    (65) declaracion_arreglo -> . Rlet ID DOSPUNTO tipo lista_expresiones fin_instr
    (70) declaracion_arreglo2 -> . Rlet ID IGUAL CORA tipo_lista CORC fin_instr
    (71) declaracion_arreglo2 -> . Rlet ID DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista CORC fin_instr
    (72) declaracion_arreglo2 -> . Rlet ID DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista CORC fin_instr
    (73) declaracion_arreglo2 -> . tipo lista_Dim ID IGUAL ID
    (83) modificar_arreglo -> . ID lista_expresiones IGUAL expresion fin_instr
    (28) tipo -> . Rnumber
    (29) tipo -> . Rboolean
    (30) tipo -> . Rstring
    (31) tipo -> . Rany
    (32) tipo -> . Rvoid

    LLAVEC          shift and go to state 269
    error           shift and go to state 20
    Rconsole        shift and go to state 21
    Rlet            shift and go to state 22
    ID              shift and go to state 23
    Rif             shift and go to state 25
    Rbreak          shift and go to state 26
    Rwhile          shift and go to state 27
    Rfor            shift and go to state 28
    Rcontinue       shift and go to state 29
    Rfunc           shift and go to state 30
    Rreturn         shift and go to state 31
    Rnumber         shift and go to state 32
    Rboolean        shift and go to state 33
    Rstring         shift and go to state 34
    Rany            shift and go to state 35
    Rvoid           shift and go to state 36

    tipo                           shift and go to state 24
    instruccion                    shift and go to state 37
    imprimir_instr                 shift and go to state 4
    declaracion                    shift and go to state 5
    declaracion_sinAsig            shift and go to state 6
    asignacion                     shift and go to state 7
    if                             shift and go to state 8
    break                          shift and go to state 9
    while                          shift and go to state 10
    tipo_incremento                shift and go to state 11
    for                            shift and go to state 12
    continue                       shift and go to state 13
    funcion                        shift and go to state 14
    retorno                        shift and go to state 15
    llamada                        shift and go to state 16
    declaracion_arreglo            shift and go to state 17
    declaracion_arreglo2           shift and go to state 18
    modificar_arreglo              shift and go to state 19

state 261

    (72) declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista CORC . fin_instr
    (49) fin_instr -> . PUNTOCOMA
    (50) fin_instr -> .

    PUNTOCOMA       shift and go to state 53
    error           reduce using rule 50 (fin_instr -> .)
    Rconsole        reduce using rule 50 (fin_instr -> .)
    Rlet            reduce using rule 50 (fin_instr -> .)
    ID              reduce using rule 50 (fin_instr -> .)
    Rif             reduce using rule 50 (fin_instr -> .)
    Rbreak          reduce using rule 50 (fin_instr -> .)
    Rwhile          reduce using rule 50 (fin_instr -> .)
    Rfor            reduce using rule 50 (fin_instr -> .)
    Rcontinue       reduce using rule 50 (fin_instr -> .)
    Rfunc           reduce using rule 50 (fin_instr -> .)
    Rreturn         reduce using rule 50 (fin_instr -> .)
    Rnumber         reduce using rule 50 (fin_instr -> .)
    Rboolean        reduce using rule 50 (fin_instr -> .)
    Rstring         reduce using rule 50 (fin_instr -> .)
    Rany            reduce using rule 50 (fin_instr -> .)
    Rvoid           reduce using rule 50 (fin_instr -> .)
    $end            reduce using rule 50 (fin_instr -> .)
    LLAVEC          reduce using rule 50 (fin_instr -> .)

    fin_instr                      shift and go to state 270

state 262

    (71) declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista CORC . fin_instr
    (49) fin_instr -> . PUNTOCOMA
    (50) fin_instr -> .

    PUNTOCOMA       shift and go to state 53
    error           reduce using rule 50 (fin_instr -> .)
    Rconsole        reduce using rule 50 (fin_instr -> .)
    Rlet            reduce using rule 50 (fin_instr -> .)
    ID              reduce using rule 50 (fin_instr -> .)
    Rif             reduce using rule 50 (fin_instr -> .)
    Rbreak          reduce using rule 50 (fin_instr -> .)
    Rwhile          reduce using rule 50 (fin_instr -> .)
    Rfor            reduce using rule 50 (fin_instr -> .)
    Rcontinue       reduce using rule 50 (fin_instr -> .)
    Rfunc           reduce using rule 50 (fin_instr -> .)
    Rreturn         reduce using rule 50 (fin_instr -> .)
    Rnumber         reduce using rule 50 (fin_instr -> .)
    Rboolean        reduce using rule 50 (fin_instr -> .)
    Rstring         reduce using rule 50 (fin_instr -> .)
    Rany            reduce using rule 50 (fin_instr -> .)
    Rvoid           reduce using rule 50 (fin_instr -> .)
    $end            reduce using rule 50 (fin_instr -> .)
    LLAVEC          reduce using rule 50 (fin_instr -> .)

    fin_instr                      shift and go to state 271

state 263

    (79) d2 -> d2 COMA LLAVEA d1 LLAVEC .

    COMA            reduce using rule 79 (d2 -> d2 COMA LLAVEA d1 LLAVEC .)
    CORC            reduce using rule 79 (d2 -> d2 COMA LLAVEA d1 LLAVEC .)
    LLAVEC          reduce using rule 79 (d2 -> d2 COMA LLAVEA d1 LLAVEC .)


state 264

    (81) d3 -> d3 COMA LLAVEA d2 LLAVEC .

    COMA            reduce using rule 81 (d3 -> d3 COMA LLAVEA d2 LLAVEC .)
    CORC            reduce using rule 81 (d3 -> d3 COMA LLAVEA d2 LLAVEC .)


state 265

    (37) if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA . instrucciones LLAVEC
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion
    (6) instruccion -> . declaracion_sinAsig
    (7) instruccion -> . asignacion
    (8) instruccion -> . if
    (9) instruccion -> . break
    (10) instruccion -> . while
    (11) instruccion -> . tipo_incremento
    (12) instruccion -> . for
    (13) instruccion -> . continue
    (14) instruccion -> . funcion
    (15) instruccion -> . retorno
    (16) instruccion -> . llamada
    (17) instruccion -> . declaracion_arreglo
    (18) instruccion -> . declaracion_arreglo2
    (19) instruccion -> . modificar_arreglo
    (20) instruccion -> . error errores
    (23) imprimir_instr -> . Rconsole PUNTO Rlog PARA imprimir_listas PARC fin_instr
    (26) declaracion -> . Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr
    (27) declaracion -> . Rlet ID IGUAL expresion fin_instr
    (33) declaracion_sinAsig -> . Rlet ID DOSPUNTO tipo fin_instr
    (34) declaracion_sinAsig -> . Rlet ID fin_instr
    (35) asignacion -> . ID IGUAL expresion fin_instr
    (36) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC
    (37) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC
    (38) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse if
    (39) break -> . Rbreak fin_instr
    (40) while -> . Rwhile PARA expresion PARC LLAVEA instrucciones LLAVEC
    (41) tipo_incremento -> . ID MASMAS fin_instr
    (42) tipo_incremento -> . ID MENOSMENOS fin_instr
    (43) for -> . Rfor PARA declar_asig expresion fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC
    (48) continue -> . Rcontinue fin_instr
    (51) funcion -> . Rfunc ID PARA parametros PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (52) funcion -> . Rfunc ID PARA PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (53) funcion -> . Rfunc ID PARA parametros PARC LLAVEA instrucciones LLAVEC
    (54) funcion -> . Rfunc ID PARA PARC LLAVEA instrucciones LLAVEC
    (59) retorno -> . Rreturn expresion fin_instr
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr
    (65) declaracion_arreglo -> . Rlet ID DOSPUNTO tipo lista_expresiones fin_instr
    (70) declaracion_arreglo2 -> . Rlet ID IGUAL CORA tipo_lista CORC fin_instr
    (71) declaracion_arreglo2 -> . Rlet ID DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista CORC fin_instr
    (72) declaracion_arreglo2 -> . Rlet ID DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista CORC fin_instr
    (73) declaracion_arreglo2 -> . tipo lista_Dim ID IGUAL ID
    (83) modificar_arreglo -> . ID lista_expresiones IGUAL expresion fin_instr
    (28) tipo -> . Rnumber
    (29) tipo -> . Rboolean
    (30) tipo -> . Rstring
    (31) tipo -> . Rany
    (32) tipo -> . Rvoid

    error           shift and go to state 20
    Rconsole        shift and go to state 21
    Rlet            shift and go to state 22
    ID              shift and go to state 23
    Rif             shift and go to state 25
    Rbreak          shift and go to state 26
    Rwhile          shift and go to state 27
    Rfor            shift and go to state 28
    Rcontinue       shift and go to state 29
    Rfunc           shift and go to state 30
    Rreturn         shift and go to state 31
    Rnumber         shift and go to state 32
    Rboolean        shift and go to state 33
    Rstring         shift and go to state 34
    Rany            shift and go to state 35
    Rvoid           shift and go to state 36

    instrucciones                  shift and go to state 272
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    declaracion                    shift and go to state 5
    declaracion_sinAsig            shift and go to state 6
    asignacion                     shift and go to state 7
    if                             shift and go to state 8
    break                          shift and go to state 9
    while                          shift and go to state 10
    tipo_incremento                shift and go to state 11
    for                            shift and go to state 12
    continue                       shift and go to state 13
    funcion                        shift and go to state 14
    retorno                        shift and go to state 15
    llamada                        shift and go to state 16
    declaracion_arreglo            shift and go to state 17
    declaracion_arreglo2           shift and go to state 18
    modificar_arreglo              shift and go to state 19
    tipo                           shift and go to state 24

state 266

    (38) if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse if .

    error           reduce using rule 38 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse if .)
    Rconsole        reduce using rule 38 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse if .)
    Rlet            reduce using rule 38 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse if .)
    ID              reduce using rule 38 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse if .)
    Rif             reduce using rule 38 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse if .)
    Rbreak          reduce using rule 38 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse if .)
    Rwhile          reduce using rule 38 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse if .)
    Rfor            reduce using rule 38 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse if .)
    Rcontinue       reduce using rule 38 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse if .)
    Rfunc           reduce using rule 38 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse if .)
    Rreturn         reduce using rule 38 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse if .)
    Rnumber         reduce using rule 38 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse if .)
    Rboolean        reduce using rule 38 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse if .)
    Rstring         reduce using rule 38 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse if .)
    Rany            reduce using rule 38 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse if .)
    Rvoid           reduce using rule 38 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse if .)
    $end            reduce using rule 38 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse if .)
    LLAVEC          reduce using rule 38 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse if .)


state 267

    (43) for -> Rfor PARA declar_asig expresion fin_instr actualizacion PARC LLAVEA instrucciones . LLAVEC
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion
    (6) instruccion -> . declaracion_sinAsig
    (7) instruccion -> . asignacion
    (8) instruccion -> . if
    (9) instruccion -> . break
    (10) instruccion -> . while
    (11) instruccion -> . tipo_incremento
    (12) instruccion -> . for
    (13) instruccion -> . continue
    (14) instruccion -> . funcion
    (15) instruccion -> . retorno
    (16) instruccion -> . llamada
    (17) instruccion -> . declaracion_arreglo
    (18) instruccion -> . declaracion_arreglo2
    (19) instruccion -> . modificar_arreglo
    (20) instruccion -> . error errores
    (23) imprimir_instr -> . Rconsole PUNTO Rlog PARA imprimir_listas PARC fin_instr
    (26) declaracion -> . Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr
    (27) declaracion -> . Rlet ID IGUAL expresion fin_instr
    (33) declaracion_sinAsig -> . Rlet ID DOSPUNTO tipo fin_instr
    (34) declaracion_sinAsig -> . Rlet ID fin_instr
    (35) asignacion -> . ID IGUAL expresion fin_instr
    (36) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC
    (37) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC
    (38) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse if
    (39) break -> . Rbreak fin_instr
    (40) while -> . Rwhile PARA expresion PARC LLAVEA instrucciones LLAVEC
    (41) tipo_incremento -> . ID MASMAS fin_instr
    (42) tipo_incremento -> . ID MENOSMENOS fin_instr
    (43) for -> . Rfor PARA declar_asig expresion fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC
    (48) continue -> . Rcontinue fin_instr
    (51) funcion -> . Rfunc ID PARA parametros PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (52) funcion -> . Rfunc ID PARA PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (53) funcion -> . Rfunc ID PARA parametros PARC LLAVEA instrucciones LLAVEC
    (54) funcion -> . Rfunc ID PARA PARC LLAVEA instrucciones LLAVEC
    (59) retorno -> . Rreturn expresion fin_instr
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr
    (65) declaracion_arreglo -> . Rlet ID DOSPUNTO tipo lista_expresiones fin_instr
    (70) declaracion_arreglo2 -> . Rlet ID IGUAL CORA tipo_lista CORC fin_instr
    (71) declaracion_arreglo2 -> . Rlet ID DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista CORC fin_instr
    (72) declaracion_arreglo2 -> . Rlet ID DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista CORC fin_instr
    (73) declaracion_arreglo2 -> . tipo lista_Dim ID IGUAL ID
    (83) modificar_arreglo -> . ID lista_expresiones IGUAL expresion fin_instr
    (28) tipo -> . Rnumber
    (29) tipo -> . Rboolean
    (30) tipo -> . Rstring
    (31) tipo -> . Rany
    (32) tipo -> . Rvoid

    LLAVEC          shift and go to state 273
    error           shift and go to state 20
    Rconsole        shift and go to state 21
    Rlet            shift and go to state 22
    ID              shift and go to state 23
    Rif             shift and go to state 25
    Rbreak          shift and go to state 26
    Rwhile          shift and go to state 27
    Rfor            shift and go to state 28
    Rcontinue       shift and go to state 29
    Rfunc           shift and go to state 30
    Rreturn         shift and go to state 31
    Rnumber         shift and go to state 32
    Rboolean        shift and go to state 33
    Rstring         shift and go to state 34
    Rany            shift and go to state 35
    Rvoid           shift and go to state 36

    instruccion                    shift and go to state 37
    imprimir_instr                 shift and go to state 4
    declaracion                    shift and go to state 5
    declaracion_sinAsig            shift and go to state 6
    asignacion                     shift and go to state 7
    if                             shift and go to state 8
    break                          shift and go to state 9
    while                          shift and go to state 10
    tipo_incremento                shift and go to state 11
    for                            shift and go to state 12
    continue                       shift and go to state 13
    funcion                        shift and go to state 14
    retorno                        shift and go to state 15
    llamada                        shift and go to state 16
    declaracion_arreglo            shift and go to state 17
    declaracion_arreglo2           shift and go to state 18
    modificar_arreglo              shift and go to state 19
    tipo                           shift and go to state 24

state 268

    (51) funcion -> Rfunc ID PARA parametros PARC DOSPUNTO tipo LLAVEA instrucciones . LLAVEC
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion
    (6) instruccion -> . declaracion_sinAsig
    (7) instruccion -> . asignacion
    (8) instruccion -> . if
    (9) instruccion -> . break
    (10) instruccion -> . while
    (11) instruccion -> . tipo_incremento
    (12) instruccion -> . for
    (13) instruccion -> . continue
    (14) instruccion -> . funcion
    (15) instruccion -> . retorno
    (16) instruccion -> . llamada
    (17) instruccion -> . declaracion_arreglo
    (18) instruccion -> . declaracion_arreglo2
    (19) instruccion -> . modificar_arreglo
    (20) instruccion -> . error errores
    (23) imprimir_instr -> . Rconsole PUNTO Rlog PARA imprimir_listas PARC fin_instr
    (26) declaracion -> . Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr
    (27) declaracion -> . Rlet ID IGUAL expresion fin_instr
    (33) declaracion_sinAsig -> . Rlet ID DOSPUNTO tipo fin_instr
    (34) declaracion_sinAsig -> . Rlet ID fin_instr
    (35) asignacion -> . ID IGUAL expresion fin_instr
    (36) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC
    (37) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC
    (38) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse if
    (39) break -> . Rbreak fin_instr
    (40) while -> . Rwhile PARA expresion PARC LLAVEA instrucciones LLAVEC
    (41) tipo_incremento -> . ID MASMAS fin_instr
    (42) tipo_incremento -> . ID MENOSMENOS fin_instr
    (43) for -> . Rfor PARA declar_asig expresion fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC
    (48) continue -> . Rcontinue fin_instr
    (51) funcion -> . Rfunc ID PARA parametros PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (52) funcion -> . Rfunc ID PARA PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (53) funcion -> . Rfunc ID PARA parametros PARC LLAVEA instrucciones LLAVEC
    (54) funcion -> . Rfunc ID PARA PARC LLAVEA instrucciones LLAVEC
    (59) retorno -> . Rreturn expresion fin_instr
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr
    (65) declaracion_arreglo -> . Rlet ID DOSPUNTO tipo lista_expresiones fin_instr
    (70) declaracion_arreglo2 -> . Rlet ID IGUAL CORA tipo_lista CORC fin_instr
    (71) declaracion_arreglo2 -> . Rlet ID DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista CORC fin_instr
    (72) declaracion_arreglo2 -> . Rlet ID DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista CORC fin_instr
    (73) declaracion_arreglo2 -> . tipo lista_Dim ID IGUAL ID
    (83) modificar_arreglo -> . ID lista_expresiones IGUAL expresion fin_instr
    (28) tipo -> . Rnumber
    (29) tipo -> . Rboolean
    (30) tipo -> . Rstring
    (31) tipo -> . Rany
    (32) tipo -> . Rvoid

    LLAVEC          shift and go to state 274
    error           shift and go to state 20
    Rconsole        shift and go to state 21
    Rlet            shift and go to state 22
    ID              shift and go to state 23
    Rif             shift and go to state 25
    Rbreak          shift and go to state 26
    Rwhile          shift and go to state 27
    Rfor            shift and go to state 28
    Rcontinue       shift and go to state 29
    Rfunc           shift and go to state 30
    Rreturn         shift and go to state 31
    Rnumber         shift and go to state 32
    Rboolean        shift and go to state 33
    Rstring         shift and go to state 34
    Rany            shift and go to state 35
    Rvoid           shift and go to state 36

    tipo                           shift and go to state 24
    instruccion                    shift and go to state 37
    imprimir_instr                 shift and go to state 4
    declaracion                    shift and go to state 5
    declaracion_sinAsig            shift and go to state 6
    asignacion                     shift and go to state 7
    if                             shift and go to state 8
    break                          shift and go to state 9
    while                          shift and go to state 10
    tipo_incremento                shift and go to state 11
    for                            shift and go to state 12
    continue                       shift and go to state 13
    funcion                        shift and go to state 14
    retorno                        shift and go to state 15
    llamada                        shift and go to state 16
    declaracion_arreglo            shift and go to state 17
    declaracion_arreglo2           shift and go to state 18
    modificar_arreglo              shift and go to state 19

state 269

    (52) funcion -> Rfunc ID PARA PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC .

    error           reduce using rule 52 (funcion -> Rfunc ID PARA PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC .)
    Rconsole        reduce using rule 52 (funcion -> Rfunc ID PARA PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC .)
    Rlet            reduce using rule 52 (funcion -> Rfunc ID PARA PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC .)
    ID              reduce using rule 52 (funcion -> Rfunc ID PARA PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC .)
    Rif             reduce using rule 52 (funcion -> Rfunc ID PARA PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC .)
    Rbreak          reduce using rule 52 (funcion -> Rfunc ID PARA PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC .)
    Rwhile          reduce using rule 52 (funcion -> Rfunc ID PARA PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC .)
    Rfor            reduce using rule 52 (funcion -> Rfunc ID PARA PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC .)
    Rcontinue       reduce using rule 52 (funcion -> Rfunc ID PARA PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC .)
    Rfunc           reduce using rule 52 (funcion -> Rfunc ID PARA PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC .)
    Rreturn         reduce using rule 52 (funcion -> Rfunc ID PARA PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC .)
    Rnumber         reduce using rule 52 (funcion -> Rfunc ID PARA PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC .)
    Rboolean        reduce using rule 52 (funcion -> Rfunc ID PARA PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC .)
    Rstring         reduce using rule 52 (funcion -> Rfunc ID PARA PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC .)
    Rany            reduce using rule 52 (funcion -> Rfunc ID PARA PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC .)
    Rvoid           reduce using rule 52 (funcion -> Rfunc ID PARA PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC .)
    $end            reduce using rule 52 (funcion -> Rfunc ID PARA PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC .)
    LLAVEC          reduce using rule 52 (funcion -> Rfunc ID PARA PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC .)


state 270

    (72) declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista CORC fin_instr .

    error           reduce using rule 72 (declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista CORC fin_instr .)
    Rconsole        reduce using rule 72 (declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista CORC fin_instr .)
    Rlet            reduce using rule 72 (declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista CORC fin_instr .)
    ID              reduce using rule 72 (declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista CORC fin_instr .)
    Rif             reduce using rule 72 (declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista CORC fin_instr .)
    Rbreak          reduce using rule 72 (declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista CORC fin_instr .)
    Rwhile          reduce using rule 72 (declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista CORC fin_instr .)
    Rfor            reduce using rule 72 (declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista CORC fin_instr .)
    Rcontinue       reduce using rule 72 (declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista CORC fin_instr .)
    Rfunc           reduce using rule 72 (declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista CORC fin_instr .)
    Rreturn         reduce using rule 72 (declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista CORC fin_instr .)
    Rnumber         reduce using rule 72 (declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista CORC fin_instr .)
    Rboolean        reduce using rule 72 (declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista CORC fin_instr .)
    Rstring         reduce using rule 72 (declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista CORC fin_instr .)
    Rany            reduce using rule 72 (declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista CORC fin_instr .)
    Rvoid           reduce using rule 72 (declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista CORC fin_instr .)
    $end            reduce using rule 72 (declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista CORC fin_instr .)
    LLAVEC          reduce using rule 72 (declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista CORC fin_instr .)


state 271

    (71) declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista CORC fin_instr .

    error           reduce using rule 71 (declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista CORC fin_instr .)
    Rconsole        reduce using rule 71 (declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista CORC fin_instr .)
    Rlet            reduce using rule 71 (declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista CORC fin_instr .)
    ID              reduce using rule 71 (declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista CORC fin_instr .)
    Rif             reduce using rule 71 (declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista CORC fin_instr .)
    Rbreak          reduce using rule 71 (declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista CORC fin_instr .)
    Rwhile          reduce using rule 71 (declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista CORC fin_instr .)
    Rfor            reduce using rule 71 (declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista CORC fin_instr .)
    Rcontinue       reduce using rule 71 (declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista CORC fin_instr .)
    Rfunc           reduce using rule 71 (declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista CORC fin_instr .)
    Rreturn         reduce using rule 71 (declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista CORC fin_instr .)
    Rnumber         reduce using rule 71 (declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista CORC fin_instr .)
    Rboolean        reduce using rule 71 (declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista CORC fin_instr .)
    Rstring         reduce using rule 71 (declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista CORC fin_instr .)
    Rany            reduce using rule 71 (declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista CORC fin_instr .)
    Rvoid           reduce using rule 71 (declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista CORC fin_instr .)
    $end            reduce using rule 71 (declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista CORC fin_instr .)
    LLAVEC          reduce using rule 71 (declaracion_arreglo2 -> Rlet ID DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista CORC fin_instr .)


state 272

    (37) if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones . LLAVEC
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion
    (6) instruccion -> . declaracion_sinAsig
    (7) instruccion -> . asignacion
    (8) instruccion -> . if
    (9) instruccion -> . break
    (10) instruccion -> . while
    (11) instruccion -> . tipo_incremento
    (12) instruccion -> . for
    (13) instruccion -> . continue
    (14) instruccion -> . funcion
    (15) instruccion -> . retorno
    (16) instruccion -> . llamada
    (17) instruccion -> . declaracion_arreglo
    (18) instruccion -> . declaracion_arreglo2
    (19) instruccion -> . modificar_arreglo
    (20) instruccion -> . error errores
    (23) imprimir_instr -> . Rconsole PUNTO Rlog PARA imprimir_listas PARC fin_instr
    (26) declaracion -> . Rlet ID DOSPUNTO tipo IGUAL expresion fin_instr
    (27) declaracion -> . Rlet ID IGUAL expresion fin_instr
    (33) declaracion_sinAsig -> . Rlet ID DOSPUNTO tipo fin_instr
    (34) declaracion_sinAsig -> . Rlet ID fin_instr
    (35) asignacion -> . ID IGUAL expresion fin_instr
    (36) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC
    (37) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC
    (38) if -> . Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse if
    (39) break -> . Rbreak fin_instr
    (40) while -> . Rwhile PARA expresion PARC LLAVEA instrucciones LLAVEC
    (41) tipo_incremento -> . ID MASMAS fin_instr
    (42) tipo_incremento -> . ID MENOSMENOS fin_instr
    (43) for -> . Rfor PARA declar_asig expresion fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC
    (48) continue -> . Rcontinue fin_instr
    (51) funcion -> . Rfunc ID PARA parametros PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (52) funcion -> . Rfunc ID PARA PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC
    (53) funcion -> . Rfunc ID PARA parametros PARC LLAVEA instrucciones LLAVEC
    (54) funcion -> . Rfunc ID PARA PARC LLAVEA instrucciones LLAVEC
    (59) retorno -> . Rreturn expresion fin_instr
    (60) llamada -> . ID PARA parametros_llamada PARC fin_instr
    (61) llamada -> . ID PARA PARC fin_instr
    (65) declaracion_arreglo -> . Rlet ID DOSPUNTO tipo lista_expresiones fin_instr
    (70) declaracion_arreglo2 -> . Rlet ID IGUAL CORA tipo_lista CORC fin_instr
    (71) declaracion_arreglo2 -> . Rlet ID DOSPUNTO tipo lista_Dim IGUAL CORA tipo_lista CORC fin_instr
    (72) declaracion_arreglo2 -> . Rlet ID DOSPUNTO tipo lista_expresiones IGUAL CORA tipo_lista CORC fin_instr
    (73) declaracion_arreglo2 -> . tipo lista_Dim ID IGUAL ID
    (83) modificar_arreglo -> . ID lista_expresiones IGUAL expresion fin_instr
    (28) tipo -> . Rnumber
    (29) tipo -> . Rboolean
    (30) tipo -> . Rstring
    (31) tipo -> . Rany
    (32) tipo -> . Rvoid

    LLAVEC          shift and go to state 275
    error           shift and go to state 20
    Rconsole        shift and go to state 21
    Rlet            shift and go to state 22
    ID              shift and go to state 23
    Rif             shift and go to state 25
    Rbreak          shift and go to state 26
    Rwhile          shift and go to state 27
    Rfor            shift and go to state 28
    Rcontinue       shift and go to state 29
    Rfunc           shift and go to state 30
    Rreturn         shift and go to state 31
    Rnumber         shift and go to state 32
    Rboolean        shift and go to state 33
    Rstring         shift and go to state 34
    Rany            shift and go to state 35
    Rvoid           shift and go to state 36

    instruccion                    shift and go to state 37
    imprimir_instr                 shift and go to state 4
    declaracion                    shift and go to state 5
    declaracion_sinAsig            shift and go to state 6
    asignacion                     shift and go to state 7
    if                             shift and go to state 8
    break                          shift and go to state 9
    while                          shift and go to state 10
    tipo_incremento                shift and go to state 11
    for                            shift and go to state 12
    continue                       shift and go to state 13
    funcion                        shift and go to state 14
    retorno                        shift and go to state 15
    llamada                        shift and go to state 16
    declaracion_arreglo            shift and go to state 17
    declaracion_arreglo2           shift and go to state 18
    modificar_arreglo              shift and go to state 19
    tipo                           shift and go to state 24

state 273

    (43) for -> Rfor PARA declar_asig expresion fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC .

    error           reduce using rule 43 (for -> Rfor PARA declar_asig expresion fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC .)
    Rconsole        reduce using rule 43 (for -> Rfor PARA declar_asig expresion fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC .)
    Rlet            reduce using rule 43 (for -> Rfor PARA declar_asig expresion fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC .)
    ID              reduce using rule 43 (for -> Rfor PARA declar_asig expresion fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC .)
    Rif             reduce using rule 43 (for -> Rfor PARA declar_asig expresion fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC .)
    Rbreak          reduce using rule 43 (for -> Rfor PARA declar_asig expresion fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC .)
    Rwhile          reduce using rule 43 (for -> Rfor PARA declar_asig expresion fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC .)
    Rfor            reduce using rule 43 (for -> Rfor PARA declar_asig expresion fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC .)
    Rcontinue       reduce using rule 43 (for -> Rfor PARA declar_asig expresion fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC .)
    Rfunc           reduce using rule 43 (for -> Rfor PARA declar_asig expresion fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC .)
    Rreturn         reduce using rule 43 (for -> Rfor PARA declar_asig expresion fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC .)
    Rnumber         reduce using rule 43 (for -> Rfor PARA declar_asig expresion fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC .)
    Rboolean        reduce using rule 43 (for -> Rfor PARA declar_asig expresion fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC .)
    Rstring         reduce using rule 43 (for -> Rfor PARA declar_asig expresion fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC .)
    Rany            reduce using rule 43 (for -> Rfor PARA declar_asig expresion fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC .)
    Rvoid           reduce using rule 43 (for -> Rfor PARA declar_asig expresion fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC .)
    $end            reduce using rule 43 (for -> Rfor PARA declar_asig expresion fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC .)
    LLAVEC          reduce using rule 43 (for -> Rfor PARA declar_asig expresion fin_instr actualizacion PARC LLAVEA instrucciones LLAVEC .)


state 274

    (51) funcion -> Rfunc ID PARA parametros PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC .

    error           reduce using rule 51 (funcion -> Rfunc ID PARA parametros PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC .)
    Rconsole        reduce using rule 51 (funcion -> Rfunc ID PARA parametros PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC .)
    Rlet            reduce using rule 51 (funcion -> Rfunc ID PARA parametros PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC .)
    ID              reduce using rule 51 (funcion -> Rfunc ID PARA parametros PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC .)
    Rif             reduce using rule 51 (funcion -> Rfunc ID PARA parametros PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC .)
    Rbreak          reduce using rule 51 (funcion -> Rfunc ID PARA parametros PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC .)
    Rwhile          reduce using rule 51 (funcion -> Rfunc ID PARA parametros PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC .)
    Rfor            reduce using rule 51 (funcion -> Rfunc ID PARA parametros PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC .)
    Rcontinue       reduce using rule 51 (funcion -> Rfunc ID PARA parametros PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC .)
    Rfunc           reduce using rule 51 (funcion -> Rfunc ID PARA parametros PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC .)
    Rreturn         reduce using rule 51 (funcion -> Rfunc ID PARA parametros PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC .)
    Rnumber         reduce using rule 51 (funcion -> Rfunc ID PARA parametros PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC .)
    Rboolean        reduce using rule 51 (funcion -> Rfunc ID PARA parametros PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC .)
    Rstring         reduce using rule 51 (funcion -> Rfunc ID PARA parametros PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC .)
    Rany            reduce using rule 51 (funcion -> Rfunc ID PARA parametros PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC .)
    Rvoid           reduce using rule 51 (funcion -> Rfunc ID PARA parametros PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC .)
    $end            reduce using rule 51 (funcion -> Rfunc ID PARA parametros PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC .)
    LLAVEC          reduce using rule 51 (funcion -> Rfunc ID PARA parametros PARC DOSPUNTO tipo LLAVEA instrucciones LLAVEC .)


state 275

    (37) if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC .

    error           reduce using rule 37 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC .)
    Rconsole        reduce using rule 37 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC .)
    Rlet            reduce using rule 37 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC .)
    ID              reduce using rule 37 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC .)
    Rif             reduce using rule 37 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC .)
    Rbreak          reduce using rule 37 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC .)
    Rwhile          reduce using rule 37 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC .)
    Rfor            reduce using rule 37 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC .)
    Rcontinue       reduce using rule 37 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC .)
    Rfunc           reduce using rule 37 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC .)
    Rreturn         reduce using rule 37 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC .)
    Rnumber         reduce using rule 37 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC .)
    Rboolean        reduce using rule 37 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC .)
    Rstring         reduce using rule 37 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC .)
    Rany            reduce using rule 37 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC .)
    Rvoid           reduce using rule 37 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC .)
    $end            reduce using rule 37 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC .)
    LLAVEC          reduce using rule 37 (if -> Rif PARA expresion PARC LLAVEA instrucciones LLAVEC Relse LLAVEA instrucciones LLAVEC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PARA in state 67 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 74 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 78 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 118 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 121 resolved as shift
WARNING: shift/reduce conflict for MAS in state 189 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 189 resolved as shift
WARNING: shift/reduce conflict for POR in state 189 resolved as shift
WARNING: shift/reduce conflict for DIV in state 189 resolved as shift
WARNING: shift/reduce conflict for POT in state 189 resolved as shift
WARNING: shift/reduce conflict for MOD in state 189 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 189 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 189 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 189 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 189 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 189 resolved as shift
WARNING: shift/reduce conflict for DISTINTO in state 189 resolved as shift
WARNING: shift/reduce conflict for AND in state 189 resolved as shift
WARNING: shift/reduce conflict for OR in state 189 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 199 resolved as shift
